{"version":3,"file":"js/97.6d3b2de0.js","mappings":"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","sources":["webpack://Handsy.io/../src/Layout.ts","webpack://Handsy.io/../src/_sha2.ts","webpack://Handsy.io/../src/sha512.ts","webpack://Handsy.io/../../src/abstract/modular.ts","webpack://Handsy.io/../../src/abstract/curve.ts","webpack://Handsy.io/../../src/abstract/edwards.ts","webpack://Handsy.io/../src/ed25519.ts","webpack://Handsy.io/../src/sha256.ts","webpack://Handsy.io/../src/error.ts","webpack://Handsy.io/../src/utils.ts","webpack://Handsy.io/../src/struct.ts","webpack://Handsy.io/../src/structs/utilities.ts","webpack://Handsy.io/../src/structs/types.ts","webpack://Handsy.io/../src/structs/coercions.ts","webpack://Handsy.io/../src/hmac.ts","webpack://Handsy.io/../../src/abstract/weierstrass.ts","webpack://Handsy.io/../src/_shortw_utils.ts","webpack://Handsy.io/../src/secp256k1.ts","webpack://Handsy.io/../src/utils/ed25519.ts","webpack://Handsy.io/../src/utils/to-buffer.ts","webpack://Handsy.io/../src/utils/borsh-schema.ts","webpack://Handsy.io/../src/publickey.ts","webpack://Handsy.io/../src/bpf-loader-deprecated.ts","webpack://Handsy.io/../src/transaction/constants.ts","webpack://Handsy.io/../src/transaction/expiry-custom-errors.ts","webpack://Handsy.io/../src/message/account-keys.ts","webpack://Handsy.io/../src/layout.ts","webpack://Handsy.io/../src/utils/shortvec-encoding.ts","webpack://Handsy.io/../src/utils/assert.ts","webpack://Handsy.io/../src/message/compiled-keys.ts","webpack://Handsy.io/../src/message/legacy.ts","webpack://Handsy.io/../src/message/v0.ts","webpack://Handsy.io/../src/message/versioned.ts","webpack://Handsy.io/../src/transaction/legacy.ts","webpack://Handsy.io/../src/transaction/versioned.ts","webpack://Handsy.io/../src/timing.ts","webpack://Handsy.io/../src/sysvar.ts","webpack://Handsy.io/../src/utils/send-and-confirm-transaction.ts","webpack://Handsy.io/../src/utils/sleep.ts","webpack://Handsy.io/../src/instruction.ts","webpack://Handsy.io/../src/fee-calculator.ts","webpack://Handsy.io/../src/nonce-account.ts","webpack://Handsy.io/../src/utils/bigint.ts","webpack://Handsy.io/../src/programs/system.ts","webpack://Handsy.io/../src/loader.ts","webpack://Handsy.io/../src/bpf-loader.ts","webpack://Handsy.io/../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","webpack://Handsy.io/../src/__forks__/browser/fetch-impl.ts","webpack://Handsy.io/../src/programs/address-lookup-table/state.ts","webpack://Handsy.io/../src/connection.ts","webpack://Handsy.io/../src/keypair.ts","webpack://Handsy.io/../src/programs/address-lookup-table/index.ts","webpack://Handsy.io/../src/programs/compute-budget.ts","webpack://Handsy.io/../src/programs/ed25519.ts","webpack://Handsy.io/../src/utils/secp256k1.ts","webpack://Handsy.io/../src/programs/secp256k1.ts","webpack://Handsy.io/../src/programs/stake.ts","webpack://Handsy.io/../src/programs/vote.ts","webpack://Handsy.io/../src/validator-info.ts","webpack://Handsy.io/../src/vote-account.ts","webpack://Handsy.io/./node_modules/@toruslabs/tweetnacl-js/nacl-fast.js","webpack://Handsy.io/../src/safeEventEmitter.ts","webpack://Handsy.io/../src/serializableError.ts","webpack://Handsy.io/../src/jrpc.ts","webpack://Handsy.io/../src/jrpcEngine.ts","webpack://Handsy.io/../src/mux.ts","webpack://Handsy.io/../src/browserStorage.ts","webpack://Handsy.io/../src/constants.ts","webpack://Handsy.io/../src/index.ts","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/jwt-decode/build/esm/index.js","webpack://Handsy.io/../src/chain/IChainInterface.ts","webpack://Handsy.io/../src/errors/index.ts","webpack://Handsy.io/../src/wallet/index.ts","webpack://Handsy.io/../src/adapter/IAdapter.ts","webpack://Handsy.io/../src/loglevel.ts","webpack://Handsy.io/../src/rpc/JrpcClient.ts","webpack://Handsy.io/../src/rpc/solanaRpcMiddlewares.ts","webpack://Handsy.io/../src/providers/injectedProviders/base/baseInjectedProvider.ts","webpack://Handsy.io/../src/providers/injectedProviders/base/providerHandlers.ts","webpack://Handsy.io/../src/providers/injectedProviders/injectedProviderProxy.ts","webpack://Handsy.io/../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","webpack://Handsy.io/../src/providers/injectedProviders/torus/providerHandlers.ts","webpack://Handsy.io/../src/providers/injectedProviders/torus/torusInjectedProvider.ts","webpack://Handsy.io/../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","webpack://Handsy.io/../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/base-x/src/index.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/bs58/index.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/compose.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/duplex.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/duplexify.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/from.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/legacy.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/operators.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/passthrough.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/readable.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/state.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/transform.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/utils.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/writable.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/validators.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/browser.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/errors.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/primordials.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/util.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/stream.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/stream/promises.js","webpack://Handsy.io/./node_modules/borsh/lib/index.js","webpack://Handsy.io/./node_modules/jayson/lib/client/browser/index.js","webpack://Handsy.io/./node_modules/jayson/lib/generateRequest.js","webpack://Handsy.io/./node_modules/rpc-websockets/dist/lib/client.js","webpack://Handsy.io/./node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","webpack://Handsy.io/./node_modules/rpc-websockets/dist/lib/utils.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/createClass.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://Handsy.io/./node_modules/@babel/runtime/regenerator/index.js","webpack://Handsy.io/./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,null,null,null,null,null,null,null,"/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n",null,null,null,null,"import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: nullable(ConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack: pack,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { Duplex } from \"readable-stream\";\n\nimport { AsyncJRPCMiddleware, ConsoleLike, IdMap, JRPCMiddleware, JRPCRequest, JRPCResponse, Json, ReturnHandlerCallback } from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error: unknown) {\n      log.error(`OpenLogin - RPC Error thrown: ${(error as Error).message}`, error);\n      res.error = new SerializableError({ code: -32603, message: (error as Error).message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err: Error;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err: unknown) {\n      err = _err as Error;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\nexport type ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = Math.random().toString(36).slice(2);\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (err: unknown) {\n      const error = err as Error;\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import { rpcErrors, serializeError } from \"@metamask/rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport {\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCEngineReturnHandler,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  Maybe,\n  RequestArguments,\n  SendCallBack,\n} from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[],\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error: unknown) {\n        end(error as Error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(_req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error: unknown) {\n            return handlerCallback(error as Error);\n          }\n          return handlerCallback();\n        });\n      } catch (error: unknown) {\n        return end(error as Error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error: unknown) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error as Error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read(): undefined {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error.toString(),\n          code: res.error?.code || -32603,\n        },\n      });\n\n      throw rpcErrors.internal(err);\n    }\n    return res.result as U;\n  };\n\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: unknown, providerRes: JRPCResponse<U>) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: Math.random().toString(36).slice(2),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error: unknown) {\n      return end(error as Error);\n    }\n  };\n}\n","import eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport { BufferEncoding } from \"./interfaces\";\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import { IStorage, storageAvailable } from \"./utils\";\n\nexport class MemoryStore implements IStorage {\n  store: Record<string, string> = {};\n\n  getItem(key: string): string {\n    return this.store[key] || null;\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n\nexport class BrowserStorage {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: BrowserStorage;\n\n  public storage: IStorage;\n\n  private _storeKey: string;\n\n  private constructor(storeKey: string, storage: IStorage) {\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n\n  static getInstance(key: string, storageKey: \"session\" | \"local\" = \"local\"): BrowserStorage {\n    if (!this.instance) {\n      let storage: IStorage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n\n      this.instance = new this(key, storage);\n    }\n    return this.instance;\n  }\n\n  toJSON(): string {\n    return this.storage.getItem(this._storeKey);\n  }\n\n  resetStore(): Record<string, unknown> {\n    const currStore = this.getStore();\n    this.storage.setItem(this._storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore(): Record<string, unknown> {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n\n  get<T>(key: string): T {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n\n  set<T>(key: string, value: T): void {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n","import { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from \"@toruslabs/constants\";\n\nexport const storeKey = \"openlogin_store\";\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport const OPENLOGIN_NETWORK = {\n  ...TORUS_SAPPHIRE_NETWORK,\n  ...TORUS_LEGACY_NETWORK,\n} as const;\n\nexport const SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\",\n} as const;\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\",\n} as const;\n\nexport const MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\",\n} as const;\n\nexport const OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MODIFY_MFA: \"modify_mfa\",\n} as const;\n\nexport const BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\",\n} as const;\n\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK };\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = (typeof CHAIN_NAMESPACES)[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  XRPL: \"xrpl\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = (typeof ADAPTER_NAMESPACES)[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n\n  /**\n   * web socket target Url for the chain\n   */\n  wsTarget?: string;\n\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n  /**\n   * Number of decimals for the currency ticker (e.g: 18)\n   */\n  decimals?: number;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n    5115: \"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa\",\n    5116: \"Chain config has not been added. Please add the chain config before calling switchChain\",\n    5117: \"Unsupported operation\",\n    5118: \"useCoreKitKey flag is enabled but coreKitKey is not available\",\n    5119: \"User not logged in.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}. ${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n  public static mfaEnabled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5115, extraMessage);\n  }\n\n  public static chainConfigNotAdded(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5116, extraMessage);\n  }\n\n  public static unsupportedOperation(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5117, extraMessage);\n  }\n\n  public static coreKitKeyNotFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5118, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5119, extraMessage);\n  }\n}\n\nexport class WalletOperationsError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5201: \"Provided chainId is not allowed\",\n    5202: \"This operation is not allowed\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletOperationsError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletOperationsError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static chainIDNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5201, extraMessage);\n  }\n\n  public static operationNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5202, extraMessage);\n  }\n\n  public static chainNamespaceNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5203, extraMessage);\n  }\n}\n\nexport class WalletProviderError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5301: \"Expected a single, non-array, object argument.\",\n    5302: \"'args.method' must be a non-empty string.\",\n    5303: \"'args.params' must be an object or array if provided.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletProviderError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletProviderError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static invalidRequestArgs(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5301, extraMessage);\n  }\n\n  public static invalidRequestMethod(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5302, extraMessage);\n  }\n\n  public static invalidRequestParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5303, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = (typeof WALLET_ADAPTERS)[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = (typeof SOLANA_ADAPTERS)[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = (typeof EVM_ADAPTERS)[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = (typeof MULTI_CHAIN_ADAPTERS)[keyof typeof MULTI_CHAIN_ADAPTERS];\n\nexport const ADAPTER_NAMES = {\n  [MULTI_CHAIN_ADAPTERS.OPENLOGIN]: \"OpenLogin\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V2]: \"Wallet Connect v2\",\n  [SOLANA_ADAPTERS.TORUS_SOLANA]: \"Torus\",\n  [SOLANA_ADAPTERS.PHANTOM]: \"Phantom\",\n  [SOLANA_ADAPTERS.SOLFLARE]: \"Solflare\",\n  [SOLANA_ADAPTERS.SLOPE]: \"Slope\",\n  [EVM_ADAPTERS.TORUS_EVM]: \"Torus\",\n  [EVM_ADAPTERS.METAMASK]: \"Metamask\",\n  [EVM_ADAPTERS.COINBASE]: \"Coinbase\",\n};\n","import { JRPCRequest, JRPCResponse, Maybe, RequestArguments, SafeEventEmitter, SendCallBack } from \"@toruslabs/openlogin-jrpc\";\nimport { OPENLOGIN_NETWORK, OPENLOGIN_NETWORK_TYPE, OpenloginUserInfo } from \"@toruslabs/openlogin-utils\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError, WalletOperationsError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport type WEB3AUTH_NETWORK_TYPE = OPENLOGIN_NETWORK_TYPE;\nexport const WEB3AUTH_NETWORK = OPENLOGIN_NETWORK;\nexport { OPENLOGIN_NETWORK, type OPENLOGIN_NETWORK_TYPE } from \"@toruslabs/openlogin-utils\";\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = (typeof ADAPTER_CATEGORY)[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n  CACHE_CLEAR: \"cache_clear\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = (typeof ADAPTER_STATUS)[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\n\nexport interface BaseAdapterSettings {\n  clientId?: string;\n  sessionTime?: number;\n  chainConfig?: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n  useCoreKitKey?: boolean;\n}\n\nexport interface IProvider extends SafeEventEmitter {\n  get chainId(): string;\n  request<S, R>(args: RequestArguments<S>): Promise<Maybe<R>>;\n  sendAsync<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n  sendAsync<T, U>(req: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n  send<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n}\n\nexport interface IBaseProvider<T> extends IProvider {\n  provider: SafeEventEmitterProvider | null;\n  currentChainConfig: Partial<CustomChainConfig>;\n  setupProvider(provider: T): Promise<void>;\n  addChain(chainConfig: CustomChainConfig): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  updateProviderEngineProxy(provider: SafeEventEmitterProvider): void;\n}\n\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  web3AuthNetwork: OPENLOGIN_NETWORK_TYPE;\n  clientId: string;\n  status: ADAPTER_STATUS_TYPE;\n  provider: IProvider | null;\n  adapterData?: unknown;\n  connnected: boolean;\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<IProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setAdapterSettings(adapterSettings: BaseAdapterSettings): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  public clientId: string;\n\n  public web3AuthNetwork: OPENLOGIN_NETWORK_TYPE = OPENLOGIN_NETWORK.MAINNET;\n\n  protected rehydrated = false;\n\n  // should be added in constructor or from setAdapterSettings function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  protected knownChainConfigs: Record<CustomChainConfig[\"chainId\"], CustomChainConfig> = {};\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  constructor(options: BaseAdapterSettings = {}) {\n    super();\n    this.setAdapterSettings(options);\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get connnected(): boolean {\n    return this.status === ADAPTER_STATUS.CONNECTED;\n  }\n\n  public abstract get provider(): IProvider | null;\n\n  public setAdapterSettings(options: BaseAdapterSettings): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n    if (options?.web3AuthNetwork) {\n      this.web3AuthNetwork = options.web3AuthNetwork;\n    }\n    const customChainConfig = options.chainConfig;\n    if (customChainConfig) {\n      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n      // chainId is optional in this function.\n      // we go with mainnet chainId by default.\n      const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n      // NOTE: It is being forced casted to CustomChainConfig to handle OTHER Chainnamespace\n      // where chainConfig is not required.\n      const finalChainConfig = { ...(defaultChainConfig || {}), ...customChainConfig } as CustomChainConfig;\n\n      this.chainConfig = finalChainConfig;\n      this.addChainConfig(finalChainConfig);\n    }\n  }\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V2 && this.status === ADAPTER_STATUS.CONNECTING) return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n  }\n\n  checkInitializationRequirements(): void {\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"Please initialize Web3Auth with a valid clientId in constructor\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    if (!this.chainConfig.rpcTarget && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    }\n\n    if (!this.chainConfig.chainId && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"chainID is required in chainConfig\");\n    }\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  checkDisconnectionRequirements(): void {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n  }\n\n  checkAddChainRequirements(chainConfig: CustomChainConfig, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (this.currentChainNamespace !== chainConfig.chainNamespace) {\n      throw WalletOperationsError.chainNamespaceNotAllowed(\"This adapter doesn't support this chainNamespace\");\n    }\n  }\n\n  checkSwitchChainRequirements({ chainId }: { chainId: string }, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (!this.knownChainConfigs[chainId]) throw WalletLoginError.chainConfigNotAdded(\"Invalid chainId\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  protected addChainConfig(chainConfig: CustomChainConfig): void {\n    const currentConfig = this.knownChainConfigs[chainConfig.chainId];\n    this.knownChainConfigs[chainConfig.chainId] = {\n      ...(currentConfig || {}),\n      ...chainConfig,\n    };\n  }\n\n  protected getChainConfig(chainId: string): CustomChainConfig | null {\n    return this.knownChainConfigs[chainId] || null;\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<IProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n  abstract addChain(chainConfig: CustomChainConfig): Promise<void>;\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport type WalletConnectV2Data = {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n};\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  Block,\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, string> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(\n  providerConfig: Omit<CustomChainConfig, \"chainNamespace\">\n): JRPCMiddleware<unknown, Omit<CustomChainConfig, \"chainNamespace\">> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([\n    createChainIdMiddleware(chainId) as JRPCMiddleware<unknown, unknown>,\n    createProviderConfigMiddleware(providerConfig) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<string[], Block>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware as JRPCMiddleware<unknown, unknown>]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { TransactionOrVersionedTransaction } from \"../interface\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>) => Promise<TransactionOrVersionedTransaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>) => Promise<TransactionOrVersionedTransaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(targetMethod: string, handler: (req: JRPCRequest<T>) => Promise<U>): JRPCMiddleware<T, U> {\n  return createAsyncMiddleware<T, U>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: TransactionOrVersionedTransaction }, TransactionOrVersionedTransaction>(\n      \"signTransaction\",\n      signTransaction\n    ) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ message: TransactionOrVersionedTransaction }, { signature: string }>(\n      \"signAndSendTransaction\",\n      signAndSendTransaction\n    ) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ message: TransactionOrVersionedTransaction[] }, TransactionOrVersionedTransaction[]>(\n      \"signAllTransactions\",\n      signAllTransactions\n    ) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<void, string>(\"private_key\", getPrivateKey) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\n","import { JRPCEngine, JRPCMiddleware, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    throw WalletLoginError.unsupportedOperation(\"Chain switching is not supported by this adapter\");\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\n\nimport { IBaseWalletProvider, TransactionOrVersionedTransaction } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<TransactionOrVersionedTransaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: string }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display as \"utf8\" | \"hex\");\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>): Promise<TransactionOrVersionedTransaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request(req);\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport { ITorusWalletProvider, TransactionOrVersionedTransaction } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<unknown, string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<unknown, string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<TransactionOrVersionedTransaction> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>): Promise<TransactionOrVersionedTransaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerErrors } from \"@metamask/rpc-errors\";\nimport { JRPCEngine, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    // overrides the base provider implementation\n    await this.provider.request({\n      method: \"switchSolanaChain\",\n      params: [{ chainId: params.chainId }],\n    });\n  }\n\n  public async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    super.addChain(chainConfig);\n    await this.provider.request({\n      method: \"addNewChainConfig\",\n      params: [\n        {\n          chainId: chainConfig.chainId,\n          chainName: chainConfig.displayName,\n          rpcUrls: [chainConfig.rpcTarget],\n          blockExplorerUrls: [chainConfig.blockExplorer],\n          nativeCurrency: {\n            name: chainConfig.tickerName,\n            symbol: chainConfig.ticker,\n            decimals: chainConfig.decimals || 18,\n          },\n        },\n      ],\n    });\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw providerErrors.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<never, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.emit(\"connect\", { chainId: this.state.chainId });\n    this.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { Keypair, VersionedTransaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nimport { TransactionOrVersionedTransaction } from \"../../interface\";\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<TransactionOrVersionedTransaction> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      if ((transaction as VersionedTransaction).version !== undefined || transaction instanceof VersionedTransaction) {\n        (transaction as VersionedTransaction).sign([keyPair]);\n      } else {\n        transaction.partialSign(keyPair);\n      }\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      if ((transaction as VersionedTransaction).version !== undefined || transaction instanceof VersionedTransaction) {\n        (transaction as VersionedTransaction).sign([keyPair]);\n      } else {\n        transaction.partialSign(keyPair);\n      }\n      const sig = await _providerEngineProxy.request<[string, { encoding: string; preflightCommitment: string }], string>({\n        method: \"sendTransaction\",\n        params: [Buffer.from(transaction.serialize()).toString(\"base64\"), { encoding: \"base64\", preflightCommitment: \"confirmed\" }],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>): Promise<TransactionOrVersionedTransaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        if ((transaction as VersionedTransaction).version !== undefined || transaction instanceof VersionedTransaction) {\n          (transaction as VersionedTransaction).sign([keyPair]);\n        } else {\n          transaction.partialSign(keyPair);\n        }\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { getED25519Key } from \"@toruslabs/openlogin-ed25519\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw providerErrors.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<never, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public getEd25519Key(privateKey: string): string {\n    return getED25519Key(privateKey).sk.toString(\"hex\").padStart(128, \"0\");\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<never, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<never, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<never, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<[], string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.emit(\"chainChanged\", this.state.chainId);\n      this.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw rpcErrors.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw rpcErrors.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw rpcErrors.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw rpcErrors.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 9,\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw rpcErrors.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw rpcErrors.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw rpcErrors.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw rpcErrors.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nconst { AbortError, codes } = require('../../ours/errors')\nconst { isNodeStream, isWebStream, kControllerErrorFunction } = require('./utils')\nconst eos = require('./end-of-stream')\nconst { ERR_INVALID_ARG_TYPE } = codes\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n  const onAbort = isNodeStream(stream)\n    ? () => {\n        stream.destroy(\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n    : () => {\n        stream[kControllerErrorFunction](\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    signal.addEventListener('abort', onAbort)\n    eos(stream, () => signal.removeEventListener('abort', onAbort))\n  }\n  return stream\n}\n","'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n","'use strict'\n\nconst { pipeline } = require('./pipeline')\nconst Duplex = require('./duplex')\nconst { destroyer } = require('./destroy')\nconst {\n  isNodeStream,\n  isReadable,\n  isWritable,\n  isWebStream,\n  isTransformStream,\n  isWritableStream,\n  isReadableStream\n} = require('./utils')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\nconst eos = require('./end-of-stream')\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n  const orgStreams = [...streams]\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n    if (\n      n < streams.length - 1 &&\n      !(isReadable(streams[n]) || isReadableStream(streams[n]) || isTransformStream(streams[n]))\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n    if (n > 0 && !(isWritable(streams[n]) || isWritableStream(streams[n]) || isTransformStream(streams[n]))) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!(isWritable(head) || isWritableStream(head) || isTransformStream(head))\n  const readable = !!(isReadable(tail) || isReadableStream(tail) || isTransformStream(tail))\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.writableObjectMode),\n    writable,\n    readable\n  })\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function (chunk, encoding, callback) {\n        if (head.write(chunk, encoding)) {\n          callback()\n        } else {\n          ondrain = callback\n        }\n      }\n      d._final = function (callback) {\n        head.end()\n        onfinish = callback\n      }\n      head.on('drain', function () {\n        if (ondrain) {\n          const cb = ondrain\n          ondrain = null\n          cb()\n        }\n      })\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head\n      const writer = writable.getWriter()\n      d._write = async function (chunk, encoding, callback) {\n        try {\n          await writer.ready\n          writer.write(chunk).catch(() => {})\n          callback()\n        } catch (err) {\n          callback(err)\n        }\n      }\n      d._final = async function (callback) {\n        try {\n          await writer.ready\n          writer.close().catch(() => {})\n          onfinish = callback\n        } catch (err) {\n          callback(err)\n        }\n      }\n    }\n    const toRead = isTransformStream(tail) ? tail.readable : tail\n    eos(toRead, () => {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable', function () {\n        if (onreadable) {\n          const cb = onreadable\n          onreadable = null\n          cb()\n        }\n      })\n      tail.on('end', function () {\n        d.push(null)\n      })\n      d._read = function () {\n        while (true) {\n          const buf = tail.read()\n          if (buf === null) {\n            onreadable = d._read\n            return\n          }\n          if (!d.push(buf)) {\n            return\n          }\n        }\n      }\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail\n      const reader = readable.getReader()\n      d._read = async function () {\n        while (true) {\n          try {\n            const { value, done } = await reader.read()\n            if (!d.push(value)) {\n              return\n            }\n            if (done) {\n              d.push(null)\n              return\n            }\n          } catch {\n            return\n          }\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      if (isNodeStream(tail)) {\n        destroyer(tail, err)\n      }\n    }\n  }\n  return d\n}\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w !== null && w !== undefined && w.emitClose) || (r !== null && r !== undefined && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w !== null && w !== undefined && w.errorEmitted) || (r !== null && r !== undefined && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    return this\n  }\n  if ((r !== null && r !== undefined && r.autoDestroy) || (w !== null && w !== undefined && w.autoDestroy))\n    stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct, err)\n    })\n  } catch (err) {\n    process.nextTick(onConstruct, err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return (stream === null || stream === undefined ? undefined : stream.setHeader) && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\nmodule.exports = Duplex\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype)\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\nlet duplexify\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n  return duplexify(body, 'body')\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\n;('use strict')\nconst bufferModule = require('buffer')\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream\n} = require('./utils')\nconst eos = require('./end-of-stream')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\nconst { destroyer } = require('./destroy')\nconst Duplex = require('./duplex')\nconst Readable = require('./readable')\nconst { createDeferredPromise } = require('../../ours/util')\nconst from = require('./from')\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst { FunctionPrototypeCall } = require('../../ours/primordials')\n\n// This is needed for pre node 17.\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options)\n\n    // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  }\n\n  // TODO: Webstreams\n  // if (isReadableStream(body)) {\n  //   return _duplexify({ readable: Readable.fromWeb(body) });\n  // }\n\n  // TODO: Webstreams\n  // if (isWritableStream(body)) {\n  //   return _duplexify({ writable: Writable.fromWeb(body) });\n  // }\n\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n    const then = value === null || value === undefined ? undefined : value.then\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n        destroy\n      }))\n    }\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  }\n\n  // TODO: Webstreams.\n  // if (\n  //   isReadableStream(body?.readable) &&\n  //   isWritableStream(body?.writable)\n  // ) {\n  //   return Duplexify.fromWeb(body);\n  // }\n\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n  const then = body === null || body === undefined ? undefined : body.then\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n      read() {}\n    }))\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    }\n  }\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n  return d\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\nconst { kEmptyObject, once } = require('../../ours/util')\nconst { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require('../validators')\nconst { Promise, PromisePrototypeThen } = require('../../ours/primordials')\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose,\n  kIsClosedPromise\n} = require('./utils')\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\nconst nop = () => {}\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream, options, callback)\n  }\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  }\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n  const onfinish = () => {\n    writableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n  let readableFinished = isReadableFinished(stream, false)\n  const onend = () => {\n    readableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n  let closed = isClosed(stream)\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    callback.call(stream)\n  }\n  const onclosed = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    callback.call(stream)\n  }\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n  stream.on('close', onclose)\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclosed)\n  }\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  return cleanup\n}\nfunction eosWeb(stream, options, callback) {\n  let isAborted = false\n  let abort = nop\n  if (options.signal) {\n    abort = () => {\n      isAborted = true\n      callback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream, args))\n    }\n  }\n  PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn)\n  return nop\n}\nfunction finished(stream, opts) {\n  var _opts\n  let autoCleanup = false\n  if (opts === null) {\n    opts = kEmptyObject\n  }\n  if ((_opts = opts) !== null && _opts !== undefined && _opts.cleanup) {\n    validateBoolean(opts.cleanup, 'cleanup')\n    autoCleanup = opts.cleanup\n  }\n  return new Promise((resolve, reject) => {\n    const cleanup = eos(stream, opts, (err) => {\n      if (autoCleanup) {\n        cleanup()\n      }\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\nmodule.exports = eos\nmodule.exports.finished = finished\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n","'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\nconst { EventEmitter: EE } = require('events')\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n  source.on('data', ondata)\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n  dest.on('drain', ondrain)\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n  let didOnEnd = false\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup()\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror)\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source)\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest\n}\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn)\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\nmodule.exports = {\n  Stream,\n  prependListener\n}\n","'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst {\n  codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\nconst { finished } = require('./end-of-stream')\nconst staticCompose = require('./compose')\nconst { addAbortSignalNoValidate } = require('./add-abort-signal')\nconst { isWritable, isNodeStream } = require('./utils')\nconst {\n  ArrayPrototypePush,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\nfunction compose(stream, options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream', stream, 'must be writable')\n  }\n  const composedStream = staticCompose(this, stream)\n  if (options !== null && options !== undefined && options.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(options.signal, composedStream)\n  }\n  return composedStream\n}\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let concurrency = 1\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n  validateInteger(concurrency, 'concurrency', 1)\n  return async function* map() {\n    var _options$signal, _options$signal2\n    const ac = new AbortController()\n    const stream = this\n    const queue = []\n    const signal = ac.signal\n    const signalOpt = {\n      signal\n    }\n    const abort = () => ac.abort()\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal = options.signal) !== null &&\n      _options$signal !== undefined &&\n      _options$signal.aborted\n    ) {\n      abort()\n    }\n    options === null || options === undefined\n      ? undefined\n      : (_options$signal2 = options.signal) === null || _options$signal2 === undefined\n      ? undefined\n      : _options$signal2.addEventListener('abort', abort)\n    let next\n    let resume\n    let done = false\n    function onDone() {\n      done = true\n    }\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          var _val\n          if (done) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          try {\n            val = fn(val, signalOpt)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n          if (val === kEmpty) {\n            continue\n          }\n          if (typeof ((_val = val) === null || _val === undefined ? undefined : _val.catch) === 'function') {\n            val.catch(onDone)\n          }\n          queue.push(val)\n          if (next) {\n            next()\n            next = null\n          }\n          if (!done && queue.length && queue.length >= concurrency) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, undefined, onDone)\n        queue.push(val)\n      } finally {\n        var _options$signal3\n        done = true\n        if (next) {\n          next()\n          next = null\n        }\n        options === null || options === undefined\n          ? undefined\n          : (_options$signal3 = options.signal) === null || _options$signal3 === undefined\n          ? undefined\n          : _options$signal3.removeEventListener('abort', abort)\n      }\n    }\n    pump()\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n          if (val === kEof) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          if (val !== kEmpty) {\n            yield val\n          }\n          queue.shift()\n          if (resume) {\n            resume()\n            resume = null\n          }\n        }\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      ac.abort()\n      done = true\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  return async function* asIndexedPairs() {\n    let index = 0\n    for await (const val of this) {\n      var _options$signal4\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal4 = options.signal) !== null &&\n        _options$signal4 !== undefined &&\n        _options$signal4.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n      yield [index++, val]\n    }\n  }.call(this)\n}\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n  return false\n}\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n  return undefined\n}\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this, forEachFn, options));\n}\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n    return kEmpty\n  }\n  return map.call(this, filterFn, options)\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal5\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let hasInitialValue = arguments.length > 1\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal5 = options.signal) !== null &&\n    _options$signal5 !== undefined &&\n    _options$signal5.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n    await finished(this.destroy(err))\n    throw err\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n  let gotAnyItemFromStream = false\n  try {\n    for await (const value of this) {\n      var _options$signal6\n      gotAnyItemFromStream = true\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n  return initialValue\n}\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  const result = []\n  for await (const val of this) {\n    var _options$signal7\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n    ArrayPrototypePush(result, val)\n  }\n  return result\n}\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n  return number\n}\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal8\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal8 = options.signal) !== null &&\n      _options$signal8 !== undefined &&\n      _options$signal8.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal9\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal9 = options.signal) !== null &&\n        _options$signal9 !== undefined &&\n        _options$signal9.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal10\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal10 = options.signal) !== null &&\n      _options$signal10 !== undefined &&\n      _options$signal10.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal11\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal11 = options.signal) !== null &&\n        _options$signal11 !== undefined &&\n        _options$signal11.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- > 0) {\n        yield val\n      } else {\n        return\n      }\n    }\n  }.call(this)\n}\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs,\n  drop,\n  filter,\n  flatMap,\n  map,\n  take,\n  compose\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\nmodule.exports = PassThrough\nconst Transform = require('./transform')\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { ArrayIsArray, Promise, SymbolAsyncIterator } = require('../../ours/primordials')\nconst eos = require('./end-of-stream')\nconst { once } = require('../../ours/util')\nconst destroyImpl = require('./destroy')\nconst Duplex = require('./duplex')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateFunction, validateAbortSignal } = require('../validators')\nconst {\n  isIterable,\n  isReadable,\n  isReadableNodeStream,\n  isNodeStream,\n  isTransformStream,\n  isWebStream,\n  isReadableStream,\n  isReadableEnded\n} = require('./utils')\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nlet PassThrough\nlet Readable\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\nasync function pumpToNode(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n    if (end) {\n      writable.end()\n    }\n    await wait()\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\nasync function pumpToWeb(readable, writable, finish, { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter()\n  try {\n    for await (const chunk of readable) {\n      await writer.ready\n      writer.write(chunk).catch(() => {})\n    }\n    await writer.ready\n    if (end) {\n      await writer.close()\n    }\n    finish()\n  } catch (err) {\n    try {\n      await writer.abort(err)\n      finish(err)\n    } catch (err) {\n      finish(err)\n    }\n  }\n}\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n  function abort() {\n    finishImpl(new AbortError())\n  }\n  outerSignal === null || outerSignal === undefined ? undefined : outerSignal.addEventListener('abort', abort)\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n  function finishImpl(err, final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n    if (!error && !final) {\n      return\n    }\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n    outerSignal === null || outerSignal === undefined ? undefined : outerSignal.removeEventListener('abort', abort)\n    ac.abort()\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n      process.nextTick(callback, error, value)\n    }\n  }\n  let ret\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n      stream.on('error', onError)\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        var _ret\n        ret = makeAsyncIterable((_ret = ret) === null || _ret === undefined ? undefined : _ret.readable)\n      } else {\n        ret = makeAsyncIterable(ret)\n      }\n      ret = stream(ret, {\n        signal\n      })\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret2\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        })\n\n        // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n        const then = (_ret2 = ret) === null || _ret2 === undefined ? undefined : _ret2.then\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n              if (val != null) {\n                pt.write(val)\n              }\n              if (end) {\n                pt.end()\n              }\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pumpToNode(ret, pt, finish, {\n            end\n          })\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret\n          finishCount++\n          pumpToNode(toRead, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret\n        finishCount++\n        pumpToNode(toRead, stream, finish, {\n          end\n        })\n      } else if (isIterable(ret)) {\n        finishCount++\n        pumpToNode(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++\n        pumpToWeb(makeAsyncIterable(ret), stream, finish, {\n          end\n        })\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++\n        pumpToWeb(ret, stream, finish, {\n          end\n        })\n      } else if (isTransformStream(ret)) {\n        finishCount++\n        pumpToWeb(ret.readable, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n  return ret\n}\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end: false\n  }) // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n\n    function endFn() {\n      ended = true\n      dst.end()\n    }\n    if (isReadableEnded(src)) {\n      // End the destination if the source has already ended.\n      process.nextTick(endFn)\n    } else {\n      src.once('end', endFn)\n    }\n  } else {\n    finish()\n  }\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\nconst { EventEmitter: EE } = require('events')\nconst { Stream, prependListener } = require('./legacy')\nconst { Buffer } = require('buffer')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst eos = require('./end-of-stream')\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\nconst BufferList = require('./buffer_list')\nconst destroyImpl = require('./destroy')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  }\n} = require('../../ours/errors')\nconst { validateObject } = require('../validators')\nconst kPaused = Symbol('kPaused')\nconst { StringDecoder } = require('string_decoder')\nconst from = require('./from')\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\nconst nop = () => {}\nconst { errorOrDestroy } = destroyImpl\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.readableObjectMode)\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this.ended = false\n  this.endEmitted = false\n  this.reading = false\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true\n\n  // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false\n  this.emittedReadable = false\n  this.readableListening = false\n  this.resumeScheduled = false\n  this[kPaused] = null\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Has it been destroyed.\n  this.destroyed = false\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null\n  this.multiAwaitDrain = false\n\n  // If true, a maybeReadMore has been scheduled.\n  this.readingMore = false\n  this.dataEmitted = false\n  this.decoder = null\n  this.encoding = null\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options)\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  this._readableState = new ReadableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n}\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.reading = false\n    onEofChunk(stream, state)\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.reading = false\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false\n    maybeReadMore(stream, state)\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if (state.needReadable) emitReadable(stream)\n  }\n  maybeReadMore(stream, state)\n}\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n}\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder\n  // If setEncoding(null), decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = ''\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n}\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n  return n\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if (state.objectMode) return 1\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n}\n\n// You can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n)\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n  const state = this._readableState\n  const nOrig = n\n\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.emittedReadable = false\n\n  // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n  n = howMuchToRead(n, state)\n\n  // If we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  let doRead = state.needReadable\n  debug('need readable', doRead)\n\n  // If we currently have less than the highWaterMark, then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  }\n\n  // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.reading = true\n    state.sync = true\n    // If the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n    state.sync = false\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n  return ret\n}\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n  state.ended = true\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream)\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n}\n\n// At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n  state.readingMore = false\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n  let ondrain\n  let cleanedUp = false\n  function cleanup() {\n    debug('cleanup')\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true\n\n    // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n      src.pause()\n    }\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n  src.on('data', ondata)\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n    if (ret === false) {\n      pause()\n    }\n  }\n\n  // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror)\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n  dest.once('close', onclose)\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n  dest.once('finish', onfinish)\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe', src)\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause()\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n  return dest\n}\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState\n\n    // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  }\n\n  // If we're not piping anywhere, then do nothing.\n  if (state.pipes.length === 0) return this\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n    return this\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n}\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n  return res\n}\nReadable.prototype.addListener = Readable.prototype.on\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nReadable.prototype.off = Readable.prototype.removeListener\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  const state = this._readableState\n  if (!state.flowing) {\n    debug('resume')\n    // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n  state[kPaused] = false\n  return this\n}\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n  if (!state.reading) {\n    stream.read(0)\n  }\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n  this._readableState[kPaused] = true\n  return this\n}\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  let paused = false\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream)\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n  return this\n}\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n  return streamToAsyncIterator(this, options)\n}\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n    get() {\n      const r = this._readableState\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      }\n\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n    get() {\n      return this[kPaused] !== false\n    },\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n})\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length)\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy &&\n          // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n  if (writable) {\n    stream.end()\n  }\n}\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n","'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n    return MathFloor(hwm)\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode)\n}\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\nmodule.exports = Transform\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\nconst Duplex = require('./duplex')\nconst { getHighWaterMark } = require('./state')\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options)\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n  Duplex.call(this, options)\n\n  // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false\n  this[kCallback] = null\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish', prefinish)\n}\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n        return\n      }\n      if (data != null) {\n        this.push(data)\n      }\n      this.push(null)\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n    if (cb) {\n      cb()\n    }\n  }\n}\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\nTransform.prototype._final = final\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n    if (val != null) {\n      this.push(val)\n    }\n    if (\n      wState.ended ||\n      // Backwards compat.\n      length === rState.length ||\n      // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n","'use strict'\n\nconst { Symbol, SymbolAsyncIterator, SymbolIterator, SymbolFor } = require('../../ours/primordials')\nconst kDestroyed = Symbol('kDestroyed')\nconst kIsErrored = Symbol('kIsErrored')\nconst kIsReadable = Symbol('kIsReadable')\nconst kIsDisturbed = Symbol('kIsDisturbed')\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise')\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction')\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) &&\n      // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\nfunction isReadableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.pipeThrough === 'function' &&\n    typeof obj.getReader === 'function' &&\n    typeof obj.cancel === 'function'\n  )\n}\nfunction isWritableStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === 'function' && typeof obj.abort === 'function')\n}\nfunction isTransformStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.readable === 'object' && typeof obj.writable === 'object')\n}\nfunction isWebStream(obj) {\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj)\n}\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kDestroyed] || (state !== null && state !== undefined && state.destroyed))\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\nfunction isWritable(stream) {\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (isDestroyed(stream)) {\n    return true\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n  return true\n}\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n  return null\n}\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\nfunction isServerRequest(stream) {\n  var _stream$req\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\nmodule.exports = {\n  kDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  kIsClosedPromise,\n  kControllerErrorFunction,\n  isClosed,\n  isDestroyed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWebStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose,\n  isTransformStream\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\nmodule.exports = Writable\nWritable.WritableState = WritableState\nconst { EventEmitter: EE } = require('events')\nconst Stream = require('./legacy').Stream\nconst { Buffer } = require('buffer')\nconst destroyImpl = require('./destroy')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\nfunction nop() {}\nconst kOnFinished = Symbol('kOnFinished')\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode)\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // if _final has been called.\n  this.finalCalled = false\n\n  // drain event flag.\n  this.needDrain = false\n  // At the start of calling end()\n  this.ending = false\n  // When end() has been called, and returned.\n  this.ended = false\n  // When 'finish' is emitted.\n  this.finished = false\n\n  // Has it been destroyed\n  this.destroyed = false\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0\n\n  // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true\n\n  // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false\n\n  // The callback that's passed to _write(chunk, cb).\n  this.onwrite = onwrite.bind(undefined, stream)\n\n  // The callback that the user supplies to write(chunk, encoding, cb).\n  this.writecb = null\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null\n  resetBuffer(this)\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n    finishMaybe(this, state)\n  })\n}\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n})\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  let err\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n}\n\n// If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n    stream._write(chunk, encoding, state.onwrite)\n    state.sync = false\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er)\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n  errorBuffer(state)\n  // This can emit error, but error must always follow cb.\n  errorOrDestroy(stream, er)\n}\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n  finishMaybe(stream, state)\n}\n\n// If there's something in the buffer waiting, then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n  resetBuffer(state)\n}\n\n// If there's something in the buffer waiting, then process it.\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n  if (!bufferedLength) {\n    return\n  }\n  let i = bufferedIndex\n  state.bufferProcessing = true\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        }\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n  state.bufferProcessing = false\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\nWritable.prototype._writev = null\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n  let err\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n    if (ret instanceof Error) {\n      err = ret\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n  return this\n}\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\nfunction callFinal(stream, state) {\n  let called = false\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    state.pendingcb--\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish')\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n  state.sync = true\n  state.pendingcb++\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n  state.sync = false\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n  stream.emit('finish')\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy &&\n        // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n    get() {\n      const w = this._writableState\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState\n\n  // Invoke pending callbacks.\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n  destroy.call(this, err, cb)\n  return this\n}\nWritable.prototype._undestroy = destroyImpl.undestroy\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n","/* eslint jsdoc/require-jsdoc: \"error\" */\n\n'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\nconst { normalizeEncoding } = require('../ours/util')\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\nconst signals = {}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === value >>> 0\n}\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n    value = NumberParseInt(value, 8)\n  }\n  validateUint32(value, name)\n  return value\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  const min = positive ? 1 : 0\n  // 2 ** 32 === 4294967296\n  const max = 4294967295\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\n\n/**\n * @param {any} options\n * @param {string} key\n * @param {boolean} defaultValue\n * @returns {boolean}\n */\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of \"dictionary\" here, which means any value\n *                                whose Type is either Undefined, Null, or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames((value, name) => {\n  if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'a dictionary', value)\n  }\n})\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nfunction validateStringArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateString(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nfunction validateBooleanArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateBoolean(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n  return port | 0\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;\"\\s]+(?:=(\")?[^;\"\\s]*\\1)?)*$/\n\n/**\n * @param {any} value\n * @param {string} name\n */\nfunction validateLinkHeaderFormat(value, name) {\n  if (typeof value === 'undefined' || !RegExpPrototypeExec(linkValueRegExp, value)) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name,\n      value,\n      'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n    )\n  }\n}\n\n/**\n * @param {any} hints\n * @return {string}\n */\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat(hints, 'hints')\n    return hints\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length\n    let result = ''\n    if (hintsLength === 0) {\n      return result\n    }\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i]\n      validateLinkHeaderFormat(link, 'hints')\n      result += link\n      if (i !== hintsLength - 1) {\n        result += ', '\n      }\n    }\n    return result\n  }\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints',\n    hints,\n    'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n  )\n}\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateStringArray,\n  validateBooleanArray,\n  validateBoolean,\n  validateBuffer,\n  validateDictionary,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal,\n  validateLinkHeaderValue\n}\n","'use strict'\n\nconst CustomStream = require('../stream')\nconst promises = require('../stream/promises')\nconst originalDestroy = CustomStream.Readable.destroy\nmodule.exports = CustomStream.Readable\n\n// Explicit export naming is needed for ESM\nmodule.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\nmodule.exports._isUint8Array = CustomStream._isUint8Array\nmodule.exports.isDisturbed = CustomStream.isDisturbed\nmodule.exports.isErrored = CustomStream.isErrored\nmodule.exports.isReadable = CustomStream.isReadable\nmodule.exports.Readable = CustomStream.Readable\nmodule.exports.Writable = CustomStream.Writable\nmodule.exports.Duplex = CustomStream.Duplex\nmodule.exports.Transform = CustomStream.Transform\nmodule.exports.PassThrough = CustomStream.PassThrough\nmodule.exports.addAbortSignal = CustomStream.addAbortSignal\nmodule.exports.finished = CustomStream.finished\nmodule.exports.destroy = CustomStream.destroy\nmodule.exports.destroy = originalDestroy\nmodule.exports.pipeline = CustomStream.pipeline\nmodule.exports.compose = CustomStream.compose\nObject.defineProperty(CustomStream, 'promises', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nmodule.exports.Stream = CustomStream.Stream\n\n// Allow default importing\nmodule.exports.default = module.exports\n","'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n","'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  Error,\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n  Promise,\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n  ReflectApply: Reflect.apply,\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n  SafeSet: Set,\n  String,\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n  Symbol,\n  SymbolFor: Symbol.for,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n  Uint8Array\n}\n","'use strict'\n\nconst bufferModule = require('buffer')\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n","/* replacement start */\n\nconst { Buffer } = require('buffer')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\nconst compose = require('./internal/streams/compose')\nconst { pipeline } = require('./internal/streams/pipeline')\nconst { destroyer } = require('./internal/streams/destroy')\nconst eos = require('./internal/streams/end-of-stream')\nconst internalBuffer = {}\nconst promises = require('./stream/promises')\nconst utils = require('./internal/streams/utils')\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.Readable = require('./internal/streams/readable')\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return ReflectApply(op, this, args)\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished\n  }\n})\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n","'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream, isWebStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nrequire('../../lib/stream.js')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (\n      lastArg &&\n      typeof lastArg === 'object' &&\n      !isNodeStream(lastArg) &&\n      !isIterable(lastArg) &&\n      !isWebStream(lastArg)\n    ) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nvar _utils = require(\"./utils\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  var _super = _createSuper(CommonClient);\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    var dataPack = arguments.length > 4 ? arguments[4] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (!dataPack) _this.dataPack = new _utils.DefaultDataPack();else _this.dataPack = dataPack;\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || undefined,\n          id: rpc_id\n        };\n        _this2.socket.send(_this2.dataPack.encode(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n              case 2:\n                resp = _context.sent;\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n                throw new Error(\"authentication failed\");\n              case 5:\n                return _context.abrupt(\"return\", resp);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params\n        };\n        _this3.socket.send(_this3.dataPack.encode(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n              case 3:\n                result = _context3.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n              case 6:\n                return _context3.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n              case 3:\n                result = _context4.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n              case 6:\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = _this4.dataPack.decode(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            }\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  var _super = _createSuper(WebSocketBrowserImpl);\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDataPack = void 0;\nexports.createError = createError;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar errors = new Map([[-32000, \"Event not provided\"], [-32600, \"Invalid Request\"], [-32601, \"Method not found\"], [-32602, \"Invalid params\"], [-32603, \"Internal error\"], [-32604, \"Params not found\"], [-32605, \"Method forbidden\"], [-32606, \"Event forbidden\"], [-32700, \"Parse error\"]]);\nvar DefaultDataPack = /*#__PURE__*/function () {\n  function DefaultDataPack() {\n    (0, _classCallCheck2[\"default\"])(this, DefaultDataPack);\n  }\n  (0, _createClass2[\"default\"])(DefaultDataPack, [{\n    key: \"encode\",\n    value: function encode(value) {\n      return JSON.stringify(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(value) {\n      return JSON.parse(value);\n    }\n  }]);\n  return DefaultDataPack;\n}();\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nexports.DefaultDataPack = DefaultDataPack;\nfunction createError(code, details) {\n  var error = {\n    code: code,\n    message: errors.get(code) || \"Internal Server Error\"\n  };\n  if (details) error[\"data\"] = details;\n  return error;\n}","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["require","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","bindConstructorLayout","Class","layout","hasOwnProperty","call","Error","layout_","boundConstructor_","defineProperty","value","encode","writable","decode","ExternalLayout","isCount","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","setBigUint64","view","isLE","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","SHA2","Hash","blockLen","outputLen","padOffset","finished","pos","destroyed","createView","update","data","exists","toBytes","len","take","min","set","subarray","process","dataView","roundClean","digestInto","out","output","fill","oview","outLen","state","get","digest","res","destroy","_cloneInto","to","SHA512_Kh","SHA512_Kl","u64","map","n","SHA512_W_H","Uint32Array","SHA512_W_L","SHA512","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","wrapConstructor","_0n","_1n","_2n","_3n","_4n","_5n","_8n","mod","a","result","num","power","modulo","pow2","x","invert","number","y","u","q","r","m","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","Fp","root","eql","sqr","Q1div2","neg","ONE","g","mul","ZERO","t2","ge","FpSqrt","c1","n2","nv","sub","isNegativeLE","FIELD_FIELDS","validateField","field","initial","ORDER","MASK","BYTES","BITS","opts","val","validateObject","FpPow","f","p","d","FpInvertBatch","nums","tmp","lastMultiplied","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","bitLen","redef","sqrtP","freeze","bitMask","isValid","isOdd","lhs","rhs","add","div","sqrN","addN","subN","mulN","sqrt","invertBatch","lst","cmov","c","numberToBytesLE","numberToBytesBE","fromBytes","bytes","bytesToNumberLE","bytesToNumberBE","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","key","fieldLen","minLen","reduced","wNAF","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut","hash","randomBytes","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","max","in0MaskRange","assertInRange","assertGE0","CURVE_ORDER","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","equals","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","hex","ensureBytes","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","toHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","msg","sign","options","R","k","s","verifyOpts","verify","sig","publicKey","SB","error","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","concatBytes","utf8ToBytes","ELL2_C1","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","rotr","s1","sigma1","sigma0","sha256","StructError","failure","failures","cached","message","rest","path","join","super","this","_cached","isIterable","isObject","Symbol","iterator","print","JSON","stringify","shiftIterator","input","done","next","toFailure","struct","branch","type","refinement","toFailures","run","coerce","coercer","schema","valid","validator","entries","ts","t","Set","refiner","Struct","props","assert","is","validate","tuples","tuple","define","any","array","Element","boolean","instance","literal","constant","description","never","nullable","isNaN","optional","record","Key","Value","string","Elements","Never","keys","Structs","first","unknown","HMAC","_key","assertHash","iHash","pad","oHash","buf","assertExists","assertBytes","getPrototypeOf","hmac","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","hexToBytes","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","parseInt","shl","rhl","sl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","lengths","includes","padStart","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","b3","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","cat","isYOdd","isHeadOdd","numToNByteStr","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","isProbPub","arr","str","getSharedSecret","privateA","publicB","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","seed","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","signature","_Point$BASE$multiplyA","sg","_sig","derError","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","a1","b1","a2","POW_2_128","c2","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","isBuffer","byteLength","properties","serialize","SOLANA_SCHEMA","deserialize","decodeUnchecked","deserializeUnchecked","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","decoded","bs58","BN","unique","eq","toBase58","toJSON","toArrayLike","zeroPad","alloc","createWithSeed","fromPublicKey","programId","concat","publicKeyBytes","createProgramAddressSync","seeds","forEach","createProgramAddress","findProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddress","pubkeyData","pubkey","_class","default","kind","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","size","elem","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","encodeDecode","bigInt","blob","bigIntLayout","toBigIntLE","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","createAccount","params","lamports","space","fromPubkey","newAccountPubkey","transfer","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","createNonceAccount","noncePubkey","initParams","authorizedPubkey","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","newAuthorizedPubkey","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","round","globalThis","fetch","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","jsonrpc","id","code","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetRecentPrioritizationFeesResult","epoch","effectiveSlot","amount","postBalance","commission","prioritizationFee","GetInflationRateResult","total","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","rentEpoch","unitsConsumed","returnData","byIdentity","range","firstSlot","lastSlot","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","PerfSampleResult","previousBlockhash","parentSlot","rewards","feeCalculator","lamportsPerSignature","numTransactions","numSlots","samplePeriodSecs","LogsResult","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","authority","recentSlot","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","startsWith","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","_class2","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","initialize","stakePubkey","maybeLockup","staker","withdrawer","delegate","authorize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorizeWithSeed","authorityBase","authoritySeed","authorityOwner","splitInstruction","splitStakePubkey","splitWithSeed","merge","sourceStakePubKey","withdraw","deactivate","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","VoteProgram","initializeAccount","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","website","details","keybaseUsername","nacl","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D2","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","core_salsa20","o","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_hsalsa20","crypto_core_salsa20","inp","crypto_core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","j","neq25519","par25519","unpack25519","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b7","b8","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","crypto_box","crypto_box_open","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","Int32Array","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","crypto_sign","sm","smlen","unpackneg","chk","den","den2","den4","den6","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","checkLengths","checkBoxLengths","checkArrayTypes","arguments","cleanup","lowlevel","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","after","keyPair","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","self","msCrypto","getRandomValues","QUOTA","module","safeApply","handler","Reflect","apply","arrayClone","SafeEventEmitter","EventEmitter","emit","doError","events","_events","_len","er","listeners","SerializableError","_ref","_defineProperty","stack","createAsyncMiddleware","asyncMiddleware","req","end","resolveNextPromise","nextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","_runAllMiddleware","middlewareStack","returnHandlers","isComplete","middleware","_runMiddleware","reverse","serializeError","returnHandler","_runReturnHandlers","handlers","reject","_checkForCompletion","_req","handle","cb","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","handlerCallback","reqs","responses","_err","callerReq","method","_objectSpread","_processRequest","_error","mergeMiddleware","engine","providerFromEngine","provider","sendAsync","_res$error","_res$error2","fallbackError","rpcErrors","internal","send","callback","on","request","random","storageAvailable","storage","storageExists","storageLength","setItem","removeItem","MemoryStore","getItem","store","BrowserStorage","storeKey","_storeKey","resetStore","getInstance","storageKey","localStorage","sessionStorage","currStore","getStore","parse","TORUS_SAPPHIRE_NETWORK","TORUS_LEGACY_NETWORK","log","logLevel","setLevel","levels","INFO","InvalidTokenError","CHAIN_NAMESPACES","EIP155","SOLANA","OTHER","Web3AuthError","CustomError","WalletInitializationError","fromCode","extraMessage","messages","notFound","notInstalled","notReady","windowBlocked","windowClosed","incompatibleChainNameSpace","duplicateAdapterError","invalidProviderConfigError","providerNotReadyError","rpcConnectionError","invalidParams","invalidNetwork","WalletLoginError","connectionError","disconnectionError","notConnectedError","popupClosed","mfaEnabled","chainConfigNotAdded","unsupportedOperation","coreKitKeyNotFound","userNotLoggedIn","WalletOperationsError","chainIDNotAllowed","operationNotAllowed","chainNamespaceNotAllowed","WalletProviderError","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V2","SOLANA_ADAPTERS","TORUS_SOLANA","PHANTOM","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_DATA_UPDATED","CACHE_CLEAR","loglevel","isHexStrict","test","getED25519Key","createChainIdMiddleware","chainId","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","getAccounts","response","createRequestAccountsMiddleware","_ref2","requestAccounts","createGenericJRPCMiddleware","targetMethod","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createChainSwitchMiddleware","_ref3","addNewChainConfig","switchSolanaChain","createAccountMiddleware","_ref4","updatePrivatekey","BaseInjectedProvider","BaseProvider","chainConfig","chainNamespace","switchChain","setupProvider","injectedProvider","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","updateProviderEngineProxy","lookupNetwork","getBaseProviderHandlers","methodNotSupported","sigData","display","_req$params","_req$params2","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","getTorusHandlers","txMessage","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","addChain","chainName","displayName","rpcUrls","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","handleInjectedProviderUpdate","setupEngine","providerErrors","custom","connectedChainId","connectedHexChainId","configure","getProviderEngineProxy","keyPairGenerator","_providerEngineProxy","encoding","_req$params6","txns","SolanaPrivateKeyProvider","enable","getEd25519Key","getChainSwitchMiddleware","getAccountMiddleware","updateAccount","existingKey","getChainConfig","health","chainSwitchHandlers","chainSwitchMiddleware","accountHandlers","providerFactory","ALPHABET","BASE_MAP","charAt","xc","charCodeAt","LEADER","FACTOR","iFACTOR","ArrayBuffer","isView","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","basex","AbortError","codes","isNodeStream","isWebStream","kControllerErrorFunction","eos","ERR_INVALID_ARG_TYPE","validateAbortSignal","signal","addAbortSignal","stream","addAbortSignalNoValidate","onAbort","cause","reason","aborted","addEventListener","removeEventListener","StringPrototypeSlice","SymbolIterator","TypedArrayPrototypeSet","inspect","ret","clear","allocUnsafe","consume","hasStrings","_getString","_getBuffer","retLen","for","depth","customInspect","pipeline","Duplex","destroyer","isReadable","isTransformStream","isWritableStream","isReadableStream","ERR_INVALID_ARG_VALUE","ERR_MISSING_ARGS","streams","orgStreams","ondrain","onfinish","onreadable","onclose","onfinished","readable","writableObjectMode","readableObjectMode","_write","chunk","_final","writer","getWriter","ready","catch","close","toRead","_read","read","reader","getReader","_destroy","aggregateTwoErrors","ERR_MULTIPLE_CALLBACK","kDestroyed","isDestroyed","isFinished","isServerRequest","kDestroy","kConstruct","checkError","w","errored","_readableState","_writableState","constructed","once","called","onDestroy","closed","nextTick","emitErrorCloseNT","emitCloseNT","emitErrorNT","closeEmitted","emitClose","errorEmitted","undestroy","reading","ended","endEmitted","finalCalled","prefinished","ending","errorOrDestroy","sync","autoDestroy","construct","_construct","listenerCount","constructNT","onConstruct","emitConstructNT","isRequest","setHeader","abort","emitCloseLegacy","emitErrorCloseLegacy","socket","ObjectDefineProperties","ObjectGetOwnPropertyDescriptor","ObjectKeys","ObjectSetPrototypeOf","Readable","Writable","allowHalfOpen","webStreamsAdapters","duplexify","lazyWebStreams","__proto__","writableHighWaterMark","writableBuffer","writableLength","writableFinished","writableCorked","writableEnded","writableNeedDrain","fromWeb","newStreamDuplexFromReadableWritablePair","toWeb","duplex","newReadableWritablePairFromDuplex","body","bufferModule","isReadableNodeStream","isWritableNodeStream","isDuplexNodeStream","ERR_INVALID_RETURN_VALUE","createDeferredPromise","isBlob","AbortController","FunctionPrototypeCall","Duplexify","fromAsyncGen","promise","ac","_promise","_resolve","final","_duplexify","wrap","objectMode","then","arrayBuffer","ERR_STREAM_PREMATURE_CLOSE","kEmptyObject","validateFunction","validateBoolean","PromisePrototypeThen","isClosed","isReadableFinished","isReadableErrored","isWritableFinished","isWritableErrored","willEmitClose","_willEmitClose","kIsClosedPromise","nop","_options$readable","_options$writable","eosWeb","wState","rState","onlegacyfinish","readableFinished","onend","onerror","onclosed","onrequest","removeListener","endCallback","originalCallback","isAborted","resolverFn","_opts","autoCleanup","SymbolAsyncIterator","ERR_STREAM_NULL_VALUES","iterable","isAsync","highWaterMark","hadError","hasThrow","throw","return","ArrayIsArray","EE","Stream","prependListener","emitter","event","pipe","ondata","pause","resume","_isStdio","didOnEnd","ERR_OUT_OF_RANGE","validateInteger","kWeakHandler","staticCompose","ArrayPrototypePush","MathFloor","NumberIsNaN","PromiseReject","kEmpty","kEof","compose","composedStream","concurrency","_options$signal","_options$signal2","queue","signalOpt","onDone","pump","_val","_options$signal3","asIndexedPairs","_options$signal4","unused","forEachFn","filterFn","ReduceAwareErrMissingArgs","reducer","initialValue","_options$signal5","hasInitialValue","gotAnyItemFromStream","_options$signal6","toArray","_options$signal7","flatMap","toIntegerOrInfinity","drop","_options$signal8","_options$signal9","_options$signal10","_options$signal11","streamReturningOperators","promiseReturningOperators","PassThrough","Transform","_transform","destroyImpl","ERR_STREAM_DESTROYED","isReadableEnded","writing","popCallback","pop","makeAsyncIterable","fromReadable","pumpToNode","onresolve","wait","off","pumpToWeb","pipelineImpl","outerSignal","lastStreamCleanup","finishImpl","destroys","finishCount","isLastStream","onError","_ret","_ret2","pt","dst","endFn","ArrayPrototypeIndexOf","NumberIsInteger","NumberParseInt","SafeSet","ReadableState","debug","BufferList","getHighWaterMark","getDefaultHighWaterMark","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kPaused","StringDecoder","isDuplex","pipes","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrainWriters","multiAwaitDrain","readingMore","dataEmitted","decoder","maybeReadMore","readableAddChunk","addToFront","_isUint8Array","_uint8ArrayToBuffer","onEofChunk","addChunk","emitReadable","_undestroy","captureRejectionSymbol","isPaused","setEncoding","enc","content","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","updateReadableListening","nReadingNextTick","resume_","streamToAsyncIterator","iter","createAsyncIterator","destroyOnReturn","fromList","endReadable","endReadableNT","endWritableNT","NaN","nOrig","doRead","pipeOpts","doEnd","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanedUp","needDrain","dests","ev","addListener","removeAllListeners","paused","streamKeys","readableDidRead","enumerable","readableAborted","readableHighWaterMark","readableBuffer","readableFlowing","readableLength","readableEncoding","readableEnded","pipesCount","_fromList","readableStream","newStreamReadableFromReadableStream","streamReadable","newReadableStreamFromStreamReadable","_src$readableObjectMo","highWaterMarkFrom","duplexKey","hwm","kCallback","flush","_flush","prefinish","SymbolFor","kIsErrored","kIsReadable","kIsDisturbed","obj","strict","_obj$_readableState","_obj$_writableState","pipeThrough","cancel","isWritableEnded","_stream$_writableStat","_stream$_writableStat2","writableErrored","_stream$_readableStat","_stream$_readableStat2","readableErrored","_closed","isOutgoingMessage","_defaultKeepAlive","_removedConnection","_removedContLen","isServerResponse","_sent100","_stream$req","_consuming","_dumped","upgradeOrConnect","isDisturbed","_stream$kIsDisturbed","isErrored","_ref5","_stream$kIsErrored","_stream$_readableStat3","_stream$_writableStat3","_stream$_readableStat4","_stream$_writableStat4","ArrayPrototypeSlice","FunctionPrototypeSymbolHasInstance","ObjectDefineProperty","StringPrototypeToLowerCase","SymbolHasInstance","WritableState","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_ALREADY_FINISHED","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","kOnFinished","noDecode","decodeStrings","corked","bufferProcessing","onwrite","writecb","writelen","afterWriteTickInfo","resetBuffer","pendingcb","buffered","bufferedIndex","allBuffers","allNoop","writev","_writev","clearBuffer","finishMaybe","isEncoding","writeOrBuffer","doWrite","onwriteError","errorBuffer","afterWriteTick","afterWrite","_state$errored","onfinishCallbacks","_state$errored2","bufferedLength","chunks","needFinish","callFinal","onFinish","getBuffer","object","cork","uncork","setDefaultEncoding","writableAborted","writableStream","newStreamWritableFromWritableStream","streamWritable","newWritableStreamFromStreamWritable","ArrayPrototypeIncludes","ArrayPrototypeJoin","ArrayPrototypeMap","NumberMAX_SAFE_INTEGER","NumberMIN_SAFE_INTEGER","ObjectPrototypeHasOwnProperty","RegExpPrototypeExec","StringPrototypeToUpperCase","StringPrototypeTrim","hideStackFrames","ERR_SOCKET_BAD_PORT","ERR_UNKNOWN_SIGNAL","normalizeEncoding","isAsyncFunction","isArrayBufferView","signals","isInt32","isUint32","octalReg","modeDesc","parseFileMode","def","validateUint32","validateInt32","positive","validateString","validateNumber","validateOneOf","oneOf","allowed","getOwnPropertyValueOrDefault","defaultValue","allowArray","allowFunction","validateDictionary","validateArray","minLength","validateStringArray","validateBooleanArray","validateSignalName","validateBuffer","validateEncoding","normalizedEncoding","validatePort","port","allowZero","validatePlainFunction","validateUndefined","validateUnion","linkValueRegExp","validateLinkHeaderFormat","validateLinkHeaderValue","hints","hintsLength","link","CustomStream","promises","originalDestroy","configurable","format","AggregateError","CustomAggregateError","kIsNodeError","kTypes","classRegExp","nodeInternalPrefix","ERR_INTERNAL_ASSERTION","addNumericalSeparator","getMessage","expectedLength","match","Base","NodeError","defineProperties","hidden","innerError","outerError","errors","expected","actual","endsWith","types","instances","toLowerCase","last","_actual$constructor","inspected","colors","_value$constructor","received","el","sep","ArrayPrototypePop","thisArgs","Function","hasInstance","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","prop","getOwnPropertyDescriptor","target","proto","setPrototypeOf","PromisePrototypeCatch","thenFn","catchFn","ReflectApply","RegExpPrototypeTest","toUpperCase","trim","asyncIterator","AsyncFunction","rej","promisify","debuglog","replace","_unused","replacement","ctor","customPromisify","ERR_ILLEGAL_CONSTRUCTOR","op","pl","lastArg","__createBinding","__setModuleDefault","__decorate","decorators","desc","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","ResolvedTextDecoder","TextDecoder","textDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","maybeResize","writeU8","writeUInt8","writeU16","writeUInt16LE","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readUInt8","readU16","readUInt16LE","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","serializeField","fieldType","serializeStruct","borshSerialize","structSchema","Writer","deserializeField","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","isRaw","hasCallback","_parseResponse","responseText","isError","isNotError","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","_utils","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","sham","Proxy","valueOf","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","_a","generate_request_id","dataPack","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","rpc_id","reconnect_timer_id","current_reconnects","DefaultDataPack","_connect","timeout","ws_opts","_this2","_login","mark","_callee","resp","_context","prev","sent","abrupt","stop","login","_x","_listMethods","_callee2","_context2","listMethods","_this3","_subscribe","_callee3","_context3","subscribe","_x2","_unsubscribe","_callee4","_context4","unsubscribe","_x3","_this4","clearTimeout","notification","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","optionsOrCallback","listener","_default","createError","_assertThisInitialized","ReferenceError","asyncGeneratorStep","gen","_throw","arg","info","_asyncToGenerator","_classCallCheck","Constructor","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","_typeof","assertThisInitialized","_possibleConstructorReturn","_regeneratorRuntime","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isGeneratorFunction","awrap","rval","complete","delegateYield","_toPrimitive","hint","prim","toPrimitive","_toPropertyKey","runtime","regeneratorRuntime","accidentalStrictMode","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","fromCharCode","end_of_stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","Decoder","Encoder","bite","code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","UTF8Encoder","temp","input_stream","opt_string"],"sourceRoot":""}