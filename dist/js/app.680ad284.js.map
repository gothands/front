{"version":3,"file":"js/app.680ad284.js","mappings":"sFAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAkBC,EAAAA,EAAAA,IAAkB,QAE1C,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAaH,EAAiB,CAAEI,IAAK,2CAC7D,CCJA,MAAMC,GAA0BC,EAAAA,EAAAA,GAAoB,MAAO,CAAEC,MAAO,SAAW,eAAgB,GACzFC,EAAa,CACjBC,IAAK,EACLF,MAAO,WAEHG,EAAa,CACjBD,IAAK,EACLF,MAAO,IAEHI,GAA0BL,EAAAA,EAAAA,GAAoB,KAAM,KAAM,wBAAyB,GACnFM,GAA0BN,EAAAA,EAAAA,GAAoB,IAAK,KAAM,wFAAyF,GAClJO,EAAa,CAAEJ,IAAK,GAEpB,SAAUhB,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMe,GAAkBb,EAAAA,EAAAA,IAAkB,QACpCc,GAAqBd,EAAAA,EAAAA,IAAkB,WAE7C,OAAQC,EAAAA,EAAAA,OAAcc,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,KAAM,EACzDX,EAAAA,EAAAA,GAAoB,MAAO,KAAM,CAC/BD,EACCR,EAAOqB,WACHhB,EAAAA,EAAAA,OAAcc,EAAAA,EAAAA,IAAoB,MAAOR,KAC1CW,EAAAA,EAAAA,IAAoB,IAAI,KAE5BtB,EAAOqB,UAYLC,EAAAA,EAAAA,IAAoB,IAAI,KAXvBjB,EAAAA,EAAAA,OAAcc,EAAAA,EAAAA,IAAoB,SAAUN,EAAY,CACvDC,EACAC,GACAN,EAAAA,EAAAA,GAAoB,SAAU,CAC5BC,MAAO,cACPa,QAASzB,EAAO,KAAOA,EAAO,GAE1C,IAAI0B,IAAUxB,EAAOyB,OAASzB,EAAOyB,SAASD,IAClCE,MAAO,CAAC,OAAS,YAChB,cAGR1B,EAAOqB,WACHhB,EAAAA,EAAAA,OAAcc,EAAAA,EAAAA,IAAoB,MAAOH,EAAY,CAClDhB,EAAO2B,SAMLL,EAAAA,EAAAA,IAAoB,IAAI,KALvBjB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAaW,EAAiB,CAC3CL,IAAK,EACLgB,SAAU5B,EAAO4B,SACjBC,QAAS7B,EAAO6B,SACf,KAAM,EAAG,CAAC,WAAY,aAE5B7B,EAAO2B,UACHtB,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAaY,EAAoB,CAC9CN,IAAK,EACLgB,SAAU5B,EAAO4B,UAChB,KAAM,EAAG,CAAC,eACbN,EAAAA,EAAAA,IAAoB,IAAI,OAE9BA,EAAAA,EAAAA,IAAoB,IAAI,IAC3B,GACL,C,iCCxDOZ,MAAM,W,aAEPD,EAAAA,EAAAA,GAAwD,KAArDiB,MAAA,oCAAqC,gBAAY,G,GAChDA,MAAA,qC,GACFjB,EAAAA,EAAAA,GAES,QADPC,MAAM,mBACP,KAAC,G,GAGAA,MAAM,Y,GAKLA,MAAM,qB,GACTD,EAAAA,EAAAA,GAAgC,OAA3BC,MAAM,gBAAc,S,GACtBA,MAAM,W,aAmBNgB,MAAA,8B,GAKAA,MAAA,yD,SAGDA,MAAA,8E,GAIOA,MAAA,kB,GAMAhB,MAAM,qB,GACTD,EAAAA,EAAAA,GAAgC,OAA3BC,MAAM,gBAAc,S,GACpBA,MAAM,W,GAEbD,EAAAA,EAAAA,GAEM,OAFDC,MAAM,kBAAiB,cAE5B,G,SAKAgB,MAAA,8E,GAGGA,MAAA,kB,GAMAhB,MAAM,qB,GACTD,EAAAA,EAAAA,GAAgC,OAA3BC,MAAM,gBAAc,S,GACpBA,MAAM,W,GAEbD,EAAAA,EAAAA,GAEM,OAFDC,MAAM,kBAAiB,cAE5B,G,GAEIgB,MAAA,wD,GAgCCA,MAAA,4F,GACHjB,EAAAA,EAAAA,GAAkB,SAAf,eAAW,G,GACViB,MAAA,qC,GACFjB,EAAAA,EAAAA,GAES,QADPC,MAAM,mBACP,KAAC,G,GAGAA,MAAM,Y,GAUHA,MAAM,mBACPgB,MAAA,8E,GAEGA,MAAA,kB,GAQAhB,MAAM,qB,GACTD,EAAAA,EAAAA,GAAgC,OAA3BC,MAAM,gBAAc,S,GACrBA,MAAM,W,GAEZD,EAAAA,EAAAA,GAEM,OAFDC,MAAM,kBAAiB,cAE5B,G,SAGCA,MAAM,W,SAELA,MAAM,a,SAcfA,MAAM,W,GA2BFgB,MAAA,kB,IAEAjB,EAAAA,EAAAA,GAA+B,OAA1BC,MAAM,eAAa,S,IAAOD,EAAAA,EAAAA,GAAoB,WAAf,aAAS,G,IAA7CqB,GAA+BC,I,IAOlCtB,EAAAA,EAAAA,GAGM,WAHD,kBAGL,G,8BAUIA,EAAAA,EAAAA,GAAsC,QAAhCC,MAAM,mBAAkB,KAAC,G,UAKfgB,MAAA,wF,IACpBjB,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,IACXiB,MAAA,c,IAAmBjB,EAAAA,EAAAA,GAAsC,QAAhCC,MAAM,mBAAkB,KAAC,G,IAA8BD,EAAAA,EAAAA,GAAiC,QAA3BC,MAAM,YAAW,OAAG,G,IAC9GD,EAAAA,EAAAA,GAAoD,KAAjDiB,MAAA,iBAAqB,4BAAwB,G,IAChDjB,EAAAA,EAAAA,GAA6B,OAAxBC,MAAM,aAAW,S,6IAjO9BD,EAAAA,EAAAA,GAoRM,MApRND,EAoRM,CAnRQN,EAAA8B,UAAa9B,EAAA+B,WAekC,iBAfzB,WAAlCd,EAAAA,EAAAA,IAiBM,MAAAR,EAAA,CAhBJE,GACAJ,EAAAA,EAAAA,GAUK,KAVLK,EAUK,CATHC,GAES,aACTmB,EAAAA,EAAAA,IAAc,QAAdC,EAAA,KAAON,eAAO,IAAAM,OAAA,EAAdA,EAAgBC,WAAWC,MAAM,KAAK,IAAI,IAC1C,IAAA5B,EAAAA,EAAAA,GAIO,OAJPO,EACmB,MAChBkB,EAAAA,EAAAA,IAAoD,QAApDI,EAAe,QAAfC,EAAA,KAAQV,eAAO,IAAAU,GAAkB,QAAlBC,EAAfD,EAAiBH,WAAWC,MAAM,KAAK,UAAN,IAAAG,OAAlB,EAAfA,EAA2CC,UAAU,EAAD,cAAAH,EAAAA,EAAA,YAIzD7B,EAAAA,EAAAA,GAGM,MAHNiC,EAGM,CAFJC,GACAlC,EAAAA,EAAAA,GAA8D,IAA9DmC,GAA8DV,EAAAA,EAAAA,IAAzChC,EAAA2C,gBAAgBC,KAAKC,gBAAa,QAWhD7C,EAAA8B,WAAQ,WAAnBb,EAAAA,EAAAA,IAyIM,MAAA6B,EAAA,EAjIJvC,EAAAA,EAAAA,GAEM,MAFNwC,EAEM,UAFgC,WAC9Bf,EAAAA,EAAAA,IAAGhC,EAAAgD,cAAe,QAAK,IAAAzC,EAAAA,EAAAA,GAA6B,UAAAyB,EAAAA,EAAAA,IAAvBhC,EAAAiD,cAAe,OAAI,MAExD1C,EAAAA,EAAAA,GAAkC,YAAAyB,EAAAA,EAAAA,IAAzBhC,EAAAkD,kBAAgB,IAEzB3C,EAAAA,EAAAA,GA0HM,MA1HN4C,EA0HM,CArHMnD,EAAAoD,aAAU,WAHlBnC,EAAAA,EAAAA,IAmBM,MAnBNoC,EAmBM,EAdJ9C,EAAAA,EAAAA,GAIM,MAJN+C,EAIM,EAHJ/C,EAAAA,EAAAA,GAA8E,OAAxEC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAAwD,mBAAqB,K,SACnEjD,EAAAA,EAAAA,GAA8E,OAAxEC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAAwD,mBAAqB,K,SACnEjD,EAAAA,EAAAA,GAA8E,OAAxEC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAAwD,mBAAqB,K,WAErEC,EAAAA,EAAAA,IAAgCC,GAAA,CAArBC,KAAM5D,EAAA6D,cAAY,kBAC7BrD,EAAAA,EAAAA,GAGM,MAHNsD,EAGM,CAFJC,GACEvD,EAAAA,EAAAA,GAAyD,IAAzDwD,GAAyD/B,EAAAA,EAAAA,IAAnChC,EAAA2C,gBAAgB3C,EAAAgE,cAAW,KAErDC,OAEM,WAIRhD,EAAAA,EAAAA,IAgDM,MAhDNiD,EAgDM,EA5CN3D,EAAAA,EAAAA,GAIM,MAJN4D,EAIM,EAHJ5D,EAAAA,EAAAA,GAA8E,OAAxEC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAAwD,mBAAqB,K,SACnEjD,EAAAA,EAAAA,GAA8E,OAAxEC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAAwD,mBAAqB,K,SACnEjD,EAAAA,EAAAA,GAA8E,OAAxEC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAAwD,mBAAqB,K,WAErEC,EAAAA,EAAAA,IAAgCC,GAAA,CAArBC,KAAM5D,EAAA6D,cAAY,kBAC7BrD,EAAAA,EAAAA,GAGM,MAHN6D,EAGM,CAFJC,GACE9D,EAAAA,EAAAA,GAAyD,IAAzD+D,GAAyDtC,EAAAA,EAAAA,IAAnChC,EAAA2C,gBAAgB3C,EAAAgE,cAAW,KAErDO,GAGEhE,EAAAA,EAAAA,GAqBM,MArBNiE,EAqBM,EAlBJjE,EAAAA,EAAAA,GAKM,OAJDiB,OAAKiD,EAAAA,EAAAA,IAAA,gBAAoBzE,EAAA0E,OAAS,SAAW,YAC7CrD,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA2E,QAAA3E,EAAA2E,UAAArD,K,EAERmC,EAAAA,EAAAA,IAAsCC,GAAA,CAA3BkB,UAAU,EAAOjB,KAAM,K,IAEtCpD,EAAAA,EAAAA,GAKM,OAJDiB,OAAKiD,EAAAA,EAAAA,IAAA,gBAAoBzE,EAAA6E,QAAU,SAAW,YAC9CxD,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA8E,SAAA9E,EAAA8E,WAAAxD,K,EAERmC,EAAAA,EAAAA,IAAsCC,GAAA,CAA3BkB,UAAU,EAAOjB,KAAM,K,IAEtCpD,EAAAA,EAAAA,GAKM,OAJDiB,OAAKiD,EAAAA,EAAAA,IAAA,gBAAoBzE,EAAA+E,WAAa,SAAW,YACjD1D,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAAgF,YAAAhF,EAAAgF,cAAA1D,K,EAERmC,EAAAA,EAAAA,IAAsCC,GAAA,CAA3BkB,UAAU,EAAOjB,KAAM,K,SAc1CpD,EAAAA,EAAAA,GAaM,MAbN0E,EAaM,CAZJC,GACA3E,EAAAA,EAAAA,GAUK,KAVL4E,EAUK,CATHC,GAES,aACTpD,EAAAA,EAAAA,IAAkB,QAAlBqD,EAAA,KAAOC,mBAAW,IAAAD,OAAA,EAAlBA,EAAoBnD,WAAWC,MAAM,KAAK,IAAI,IAC9C,IAAA5B,EAAAA,EAAAA,GAIO,OAJPgF,EACmB,MAChBvD,EAAAA,EAAAA,IAAwD,QAAxDwD,GAAmB,QAAnBC,GAAA,KAAQH,mBAAW,IAAAG,IAAkB,QAAlBC,GAAnBD,GAAqBvD,WAAWC,MAAM,KAAK,UAAN,IAAAuD,QAAlB,EAAnBA,GAA+CnD,UAAU,EAAD,cAAAiD,GAAAA,GAAA,cAO/DjF,EAAAA,EAAAA,GAgCM,aA9BFA,EAAAA,EAAAA,GA4BM,MA5BNoF,EA4BM,EAzBJpF,EAAAA,EAAAA,GAIM,MAJNqF,EAIM,EAHJrF,EAAAA,EAAAA,GAAkF,OAA5EC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAA6F,uBAAyB,K,SACvEtF,EAAAA,EAAAA,GAAkF,OAA5EC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAA6F,uBAAyB,K,SACvEtF,EAAAA,EAAAA,GAAkF,OAA5EC,OAAK+C,EAAAA,EAAAA,IAAA,yBAAmCvD,EAAA6F,uBAAyB,K,UAEzD7F,EAAA8F,eAAY,WAA5B1F,EAAAA,EAAAA,IAAoDsD,GAAA,C,MAArBC,KAAM3D,EAAA+F,c,kBACD/F,EAAAgG,qBAAkB,WAApD5F,EAAAA,EAAAA,IAAiEsD,GAAA,C,MAAvDlD,MAAM,OAAuCmD,KAAM,O,WAC7DvD,EAAAA,EAAAA,IAAyCsD,GAAA,C,MAA/BlD,MAAM,OAAemD,KAAM,MACvCpD,EAAAA,EAAAA,GAGM,MAHN0F,EAGM,CAFJC,GACC3F,EAAAA,EAAAA,GAAyD,IAAzD4F,GAAyDnE,EAAAA,EAAAA,IAAnChC,EAAA2C,gBAAgB3C,EAAAgE,cAAW,KAEpDoC,EAIYpG,EAAAgG,qBACW,WACvB/E,EAAAA,EAAAA,IAIM,MAJNoF,MAF8B,WAA9BpF,EAAAA,EAAAA,IACuB,MADvBqF,eAMM,WAWlBrF,EAAAA,EAAAA,IA4EM,MA5ENsF,EA4EM,EAjDFhG,EAAAA,EAAAA,GAwCM,MAxCNiG,EAwCM,CAvCWxG,EAAAyG,eAAkBzG,EAAA+B,W,iBAAS,WAA1Cd,EAAAA,EAAAA,IAEW,U,MAFiCT,MAAM,eAAgBa,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAE3B,EAAA+G,QAAA/G,EAAA+G,UAAApF,K,KAKlEtB,EAAA+B,W,iBAAS,WAFhBd,EAAAA,EAAAA,IAsBO,U,MArBPT,MAAM,cAELa,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA2G,cAAA3G,EAAA2G,gBAAArF,K,CAERsF,IAKArG,EAAAA,EAAAA,GAWS,UAVTC,MAAM,WACNgB,MAAA,yBACCqF,MAAK,KAAOvB,YACZwB,QAAKlH,EAAA,KAAAA,EAAA,GAAEmH,GAAShH,EAAAuF,YAAcyB,EAAMC,OAAOH,OAC3CxF,QAAKzB,EAAA,KAAAA,EAAA,IAAAqH,EAAAA,EAAAA,KAAN,QAAW,Y,gBAEThG,EAAAA,EAAAA,IAGSC,EAAAA,GAAA,MAAAgG,EAAAA,EAAAA,IAHcnH,EAAAoH,YAARC,K,WAAfnG,EAAAA,EAAAA,IAGS,UAH2BP,IAAK0G,EAAOP,MAAOO,G,CACrDC,IAAsC,aACtCrF,EAAAA,EAAAA,IAAGoF,GAAO,MACZ,a,iBAGOpH,EAAA+B,YAAS,WAApBd,EAAAA,EAAAA,IAWM,MAXNqG,GAWM,CAVJC,IACAhH,EAAAA,EAAAA,GAA2H,KAA3HiH,GAA2H,CAApGC,IAAsC,sBAAQnC,aAAc,IAAC,GAAAoC,KACpFC,GACAC,IACArH,EAAAA,EAAAA,GAKS,UAJPC,MAAM,cACLa,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA6H,YAAA7H,EAAA6H,cAAAvG,KACT,gBAED,iBAMMtB,EAAA+B,WAAahC,EAAA+H,iBAAc,WADnC7G,EAAAA,EAAAA,IAMS,U,MAJPT,MAAM,cACLa,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA+H,sBAAA/H,EAAA+H,wBAAAzG,KACT,sBAED,oBAoCEtB,EAAA8B,U,iBAAQ,WADhB1B,EAAAA,EAAAA,IAKc4H,GAAA,C,MAHZC,WAAYjI,EAAAkI,YACZC,cAAenI,EAAAoI,eACfC,YAAarI,EAAAsI,c,g62ECvRH,MAAOC,GAGnBC,YAAY9G,IAAkC+G,EAAAA,GAAAA,GAAA,wBAC5C7F,KAAKlB,SAAWA,CAClB,CAEAgH,mBACE,IACE,MAAMC,EAAO,IAAIC,KAAJ,CAAShG,KAAKlB,UAGrBmH,QAAgBF,EAAKG,IAAIC,aAE/B,OAAOF,EAAQ3G,U,CACf,MAAO8G,GACP,OAAOA,C,CAEX,CAEAN,oBACE,IACE,MAAMC,EAAO,IAAIC,KAAJ,CAAShG,KAAKlB,UAGrBuH,QAAgBN,EAAKG,IAAII,cAE/B,OAAOD,C,CACP,MAAOD,GACP,OAAOA,C,CAEX,CAEAN,mBACE,IACE,MAAMC,EAAO,IAAIC,KAAJ,CAAShG,KAAKlB,UAGrBuH,SAAiBN,EAAKG,IAAII,eAAe,GAGzCvH,EAAUgH,EAAKQ,MAAMC,cACnBT,EAAKG,IAAIO,WAAWJ,IAG5B,OAAOtH,C,CACP,MAAOqH,GACP,OAAOA,C,CAEX,CAEAN,wBACE,IACE,MAAMC,EAAO,IAAIC,KAAJ,CAAShG,KAAKlB,UAGrB4H,SAAqBX,EAAKG,IAAII,eAAe,GAE7CK,EAAcD,EAEdE,EAASb,EAAKQ,MAAMM,MAAM,SAG1BC,QAAgBf,EAAKG,IAAIa,gBAAgB,CAC7CC,KAAMN,EACNO,GAAIN,EACJ1C,MAAO2C,EACPM,qBAAsB,UACtBC,aAAc,YAGhB,OAAOL,C,CACP,MAAOV,GACP,OAAOA,C,CAEX,CAEAN,oBACE,IACE,MAAMC,EAAO,IAAIC,KAAJ,CAAShG,KAAKlB,UAGrB4H,SAAqBX,EAAKG,IAAII,eAAe,GAE7Cc,EAAkB,eAGlBC,QAAsBtB,EAAKG,IAAIoB,SAASC,KAC5CH,EACAV,EACA,kBAGF,OAAOW,C,CACP,MAAOjB,GACP,OAAOA,C,CAEX,CAEAN,sBACE,IACE,MAAM0B,QAAmBxH,KAAKlB,SAAS2I,QAAQ,CAC7CC,OAAQ,oBAGV,OAAOF,C,CACP,MAAOpB,GACP,OAAOA,C,CAEX,E,gBChHK,MAAMuB,GAAQ,CACjBC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,SAAU,EACVC,YAAa,EACbC,UAAW,GAGFC,GAAW,CACpBN,KAAM,EACNO,QAAS,EACTC,QAAS,EACTC,KAAM,GAGGC,GAAa,CACtBC,QAAS,EACTC,YAAa,EACbC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,KAAM,EACNC,UAAW,EACXC,SAAU,EACVC,SAAU,GCzBd,GAAgB,gzBCAhB,GAAgB,gjECAhB,GAAgB,k/G,gBCgDhB,MAAAC,GAAe,CACbC,OACE,MAAO,CACLpB,KAAI,GACJC,MAAK,GACLC,SAAQA,GAEZ,EACAmB,MAAO,CACLnI,KAAMoI,OACNC,QAAS,CACPC,SAAS,GAEXrH,SAAU,CACRqH,SAAS,IAKbC,UACEC,GAAQC,IAAIxJ,KAAKe,KACnB,G,4yBChEI0I,GAAc,GAEpB,M,2DCNS7K,MAAA,uB,YAKGjB,EAAAA,EAAAA,GAA+F,YAA3FA,EAAAA,EAAAA,GAAsF,OAAjFC,MAAM,qBAAmB,EAACD,EAAAA,EAAAA,GAAqC,OAAhCC,MAAM,uBAA0BD,EAAAA,EAAAA,GAAY,SAAT,aAAK,K,YAChFA,EAAAA,EAAAA,GAA+F,YAA3FA,EAAAA,EAAAA,GAAsF,OAAjFC,MAAM,qBAAmB,EAACD,EAAAA,EAAAA,GAAsC,OAAjCC,MAAM,wBAA2BD,EAAAA,EAAAA,GAAW,SAAR,YAAI,K,YAChFA,EAAAA,EAAAA,GAAmG,YAA/FA,EAAAA,EAAAA,GAA0F,OAArFC,MAAM,qBAAmB,EAACD,EAAAA,EAAAA,GAAsC,OAAjCC,MAAM,wBAA2BD,EAAAA,EAAAA,GAAe,SAAZ,gBAAQ,K,YACpFA,EAAAA,EAAAA,GAAmG,YAA/FA,EAAAA,EAAAA,GAA0F,OAArFC,MAAM,qBAAmB,EAACD,EAAAA,EAAAA,GAAsC,OAAjCC,MAAM,wBAA2BD,EAAAA,EAAAA,GAAe,SAAZ,gBAAQ,K,YACpFA,EAAAA,EAAAA,GAAgG,YAA5FA,EAAAA,EAAAA,GAAuF,OAAlFC,MAAM,qBAAmB,EAACD,EAAAA,EAAAA,GAAsC,OAAjCC,MAAM,wBAA2BD,EAAAA,EAAAA,GAAY,SAAT,aAAK,K,YACjFA,EAAAA,EAAAA,GAAkG,YAA9FA,EAAAA,EAAAA,GAAyF,OAApFC,MAAM,qBAAmB,EAACD,EAAAA,EAAAA,GAAuC,OAAlCC,MAAM,yBAA4BD,EAAAA,EAAAA,GAAa,SAAV,cAAM,K,IAE1EC,MAAM,kB,IACFA,MAAM,Q,mBAmBfA,MAAM,S,IACNA,MAAM,Q,IACNA,MAAM,U,YAEFD,EAAAA,EAAAA,GAAgC,OAA3BC,MAAM,gBAAc,W,IAK7BA,MAAM,U,YAEFD,EAAAA,EAAAA,GAAgC,OAA3BC,MAAM,gBAAc,W,IAI7BA,MAAM,S,IACNA,MAAM,QAAQ8L,QAAQ,K,IACpB9L,MAAM,oB,yEAjDpBS,EAAAA,EAAAA,IA0DM,MA1DNX,GA0DM,EAzDJC,EAAAA,EAAAA,GAwDQ,eAvDNA,EAAAA,EAAAA,GA2BQ,eAzBNA,EAAAA,EAAAA,GAwBK,WAvBHE,GACAE,GACAC,GACAC,GACAC,GACA0B,IACAjC,EAAAA,EAAAA,GAaK,YAZDA,EAAAA,EAAAA,GAWU,MAXVkC,GAWU,EAVNlC,EAAAA,EAAAA,GASQ,MATRmC,GASQ,gBARJzB,EAAAA,EAAAA,IAOSC,EAAAA,GAAA,MAAAgG,EAAAA,EAAAA,IANgBnH,EAAAwM,MAAI,CAAnBC,EAAKC,M,WADfxL,EAAAA,EAAAA,IAOS,UALNP,IAAK+L,EACLpL,QAAKqL,GAAE3M,EAAA4M,YAAcH,EACrBhM,OAAK+C,EAAAA,EAAAA,IAAA,CAAAqJ,OAAY7M,EAAA4M,cAAgBH,M,QAE/BA,GAAG,GAAA1J,O,iBAUxBvC,EAAAA,EAAAA,GA0BQ,6BAzBNU,EAAAA,EAAAA,IAwBKC,EAAAA,GAAA,MAAAgG,EAAAA,EAAAA,IAxBuBlH,EAAA6M,cAAY,CAA5BC,EAAML,KAAK,IAAAM,EAAAC,EAAAC,EAAAC,EAAAC,E,kBAAvBlM,EAAAA,EAAAA,IAwBK,MAxBsCP,IAAK+L,GAAK,EACnDlM,EAAAA,EAAAA,GAA6F,KAA7FwC,IAA6Ff,EAAAA,EAAAA,IAAxE8K,EAAKM,OAAON,EAAKO,UAAW,OAAGrL,EAAAA,EAAAA,IAA2B,QAA3B+K,EAAGD,EAAKM,OAAON,EAAKQ,gBAAO,IAAAP,EAAAA,EAAA,OAC/ExM,EAAAA,EAAAA,GAAqC,KAArC4C,IAAqCnB,EAAAA,EAAAA,IAAjB8K,EAAKS,MAAI,IAC7BhN,EAAAA,EAAAA,GAKK,KALL8C,GAKK,EAJD9C,EAAAA,EAAAA,GAGM,YAFF+C,IACA/C,EAAAA,EAAAA,GAAyE,UAAAyB,EAAAA,EAAAA,KAAtD,QAAZgL,EAAAF,EAAKO,eAAO,IAAAL,OAAA,EAAZA,EAAcQ,MAAM,EAAG,IAAJ,OAA6B,QAA7BP,EAAiBH,EAAKO,eAAO,IAAAJ,OAAA,EAAZA,EAAcO,OAAO,KAAF,QAItEjN,EAAAA,EAAAA,GAKK,KALLsD,GAKK,EAJDtD,EAAAA,EAAAA,GAGM,YAFFuD,IACAvD,EAAAA,EAAAA,GAAwE,UAAAyB,EAAAA,EAAAA,KAAtD,QAAZkL,EAAAJ,EAAKQ,eAAO,IAAAJ,OAAA,EAAZA,EAAcM,MAAM,EAAG,IAAJ,OAA6B,QAA7BL,EAAiBL,EAAKQ,eAAO,IAAAH,OAAA,EAAZA,EAAcK,OAAO,KAAF,QAGrEjN,EAAAA,EAAAA,GAAsC,KAAtCwD,GAAkB,KAAC/B,EAAAA,EAAAA,IAAG8K,EAAKW,KAAG,IAC9BlN,EAAAA,EAAAA,GAMK,KANL0D,GAMK,EALH1D,EAAAA,EAAAA,GAIK,KAJL2D,GAIK,gBAHHjD,EAAAA,EAAAA,IAEMC,EAAAA,GAAA,MAAAgG,EAAAA,EAAAA,IAF6B4F,EAAKY,OAAK,CAAhCC,EAAOC,M,WAApB3M,EAAAA,EAAAA,IAEM,OAF0CP,IAAKkN,EAAYpN,MAAM,e,EACrEiD,EAAAA,EAAAA,IAAmEoK,EAAA,CAAvD7B,SAAS,EAAOrI,KAAMgK,EAAMb,EAAKO,U,0BAAsB,QAAG5J,EAAAA,EAAAA,IAAmEoK,EAAA,CAAvD7B,SAAS,EAAOrI,KAAMgK,EAAMb,EAAKQ,U,iEAYnI,UACEQ,WAAY,CACRC,SAAQA,IAEZlC,OACE,MAAO,CACLU,KAAM,CAAC,YAAa,SAAU,WAC9BI,YAAa,YAEjB,EACAb,MAAO,CACH7D,WAAY,CACd+F,KAAMC,MACNhC,QAASA,IAAMgC,MAAM,IAAIC,KAAK,CAC5BC,MAAO,QACPZ,MAAM,IAAIa,MAAOC,iBACjBC,QAAS,WACTC,QAAS,WACTC,MAAO,QACPC,OAAQ,CAAC,UAAW,cAGxBtG,cAAe,CACb6F,KAAMC,MACNhC,QAASA,IAAMgC,MAAM,IAAIC,KAAK,CAC5BC,MAAO,QACPZ,MAAM,IAAIa,MAAOC,iBACjBC,QAAS,WACTC,QAAS,WACTC,MAAO,YACPC,OAAQ,CAAC,UAAW,cAGxBpG,YAAa,CACX2F,KAAMC,MACNhC,QAASA,IAAMgC,MAAM,IAAIC,KAAK,CAC5BC,MAAO,QACPZ,MAAM,IAAIa,MAAOC,iBACjBC,QAAS,WACTC,QAAS,WACTC,MAAO,UACPC,OAAQ,CAAC,UAAW,eAIxBC,SAAU,CACR7B,eAEE,OADAV,GAAQC,IAAI,eAAgBxJ,KAAK+J,aAC1B/J,KAAK+J,aACV,IAAK,SAEH,OADFR,GAAQC,IAAI,cAAexJ,KAAKqF,YACvBrF,KAAKqF,WACd,IAAK,YAEH,OADAkE,GAAQC,IAAI,iBAAkBxJ,KAAKuF,eAC5BvF,KAAKuF,cACd,IAAK,UAEH,OADAgE,GAAQC,IAAI,eAAgBxJ,KAAKyF,aAC1BzF,KAAKyF,YACd,QACE,MAAO,GAEb,GAEFsG,QAAQ,CACJhM,gBAAgBsG,GAClB,OAAc,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASuE,MAAM,EAAG,IAAK,OAAe,OAAPvE,QAAO,IAAPA,OAAO,EAAPA,EAASuE,OAAO,GACxD,I,gBC3HJ,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,oDTgSA,SAASoB,GAAkBC,GACvB,OAAGA,GAAS3D,GAAAA,QACD,UACR2D,GAAS3D,GAAAA,QACD,eACR2D,GAAS3D,GAAAA,UACD,iBACR2D,GAAS3D,GAAAA,SACD,gBACR2D,GAAS3D,GAAAA,QACD,wBACR2D,GAAS3D,GAAAA,QACD,GACR2D,GAAS3D,GAAAA,SACD,gBAEJ,EAEX,CA+BA,MAAM4D,GAAmBC,GAAAA,kBAAAA,MACnBC,GAAeD,GAAAA,aAAAA,MAgBrB,SAASE,KACP,OAAOC,KAAKC,SAASjN,SAAS,IAAIK,UAAU,EAAG,GACjD,CAEA,SAAS6M,GAAWC,EAAOC,GACzB,OAAID,GAASC,EACJxE,GAAAA,KAGLuE,GAAS9E,GAAAA,KACP+E,GAAS/E,GAAAA,MACJO,GAAAA,QAEAA,GAAAA,QAIPuE,GAAS9E,GAAAA,MACP+E,GAAS/E,GAAAA,SACJO,GAAAA,QAEAA,GAAAA,QAIPuE,GAAS9E,GAAAA,SACP+E,GAAS/E,GAAAA,KACJO,GAAAA,QAEAA,GAAAA,aAJX,CAOF,CAEA,UACEgD,WAAY,CACRC,SAAQ,GACRwB,SAAQA,IAEZzD,MAAO,CACLpK,SAAU,CACRsM,KAAMwB,OACNvD,QAAS,MAEXtK,QAAS,CACPqM,KAAMjC,OACNE,QAAS,OAGbJ,OACE,MAAO,CACL4D,mBAAoB,KACpBC,aAAa,EACbC,MAAO,CAAC,EACRC,kBAAmB,EACnBC,cAAe,IAEfjM,aAAc,GACd0B,YAAa,GACbwK,aAAc,GAEdC,iBAAkB,KAClBC,UAAW,GAEXC,uBAAwB,GACxBC,oBAAqB,GACrBC,qBAAsB,GACtBC,oBAAqB,GACrBC,mBAAoB,GACpBC,eAAgB,GAChBC,kBAAmB,GACnBC,sBAAuB,GAEvBrJ,WAAY,CAAC,OAAQ,MAAO,IAAK,IAAK,MACtCsJ,YAAa,EAEbC,aAAc,EACd7N,cAAe,KAEf8N,QAAS,KAETC,kBAAmB,KACnBC,gBAAiB,KAEjB/I,eAAgB,KAEpB,EACA4G,SAAU,CACRoC,mBAAmB,IAAAC,EACjB,OAAyB,QAAzBA,EAAOnO,KAAKC,qBAAa,IAAAkO,OAAA,EAAlBA,EAAoBC,aAC7B,EACAC,UAAW,OAAO,IAAIrI,KAAJ,CAAShG,KAAKlB,SAAU,EAC1CC,UAAW,OAAOiB,KAAKyG,YAAa,EAEpC3E,SAAW,OAAO9B,KAAKgB,eAAiB2G,GAAAA,IAAW,EACnD1F,UAAY,OAAOjC,KAAKgB,eAAiB2G,GAAAA,KAAY,EACrDxF,aAAe,OAAOnC,KAAKgB,eAAiB2G,GAAAA,QAAe,EAC3D2G,YAAY,IAAAC,EAAAC,EAAAC,EAAAC,EAEV,GADAnF,GAAQC,IAAI,YAAaxJ,KAAKiN,cAAejN,KAAK+M,QAC7C/M,KAAK+M,MAAuB,QAAlBwB,EAACvO,KAAKiN,qBAAY,IAAAsB,EAAAA,EAAK,KACpC,OAAOjG,GAAAA,QAET,MAAMlI,EAAeJ,KAAK+M,MAAuB,QAAlByB,EAACxO,KAAKiN,qBAAY,IAAAuB,EAAAA,EAAK,KAAKzD,MAC3D,OAAuF,QAAvF0D,EAAOzO,KAAK+M,MAAuB,QAAlB2B,EAAC1O,KAAKiN,qBAAY,IAAAyB,EAAAA,EAAK,KAAKC,OAAOvO,GAAcJ,KAAKkO,yBAAgB,IAAAO,EAAAA,EAAKnG,GAAAA,OAC9F,EACAsG,wBACE,OAAO5O,KAAKsO,WACV,KAAKhG,GAAAA,QACH,MAAO,uBACT,KAAKA,GAAAA,QACH,MAAO,uBACT,KAAKA,GAAAA,QACH,MAAO,eACT,KAAKA,GAAAA,KACH,MAAO,YACT,KAAKA,GAAAA,UACH,MAAO,iBACT,KAAKA,GAAAA,SACH,MAAO,gBACT,KAAKA,GAAAA,QACH,MAAO,iBACT,KAAKA,GAAAA,SACH,MAAO,gBACT,QACE,MAAO,GAEb,EACAzE,gBAAkB,OAAO7D,KAAKsO,WAAahG,GAAAA,WAAuB,EAClEnJ,YAAc,OAAOa,KAAKsO,WAAahG,GAAAA,OAAmB,EAC1DuG,cAAgB,OAAO7O,KAAKsO,WAAahG,GAAAA,SAAqB,EAC9DwG,aAAe,OAAO9O,KAAKsO,WAAahG,GAAAA,QAAoB,EAE5DhI,mBACE,OAAGN,KAAKkD,aACHlD,KAAK+O,SACC,WACC/O,KAAKgP,QACN,YAEA,QAGJ,IAET,EACAC,yBAA2B,OAAOjP,KAAKkP,eAAiB5G,GAAAA,QAAoB,EAC5EpF,eAAiB,OAAOlD,KAAK8O,YAAc9O,KAAKiP,sBAAuB,EACvE/P,WAAa,OAAOc,KAAKsO,WAAahG,GAAAA,SAAsBtI,KAAKsO,WAAahG,GAAAA,WAAwBtI,KAAKsO,WAAahG,GAAAA,UAAuBtI,KAAKsO,WAAahG,GAAAA,SAAsBtI,KAAKsO,WAAahG,GAAAA,IAAgB,EACzN6G,aAAe,OAAOnP,KAAKsO,WAAahG,GAAAA,MAAmBtI,KAAKsO,WAAahG,GAAAA,WAAwBtI,KAAKsO,WAAahG,GAAAA,QAAmB,EAC1IlF,qBAAuB,OAAOpD,KAAKkP,eAAiB5G,GAAAA,MAAmBtI,KAAKkP,eAAiB5G,GAAAA,WAAwBtI,KAAKkP,eAAiB5G,GAAAA,QAAmB,EAC9J8G,iBAAmB,OAAOpP,KAAKsO,WAAahG,GAAAA,QAAmB,EAC/DlI,eAAe,IAAAiP,EAAE,OAAOrP,KAAK+M,MAAuB,QAAlBsC,EAACrP,KAAKiN,qBAAY,IAAAoC,EAAAA,EAAK,KAAKtE,KAAM,EACpE5H,eAAe,IAAAmM,EAAE,OAAOtP,KAAK+M,MAAuB,QAAlBuC,EAACtP,KAAKiN,qBAAY,IAAAqC,EAAAA,EAAK,KAAKxE,MAAM9K,KAAKI,cAAcJ,KAAKuP,mBAAoB,EAChHR,WAEE,OAAOvC,GAAWxM,KAAKgB,aAAchB,KAAKmD,eAAiB+E,GAAAA,OAC7D,EACA8G,UAEE,OAAOxC,GAAWxM,KAAKgB,aAAchB,KAAKmD,eAAiB+E,GAAAA,OAC7D,EAEAsH,eAOE,MAAMzC,EAAQ0C,OAAOC,OAAO1P,KAAK+M,OAAO4C,MAAK,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAEE,SAC9DN,EAAezC,EAAMgD,MAAKC,GAAQA,EAAKF,SAAW9P,KAAKiN,eAAiB+C,EAAKC,SAAW/H,GAAAA,OAG9F,OAFAqB,GAAQC,IAAI,0BAA2BuD,GACvCxD,GAAQC,IAAI,gBAAiBgG,GACtBA,CACT,EACAU,oBAAoB,IAAAC,EAAAC,EAAE,OAA4B,QAA5BD,EAAwB,QAAxBC,EAAOpQ,KAAKwP,oBAAY,IAAAY,OAAA,EAAjBA,EAAmBvF,WAAE,IAAAsF,EAAAA,EAAK,CAAC,EACxD9P,eAAe,IAAAgQ,EAAAC,EAAE,OAAyC,QAAzCD,EAAqC,QAArCC,EAAOtQ,KAAK+M,MAAM/M,KAAKiN,sBAAc,IAAAqD,OAAA,EAA9BA,EAAgCzF,WAAE,IAAAwF,EAAAA,EAAK,CAAC,EAChEE,qBAAqB,IAAAC,EAAAC,EAAAC,EAEnB,OADAnH,GAAQC,IAAI,qBAAuC,QAAnBgH,EAAExQ,KAAKwP,oBAAY,IAAAgB,OAAA,EAAjBA,EAAmBhG,OAAOxK,KAAKkO,iBAAiBE,gBACd,QAApEqC,EAAwB,QAAxBC,EAAO1Q,KAAKwP,oBAAY,IAAAkB,OAAA,EAAjBA,EAAmBlG,OAAOxK,KAAKkO,iBAAiBE,sBAAa,IAAAqC,EAAAA,EAAK,CAC3E,EACAE,uBAAuB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrB,MAAMvG,EAA2B,QAArBmG,EAAI5Q,KAAKwP,oBAAY,IAAAoB,GAAS,QAATC,EAAjBD,EAAmBnG,eAAO,IAAAoG,OAAT,EAAjBA,EAA4BzC,cACtC1D,EAA2B,QAArBoG,EAAI9Q,KAAKwP,oBAAY,IAAAsB,GAAS,QAATC,EAAjBD,EAAmBpG,eAAO,IAAAqG,OAAT,EAAjBA,EAA4B3C,cAC5C,OAAO3D,KAAgB,OAAJzK,WAAI,IAAJA,MAAsB,QAAlBgR,EAAJhR,KAAMkO,wBAAgB,IAAA8C,OAAlB,EAAJA,EAAwB5C,eAAgB1D,EAAUD,CACvE,EACA7J,oBAAoB,IAAAqQ,EAAAC,EAAAC,EAAE,OAAkF,QAAlFF,EAAqC,QAArCC,EAAOlR,KAAK+M,MAAM/M,KAAKiN,sBAAc,IAAAiE,OAAA,EAA9BA,EAAgC1G,OAA4B,QAAtB2G,EAACnR,KAAKkO,wBAAgB,IAAAiD,OAAA,EAArBA,EAAuB/C,sBAAa,IAAA6C,EAAAA,EAAK,CAAC,EAC9GhO,wBAAwB,IAAAmO,EAAAC,EAAAC,EAAE,OAAiF,QAAjFF,EAAqC,QAArCC,EAAOrR,KAAK+M,MAAM/M,KAAKiN,sBAAc,IAAAoE,OAAA,EAA9BA,EAAgC7G,OAA2B,QAArB8G,EAACtR,KAAKuR,uBAAe,IAAAD,OAAA,EAApBA,EAAsBlD,sBAAa,IAAAgD,EAAAA,EAAK,CAAC,EACjHI,6BAA6B,IAAAC,EAAAC,EAAAC,EAAE,OAAyE,QAAzEF,EAAwB,QAAxBC,EAAO1R,KAAKwP,oBAAY,IAAAkC,OAAA,EAAjBA,EAAmBlH,OAAgC,QAA1BmH,EAAC3R,KAAK2Q,4BAAoB,IAAAgB,OAAA,EAAzBA,EAA2BvD,sBAAa,IAAAqD,EAAAA,EAAK,CAAC,EAC9GG,cAAgB,OAAO5R,KAAKuQ,mBAAqBvQ,KAAKwR,0BAA0B,EAChFpQ,cAAgB,OAAOpB,KAAKkO,gBAAgB,EAC5C2D,WAAa,OAAO7R,KAAKgB,YAAa,EACtCuQ,kBAAiB,IAAAO,EAAAC,EAAAC,EAAAC,EAAAC,EACf,MAAMzH,EAAwC,QAAlCqH,EAAI9R,KAAK+M,MAAM/M,KAAKiN,sBAAc,IAAA6E,GAAS,QAATC,EAA9BD,EAAgCrH,eAAO,IAAAsH,OAAT,EAA9BA,EAAyC3D,cACnD1D,EAAwC,QAAlCsH,EAAIhS,KAAK+M,MAAM/M,KAAKiN,sBAAc,IAAA+E,GAAS,QAATC,EAA9BD,EAAgCtH,eAAO,IAAAuH,OAAT,EAA9BA,EAAyC7D,cACzD,OAAO3D,KAAgB,OAAJzK,WAAI,IAAJA,MAAsB,QAAlBkS,EAAJlS,KAAMkO,wBAAgB,IAAAgE,OAAlB,EAAJA,EAAwB9D,eAAgB1D,EAAUD,CACvE,EACAtH,eAAe,IAAAgP,EAAAC,EAAAC,EAAAC,EACb,MAAMf,EAAsC,QAAxBY,EAAInS,KAAKuR,uBAAe,IAAAY,OAAA,EAApBA,EAAsB/D,cACxCnB,EAAgBjN,KAAKiN,cAC3B,OAA0G,QAA1GmF,EAA+C,QAA/CC,EAAOrS,KAAK+M,MAAmB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAemB,sBAAc,IAAAiE,GAA0B,QAA1BC,EAAxCD,EAA0CvH,MAAM9K,KAAKI,qBAAa,IAAAkS,OAA1B,EAAxCA,EAAoF,OAAff,QAAe,IAAfA,OAAe,EAAfA,EAAiBnD,sBAAa,IAAAgE,EAAAA,EAAKzK,GAAAA,IACjH,EACAuH,gBAAgB,IAAAqD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACd,MAAMtB,EAAsC,QAAxBgB,EAAIvS,KAAKuR,uBAAe,IAAAgB,OAAA,EAApBA,EAAsBnE,cACxCnB,EAAoB,OAAJjN,WAAI,IAAJA,UAAI,EAAJA,KAAMiN,cACtB7M,EAA0D,QAA/CoS,EAAyC,QAAzCC,EAAIzS,KAAK+M,MAAuB,QAAlB2F,EAAC1S,KAAKiN,qBAAY,IAAAyF,EAAAA,EAAK,YAAI,IAAAD,OAAA,EAArCA,EAAuC1H,aAAI,IAAAyH,EAAAA,EAAK,EAErE,OADAjJ,GAAQC,IAAI,gBAAyD,QAA1CmJ,EAAE3S,KAAK+M,MAAmB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAemB,sBAAc,IAAAuE,OAAA,EAAxCA,EAA0ChE,OAAOvO,GAA6B,OAAfmR,QAAe,IAAfA,OAAe,EAAfA,EAAiBnD,gBACT,QAApGwE,EAA+C,QAA/CC,EAAO7S,KAAK+M,MAAmB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAemB,sBAAc,IAAAyE,OAAA,EAAxCA,EAA0ClE,OAAOvO,GAA6B,OAAfmR,QAAe,IAAfA,OAAe,EAAfA,EAAiBnD,sBAAa,IAAAwE,EAAAA,EAAKtK,GAAAA,OAC3G,EAEAwK,wBACE,OAAO9S,KAAKkP,eACV,KAAK5G,GAAAA,QACH,MAAO,gBACT,KAAKA,GAAAA,YACH,MAAO,cACT,KAAKA,GAAAA,QACH,MAAO,UACT,KAAKA,GAAAA,QACH,MAAO,gBACT,KAAKA,GAAAA,QACH,MAAO,UACT,KAAKA,GAAAA,KACH,MAAO,OACT,KAAKA,GAAAA,UACH,MAAO,YACT,KAAKA,GAAAA,SACH,MAAO,WACT,KAAKA,GAAAA,SACH,MAAO,WACT,QACE,MAAO,UAEb,EACAyK,gBAAkB,OAAO/S,KAAKsO,WAAahG,GAAAA,OAAmB,EAM9D0K,eAEE,OADAzJ,GAAQC,IAAI,eAAgBxJ,KAAKmP,WAAYnP,KAAKoD,mBAAoBpD,KAAKoP,eAAgBpP,KAAK6O,aACzF7O,KAAKmP,YAAcnP,KAAKoD,qBAAuBpD,KAAKoP,iBAAmBpP,KAAK6O,aAAe7O,KAAK8M,cAAgB9M,KAAK8O,UAC9H,EAEAtO,aACE,OAAQR,KAAKmP,YAAcnP,KAAK+S,gBAAkB/S,KAAKd,QACzD,EACA+T,yBAEE,MAAMC,EAAgBC,aAAaC,QAAQ,iBAE3C,OAAOF,GAAiBlT,KAAKiO,iBAAmBoF,GAAAA,CAClD,EAGA3N,eACE,MAAMqH,EAAQ0C,OAAOC,OAAO1P,KAAK+M,OACjC,OAAOA,EAAMuG,QAAOtD,GAAQA,EAAKC,SAAW/H,GAAAA,MAAiC,IAAhB8H,EAAKtF,SAAgC,KAAfsF,EAAKF,QAC1F,EAEAxK,cACE,MAAMyH,EAAQ0C,OAAOC,OAAO1P,KAAK+M,OACjC,OAAOA,EAAMuG,QAAOtD,GAAQA,EAAKC,SAAW/H,GAAAA,MAAiC,IAAhB8H,EAAKtF,SAAgC,KAAfsF,EAAKF,QAC1F,EAEAtK,iBACE,MAAMuH,EAAQ0C,OAAOC,OAAO1P,KAAK+M,OACjC,OAAOA,EAAMuG,QAAOtD,GAAQA,EAAKC,SAAW/H,GAAAA,MAAgC,KAAf8H,EAAKF,QACpE,GAOFhK,gBACEyD,GAAQC,IAAI,WAAYxJ,KAAKlB,UAC7BkB,KAAK8M,aAAc,EACnB9M,KAAKuT,iBACLvT,KAAKwT,oBAELjK,GAAQC,IAAI,WAAYiK,GAAAA,YAGxB,MAAMC,EAAeP,aAAaC,QAAQ,gBACpCO,EAAmBR,aAAaC,QAAQ,oBACxCQ,EAAgBT,aAAaC,QAAQ,iBACrClO,EAAiBiO,aAAaC,QAAQ,kBAExCM,IACF1T,KAAKgB,aAAe0S,GAGlBE,IACF5T,KAAK0C,YAAckR,EACnB5T,KAAK6N,YAAc7N,KAAKuE,WAAWsP,QAAQC,WAAWF,KAGpDD,IACF3T,KAAKkN,aAAeyG,GAGtB3T,KAAKkF,eAAoC,SAAnBA,EACtBqE,GAAQC,IAAI,iBAAkBxJ,KAAKkF,gBACnCqE,GAAQC,IAAI,8BAA+B2J,aAAaC,QAAQ,mBAEhEpT,KAAK8M,aAAc,QAGb9M,KAAK+T,mBAGL/T,KAAKgU,6BAGLhU,KAAKiU,sBAEb,EACAC,MAAM,CACJnH,MAAO,CACLoH,QAAQC,EAAUC,GAChB9K,GAAQC,IAAI,gBAAiBwC,GAAkBhM,KAAKsO,YACpD/E,GAAQC,IAAI,gBAAiBxJ,KAAK+M,MAAM/M,KAAKiN,eAC/C,EACAqH,MAAM,GAERtB,aAAc,CACZmB,QAAQC,EAAUC,GACZD,IACF7K,GAAQC,IAAI,yBACZxJ,KAAKuU,aAET,EACAD,MAAM,IAGVvI,QAAS,CACPhM,gBAAgBsG,GACd,OAAc,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASuE,MAAM,EAAG,IAAK,OAAe,OAAPvE,QAAO,IAAPA,OAAO,EAAPA,EAASuE,OAAO,GACxD,EACA7I,SACE/B,KAAKgB,aAAe2G,GAAAA,KACpB3H,KAAKwU,UACP,EACAtS,UACElC,KAAKgB,aAAe2G,GAAAA,MACpB3H,KAAKwU,UACP,EACApS,aACEpC,KAAKgB,aAAe2G,GAAAA,SACpB3H,KAAKwU,UACP,EACAC,cAAc5K,GACZ7J,KAAK6N,YAAchE,EACnB7J,KAAK0U,oBACP,EACAA,qBACE1U,KAAK0C,YAAc1C,KAAKuE,WAAWvE,KAAK6N,YAC1C,EACA8G,uBACE,MAAMC,EAA6BzB,aAAaC,QAAQ,kBACtB,QAA9BwB,GACFrL,GAAQC,IAAI,mCACZ2J,aAAa0B,QAAQ,kBAAkB,GACvC7U,KAAKkF,gBAAiB,IAEtBqE,GAAQC,IAAI,kCACZ2J,aAAa0B,QAAQ,kBAAkB,GACvC7U,KAAKkF,gBAAiB,EAG1B,EACAY,8BACK9F,KAAKC,eACN6U,MAAM,qBAAsB,CAC1BpN,OAAQ,OACRqN,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB7O,YAGD8O,MAAMC,GAAQA,EAAIC,SAClBF,MAAMlM,IACLqM,gBAAgBrM,EAAKsM,cAAc,GAG3C,EACAzP,mBACE,MAAM0P,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAGxC,OAFAiD,GAAQC,IAAI,WAAYgM,GACxBxV,KAAKC,cAAgBuV,EAAS,GACvBA,EAAS,EAClB,EACA1P,oBACE9F,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,IAGF3C,GAAQC,IAAI,mBAAoBxJ,KAAKmN,kBAGrCnN,KAAKgO,kBAAoB,IAAIhO,KAAKqO,QAAQnI,IAAIuP,SAC1CtJ,GAAAA,aAAAA,UACAA,GAAAA,kBAAAA,UAEN,EAEArG,uBACE,aAAa9F,KAAKqO,QAAQnI,IAAIwP,gBAChC,EACA5P,oBAIE,OAHK9F,KAAKmN,wBACFnN,KAAK2V,cAEN3V,KAAKmN,gBACd,EAEAyI,WAAW9F,EAAQrF,EAASzK,KAAKkO,kBAC/BlO,KAAK+M,MAAM+C,GAAU,CACnBA,SACArF,QAASA,EAAQ2D,cACjB1D,QAAS,GACTiE,OAAQ,CACJ,CAAC,GAAI,CACD,CAAClE,EAAQ2D,eAAgB9F,GAAAA,UAGjCuC,IAAK,EACLC,MAAO,CACL,CAAC,GAAI,CACH,CAACL,EAAQ2D,eAAgBzG,GAAAA,OAG7BsI,QAAS/H,GAAAA,KACTsC,OAAQ,CACN,CAACC,EAAQ2D,eAAgB,GAE3BrD,MAAO,EAEX,EAEA8K,cAAc/F,GACZvG,GAAQC,IAAI,oBAAqBsG,GACjC9P,KAAK8N,YAAcgI,SAAShG,EAC9B,EAEAiG,eAAejG,GACb,OAAOgG,SAAShG,IAAW9P,KAAK8N,aAAegC,GAAU9P,KAAKiN,aAChE,EAEA+I,QAAQlG,GACN,OAAO9P,KAAK+M,MAAM+C,EACpB,EAEAmG,oBAAoBnG,GAClB,OAAO9P,KAAK+M,MAAM+C,GAAQoG,OAAS,CACrC,EAEAC,uBAAuBC,GACvB,MAAMC,EAAO,IAAI7K,KAAiB,IAAZ4K,GACtB,IAAIE,EAAQD,EAAKE,WACjB,MAAMC,EAAU,IAAMH,EAAKI,aACrBC,EAAOJ,GAAS,GAAK,KAAO,KAClCA,GAAgB,GAChBA,EAAQA,GAAgB,GACxB,MAAMK,EAAUL,EAAQ,IAAME,EAAQI,QAAQ,GAAK,IAAMF,EACzD,OAAOC,CACX,EAGI7Q,0BAA0B3B,EAAO0S,GAC/BtN,GAAQC,IAAI,0BAA2BrF,EAAM2S,cAC7C,MAAM,OAAEhH,EAAM,cAAEiH,GAAkB5S,EAAM2S,aAGnC9W,KAAKgW,QAAQlG,EAAQ,IACxB9P,KAAK4V,WAAW9F,EAAQiH,GAG1B/W,KAAKgW,QAAQlG,GAAQnB,OAAO,GAAGoI,EAAc3I,eAAiB9F,GAAAA,QAE9D,MAAM0O,QAAchX,KAAKqO,QAAQnI,IAAI+Q,SAAS9S,EAAM+S,aAC9Cd,EAAYY,EAAMZ,UACxBpW,KAAKgW,QAAQlG,GAAQnF,KAAO3K,KAAKmW,uBAAuBC,GAGpDW,EAAc3I,gBAAkByI,EAAYzI,gBAC1CpO,KAAK+V,eAAejG,KACtB9P,KAAKiN,cAAgB6C,EACrBvG,GAAQC,IAAI,wBAAyBxJ,KAAKiN,gBAE5CjN,KAAK6V,cAAc/F,GAEvB,EAIAqH,mBAAmBhT,GACjBoF,GAAQC,IAAI,uBAAwBrF,EAAM2S,cAC1C,MAAM,OAAEhH,EAAM,IAAEjF,GAAQ1G,EAAM2S,aAGzB9W,KAAKgW,QAAQlG,EAAQ,IACxB9P,KAAK4V,WAAW9F,GAGlB,MAAMrF,EAAUzK,KAAKgW,QAAQlG,GAAQrF,QAAQ2D,cACvC1D,EAAU1K,KAAKgW,QAAQlG,GAAQpF,QAAQ0D,cAC7CpO,KAAKgW,QAAQlG,GAAQnB,OAAO,GAAGlE,GAAWnC,GAAAA,QAG1CtI,KAAKgW,QAAQlG,GAAQjF,IAAY,MAANA,EAGvBJ,IAAYzK,KAAKC,cAAcmO,eAAiB1D,IAAY1K,KAAKC,cAAcmO,gBACjFpO,KAAKiN,cAAgB6C,EACrB9P,KAAK6V,cAAc/F,GACnBvG,GAAQC,IAAI,wBAAyBxJ,KAAKiN,eAE9C,EAGAmK,0BAA0BjT,GACxBoF,GAAQC,IAAI,wBAAyBrF,EAAM2S,cAC3C,MAAM,OAAEhH,EAAM,QAAErF,EAAO,QAAEC,GAAYvG,EAAM2S,aAGtC9W,KAAKgW,QAAQlG,IAChB9P,KAAK4V,WAAW9F,EAAQrF,GAG1BzK,KAAKgW,QAAQlG,GAAQrF,QAAUA,EAAQ2D,cACvCpO,KAAKgW,QAAQlG,GAAQpF,QAAUA,EAAQ0D,cAGvCpO,KAAKgW,QAAQlG,GAAQnB,OAAO,GAAGlE,EAAQ2D,eAAiB9F,GAAAA,QACxDtI,KAAKgW,QAAQlG,GAAQnB,OAAO,GAAGjE,EAAQ0D,eAAiB9F,GAAAA,QAGpDmC,EAAQ2D,eAAiBpO,KAAKC,cAAcmO,eAAiB1D,EAAQ0D,eAAiBpO,KAAKC,cAAcmO,gBAC3GpO,KAAKiN,cAAgB6C,EACrBvG,GAAQC,IAAI,wBAAyBxJ,KAAKiN,gBAE5C1D,GAAQC,IAAI,0BACd,EAEA6N,oBAAoBlT,GAClBoF,GAAQC,IAAI,kBAAmBrF,EAAM2S,cACrC,MAAM,OAAEhH,EAAM,MAAE/E,EAAK,cAAEgM,GAAkB5S,EAAM2S,aAG1C9W,KAAKgW,QAAQlG,IAChB9P,KAAK4V,WAAW9F,EAAQiH,GAGrB/W,KAAKgW,QAAQlG,GAAQhF,MAAMC,KAC9B/K,KAAKgW,QAAQlG,GAAQhF,MAAMC,GAAS,CAAC,GAGlC/K,KAAKgW,QAAQlG,GAAQnB,OAAO5D,KAC/B/K,KAAKgW,QAAQlG,GAAQnB,OAAO5D,GAAS,CAAC,GAGxC/K,KAAKgW,QAAQlG,GAAQnB,OAAO5D,GAAOgM,EAAc3I,eAAiB9F,GAAAA,IACpE,EAEAgP,oBAAoBnT,GAClBoF,GAAQC,IAAI,sBAAuBrF,EAAM2S,cACzC,MAAM,OAAEhH,EAAM,MAAE/E,EAAK,cAAEgM,EAAa,KAAEhW,GAASoD,EAAM2S,aAGhD9W,KAAKgW,QAAQlG,IAChB9P,KAAK4V,WAAW9F,EAAQiH,GAGrB/W,KAAKgW,QAAQlG,GAAQhF,MAAMC,KAC9B/K,KAAKgW,QAAQlG,GAAQhF,MAAMC,GAAS,CAAC,GAGlC/K,KAAKgW,QAAQlG,GAAQnB,OAAO5D,KAC/B/K,KAAKgW,QAAQlG,GAAQnB,OAAO5D,GAAS,CAAC,GAGxC/K,KAAK+M,MAAM+C,GAAQhF,MAAMC,GAAOgM,EAAc3I,eAAiBrN,EAG/Df,KAAK+M,MAAM+C,GAAQnB,OAAO5D,GAAOgM,EAAc3I,eAAiB9F,GAAAA,QAClE,EAGAiP,oBAAoBpT,GAClBoF,GAAQC,IAAI,kBAAmBrF,EAAM2S,cACrC,MAAM,OAAEhH,EAAM,MAAE/E,EAAK,QAAEyM,EAAO,QAAEC,GAAYtT,EAAM2S,aAG7C9W,KAAK+M,MAAM+C,IACd9P,KAAK4V,WAAW9F,GAGb9P,KAAK+M,MAAM+C,GAAQnB,OAAO5D,KAC7B/K,KAAK+M,MAAM+C,GAAQnB,OAAO5D,GAAS,CAAC,GAGjC/K,KAAK+M,MAAM+C,GAAQhF,MAAMC,KAC5B/K,KAAK+M,MAAM+C,GAAQhF,MAAMC,GAAS,CAAC,GAGrC/K,KAAK+M,MAAM+C,GAAQ/E,MAAQA,EAG3B/K,KAAK+M,MAAM+C,GAAQtF,OAAOxK,KAAK+M,MAAM+C,GAAQrF,QAAQ2D,eAAiBoJ,EACtExX,KAAK+M,MAAM+C,GAAQtF,OAAOxK,KAAK+M,MAAM+C,GAAQpF,QAAQ0D,eAAiBqJ,EAEtElO,GAAQC,IAAI,gCAAiCsG,EAAQ0H,EAASC,EAQhE,EAEAC,mBAAmBvT,GACjBoF,GAAQC,IAAI,qBAAsBrF,EAAM2S,cACxC,MAAM,OAAEhH,EAAM,QAAEG,GAAY9L,EAAM2S,aAG7B9W,KAAK+M,MAAM+C,IACd9P,KAAK4V,WAAW9F,GAGlB9P,KAAK+M,MAAM+C,GAAQG,QAAUA,EAG1BjQ,KAAK+V,eAAejG,KACrB9P,KAAKiN,cAAgB,IACrB1D,GAAQC,IAAK,kCAAiCsG,sBAA2B9P,KAAK8N,eAC9E9N,KAAK4V,WAAW,KAChB5V,KAAK6V,cAAc/F,GAEvB,EAGA6H,2BAA2BxT,GACzBoF,GAAQC,IAAI,yBAA0BrF,EAAM2S,cAC5C,MAAM,OAAEhH,EAAM,cAAEiH,GAAkB5S,EAAM2S,aAGnC9W,KAAK+M,MAAM+C,IACd9P,KAAK4V,WAAW9F,EAAQiH,GAGtB/W,KAAK+M,MAAM+C,GAAQrF,QAAQ2D,eAAiBpO,KAAKC,cAAcmO,eAAiBpO,KAAK+M,MAAM+C,GAAQpF,QAAQ0D,eAAiBpO,KAAKC,cAAcmO,eAE9IpO,KAAK+V,eAAejG,KACrBvG,GAAQC,IAAI,6BAA8BsG,GAE1C9P,KAAK4V,WAAW,KAChB5V,KAAK6V,cAAc/F,GAGzB,EAEAhK,0BACE,MAAM8R,QAAiB5X,KAAK6X,cACtBhB,QAAoB7W,KAAK+T,aAE/BxK,GAAQC,IAAI,yBACZD,GAAQC,IAAI,YAAaoO,GAEzB,MAAME,EAAa,CACjB,mBACA,gBACA,iBACA,gBACA,eACA,WACA,cACA,mBAGIC,EAAgB,CACpBC,iBAAkBhY,KAAKiY,oBACvBC,cAAelY,KAAKmX,mBACpBgB,eAAgBnY,KAAKoX,0BACrBgB,cAAepY,KAAKqX,oBACpBgB,aAAcrY,KAAKsX,oBACnBgB,SAAUtY,KAAKuX,oBACfgB,YAAavY,KAAK0X,mBAClBc,gBAAiBxY,KAAK2X,4BAGlBc,EAAkB,IAExB,IAAIC,QAAyB1Y,KAAK0V,iBAElCiD,aAAY7S,UACV,MAAM8S,QAAqB5Y,KAAK0V,iBAEhC,IAAK,MAAMmD,KAAaf,EAAY,CAClC,MAAMgB,QAAelB,EAASmB,cAAcF,EAAW,CACrDG,UAAWN,EAAmB,EAC9BO,QAASL,IAGXE,EAAOI,SAAS/U,IACdoF,GAAQC,IAAK,OAAMqP,oBAA6B1U,GAC9B,aAAd0U,GAA0C,gBAAdA,EAC9BM,YAAW,KACTpB,EAAcc,GAAWO,KAAKpZ,KAAMmE,EAAO0S,EAAY,GACtD,KAEHkB,EAAcc,GAAWO,KAAKpZ,KAAMmE,EAAO0S,EAC7C,GAEJ,CAEA6B,EAAmBE,CAAY,GAC9BH,EACL,EAEA3S,oBACE,MAAMuT,QAAiBhN,KACjBiN,EAAe,MAAOC,EAAAA,GAAAA,QAAOF,GAEnClG,aAAa0B,QAAQ,eAAgByE,GACrCnG,aAAa0B,QAAQ,WAAYwE,EACnC,EAEAG,cACE,MAAMH,EAAWlG,aAAaC,QAAQ,YACtC,OAAOiG,CACT,EAEAI,kBACE,MAAMH,EAAenG,aAAaC,QAAQ,gBAC1C,OAAOkG,CACT,EAEAxT,wBACO9F,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIJ,IACE,MAAMsJ,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCwJ,QAAe9P,KAAKmN,iBAAiBpB,QACxC2N,WAAWlE,EAAS,IACpB4D,KAAK,CAAEpS,KAAMwO,EAAS,KACzB,OAAO1F,CACT,CAAE,MAAO1J,GACP,CAEJ,EAIAuT,oBACE,MAAMC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,MACpCJ,EAAIK,aAAaC,IAAI,MAAOla,KAAKkO,kBACjCiM,UAAUC,UAAUC,UAAUT,EAAII,MAClCM,MAAM,uBACR,EAEAnV,uBACE,MAAMyU,EAAM,IAAIC,IAAIC,OAAOC,SAASC,MAC9BX,EAAWrZ,KAAKwZ,cACtBI,EAAIK,aAAaC,IAAI,OAAQb,GAC7B,MAAMxO,EAAM7K,KAAK0C,YACjBkX,EAAIK,aAAaC,IAAI,MAAOrP,GAC5BsP,UAAUC,UAAUC,UAAUT,EAAII,MAClCM,MAAM,uBACR,EAGAxU,2BAEE,GADAyD,GAAQC,IAAI,8BACRxJ,KAAKgO,kBACP,UACyBhO,KAAKqO,QAAQnI,IAAII,cAAxC,MACMiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAGXC,EAAmBtH,aAAaC,QAAQ,iBAC9C7J,GAAQC,IAAI,oBAAqBiR,GAGjC,MAAMC,QAAe1a,KAAKgO,kBAAkBjC,QAAQ4O,mBAAmBF,GAAkBG,KAAK,CAC5F5T,KAAMhH,KAAKC,cACXsa,WACAC,aAEFjR,GAAQC,IAAI,6BAA8BkR,EAC5C,CAAE,MAAOtU,GACPmD,GAAQnD,MAAM,iCAAkCA,EAClD,CAGJ,EAIAN,qBACE,GAAG9F,KAAKkF,qBACAlF,KAAK6a,0BAUb,GAPK7a,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIClM,KAAK0C,YAAV,CAKG1C,KAAKiT,6BACAjT,KAAK2a,qBAEXpR,GAAQC,IAAI,kCAGd,IAAI,IAAAsR,EAAAC,EAAAC,EACFzR,GAAQC,IAAI,sBAAuBxJ,KAAKiN,eACnCjN,KAAK+M,MAAuB,QAAlB+N,EAAC9a,KAAKiN,qBAAY,IAAA6N,EAAAA,EAAK,MACpC9a,KAAK4V,WAA4B,QAAlBmF,EAAC/a,KAAKiN,qBAAY,IAAA8N,EAAAA,EAAK,KACxC/a,KAAK+M,MAAuB,QAAlBiO,EAAChb,KAAKiN,qBAAY,IAAA+N,EAAAA,EAAK,KAAKrM,OAAO,GAAG3O,KAAKkO,kBAAoB5F,GAAAA,YAEzE,MAAMkN,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEXS,EAAWjb,KAAKqO,QAAQ9H,MAAMM,MAAM7G,KAAK0C,YAAYpD,WAAY,SAGjEwQ,QAAe9P,KAAKmN,iBAAiBpB,QACxC2N,WAAWlE,EAAS,IACpB4D,KAAK,CAAEpS,KAAMwO,EAAS,KACzBjM,GAAQC,IAAI,UAAWsG,SACF9P,KAAKmN,iBAAiBpB,QACxCmP,WACAN,KAAK,CAAE5T,KAAMwO,EAAS,GAAIvR,MAAOgX,EAAUV,WAAUC,aAGxDrH,aAAa0B,QAAQ,gBAAiB7U,KAAK0C,YAI7C,CAAE,MAAO0D,GAAO,IAAA+U,EAAAC,EAAAC,EAETrb,KAAK+M,MAAuB,QAAlBoO,EAACnb,KAAKiN,qBAAY,IAAAkO,EAAAA,EAAK,MACpCnb,KAAK4V,WAA4B,QAAlBwF,EAACpb,KAAKiN,qBAAY,IAAAmO,EAAAA,EAAK,KACxCpb,KAAK+M,MAAuB,QAAlBsO,EAACrb,KAAKiN,qBAAY,IAAAoO,EAAAA,EAAK,KAAK1M,OAAO,GAAG3O,KAAKkO,kBAAoB5F,GAAAA,QAGzEiB,GAAQnD,MAAM,0BAA2BA,EAC3C,CA1CA,MAFEkU,MAAM,8BA6CV,EAGAxU,2BAQE,GAPK9F,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIClM,KAAK0C,YAKV,IAAI,IAAA4Y,EAAAC,EAAAC,EACFjS,GAAQC,IAAI,4BAA6BxJ,KAAKiN,eACzCjN,KAAK+M,MAAuB,QAAlBuO,EAACtb,KAAKiN,qBAAY,IAAAqO,EAAAA,EAAK,MACpCtb,KAAK4V,WAA4B,QAAlB2F,EAACvb,KAAKiN,qBAAY,IAAAsO,EAAAA,EAAK,KACxCvb,KAAK+M,MAAuB,QAAlByO,EAACxb,KAAKiN,qBAAY,IAAAuO,EAAAA,EAAK,KAAK7M,OAAO,GAAG3O,KAAKkO,kBAAoB5F,GAAAA,YAEzE,MAAMkN,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEXS,EAAWjb,KAAKqO,QAAQ9H,MAAMM,MAAM7G,KAAK0C,YAAYpD,WAAY,SAGjEwQ,QAAe9P,KAAKmN,iBAAiBpB,QACxC2N,WAAWlE,EAAS,IACpB4D,KAAK,CAAEpS,KAAMwO,EAAS,WAGnBxV,KAAKyb,cACX,MAAMnC,EAAetZ,KAAKyZ,kBAC1BlQ,GAAQC,IAAI,UAAWsG,SACF9P,KAAKmN,iBAAiBpB,QACxC2P,oBAAoBpC,GACpBsB,KAAK,CAAE5T,KAAMwO,EAAS,GAAIvR,MAAOgX,EAAUV,WAAUC,aAGxDrH,aAAa0B,QAAQ,gBAAiB7U,KAAK0C,YAI7C,CAAE,MAAO0D,GAAO,IAAAuV,EAAAC,EAAAC,EAET7b,KAAK+M,MAAuB,QAAlB4O,EAAC3b,KAAKiN,qBAAY,IAAA0O,EAAAA,EAAK,MACpC3b,KAAK4V,WAA4B,QAAlBgG,EAAC5b,KAAKiN,qBAAY,IAAA2O,EAAAA,EAAK,KACxC5b,KAAK+M,MAAuB,QAAlB8O,EAAC7b,KAAKiN,qBAAY,IAAA4O,EAAAA,EAAK,KAAKlN,OAAO,GAAG3O,KAAKkO,kBAAoB5F,GAAAA,QAGzEiB,GAAQnD,MAAM,0BAA2BA,EAC3C,MA1CEkU,MAAM,8BA2CV,EAGAxU,wBAAwBuT,EAAUyC,GAQhC,GAPK9b,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAGJlM,KAAK0C,YAAcoZ,EACd9b,KAAK0C,YAAV,CAKG1C,KAAKiT,6BACAjT,KAAK2a,qBAEXpR,GAAQC,IAAI,kCAGd,IAAI,IAAAuS,EAAAC,EAAAC,EACF1S,GAAQC,IAAI,4BAA6BxJ,KAAKiN,eACzCjN,KAAK+M,MAAuB,QAAlBgP,EAAC/b,KAAKiN,qBAAY,IAAA8O,EAAAA,EAAK,MACpC/b,KAAK4V,WAA4B,QAAlBoG,EAAChc,KAAKiN,qBAAY,IAAA+O,EAAAA,EAAK,KACxChc,KAAK+M,MAAuB,QAAlBkP,EAACjc,KAAKiN,qBAAY,IAAAgP,EAAAA,EAAK,KAAKtN,OAAO,GAAG3O,KAAKkO,kBAAoB5F,GAAAA,YAEzE,MAAMkN,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEXS,EAAWjb,KAAKqO,QAAQ9H,MAAMM,MAAM7G,KAAK0C,YAAYpD,WAAY,SAGjEwQ,QAAe9P,KAAKmN,iBAAiBpB,QACxC2N,WAAWlE,EAAS,IACpB4D,KAAK,CAAEpS,KAAMwO,EAAS,KAGzBjM,GAAQC,IAAI,UAAWsG,SACF9P,KAAKmN,iBAAiBpB,QACxCmQ,kBAAkB7C,GAClBuB,KAAK,CAAE5T,KAAMwO,EAAS,GAAIvR,MAAOgX,EAAUV,WAAUC,aAGxDrH,aAAa0B,QAAQ,gBAAiB7U,KAAK0C,YAI7C,CAAE,MAAO0D,GAAO,IAAA+V,EAAAC,EAAAC,EAETrc,KAAK+M,MAAuB,QAAlBoP,EAACnc,KAAKiN,qBAAY,IAAAkP,EAAAA,EAAK,MACpCnc,KAAK4V,WAA4B,QAAlBwG,EAACpc,KAAKiN,qBAAY,IAAAmP,EAAAA,EAAK,KACxCpc,KAAK+M,MAAuB,QAAlBsP,EAACrc,KAAKiN,qBAAY,IAAAoP,EAAAA,EAAK,KAAK1N,OAAO,GAAG3O,KAAKkO,kBAAoB5F,GAAAA,QAGzEiB,GAAQnD,MAAM,0BAA2BA,EAC3C,CA5CA,MAFEkU,MAAM,8BA+CV,EAGAxU,iBACE,MAAMwW,EAAYtc,KAAKsO,UAQvB,GAPKtO,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIClM,KAAK0C,YAKV,IAAI,IAAA6Z,EAAAC,EAAAC,EACFlT,GAAQC,IAAI,kBAAmBxJ,KAAKiN,eAC/BjN,KAAK+M,MAAuB,QAAlBwP,EAACvc,KAAKiN,qBAAY,IAAAsP,EAAAA,EAAK,MACpCvc,KAAK4V,WAA4B,QAAlB4G,EAACxc,KAAKiN,qBAAY,IAAAuP,EAAAA,EAAK,KACxCxc,KAAK+M,MAAuB,QAAlB0P,EAACzc,KAAKiN,qBAAY,IAAAwP,EAAAA,EAAK,KAAK9N,OAAO3O,KAAKI,cAAcJ,KAAKkO,kBAAoB5F,GAAAA,QAEzFtI,KAAKkN,aAAeb,KACpB,MAAMqQ,EACJ,MAAOnD,EAAAA,GAAAA,QAAOvZ,KAAKgB,aAAehB,KAAKkN,cACzC3D,GAAQC,IAAI,aAAcxJ,KAAKgB,aAAehB,KAAKkN,cACnD,MAAMsI,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEXE,QAAe1a,KAAKmN,iBAAiBpB,QACxC4Q,OAAO7G,SAAS9V,KAAKiN,eAAgByP,GACrC9B,KAAK,CAAE5T,KAAMwO,EAAS,GAAI+E,WAAUC,aACvCjR,GAAQC,IAAI,mBAAoBkR,GAGhCvH,aAAa0B,QAAQ,eAAgB7U,KAAKgB,cAC1CmS,aAAa0B,QAAQ,mBAAoB7U,KAAKkN,aAIhD,CAAE,MAAO9G,GAAO,IAAAwW,EAAAC,EAAAC,EAET9c,KAAK+M,MAAuB,QAAlB6P,EAAC5c,KAAKiN,qBAAY,IAAA2P,EAAAA,EAAK,MACpC5c,KAAK4V,WAA4B,QAAlBiH,EAAC7c,KAAKiN,qBAAY,IAAA4P,EAAAA,EAAK,KACxC7c,KAAK+M,MAAuB,QAAlB+P,EAAC9c,KAAKiN,qBAAY,IAAA6P,EAAAA,EAAK,KAAKnO,OAAO3O,KAAKkO,kBAAoBoO,EAGtEtc,KAAKgB,aAAe,GACpBuI,GAAQnD,MAAM,0BAA2BA,EAC3C,MAtCEkU,MAAM,8BAuCV,EAEAxU,mBACoB9F,KAAKsO,UAClBtO,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIJ,IACE3C,GAAQC,IAAI,qBAAsBxJ,KAAKiN,eAKvC,MAAMuI,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEXE,QAAe1a,KAAKmN,iBAAiBpB,QACxCgR,OAAOjH,SAAS9V,KAAKiN,gBACrB2N,KAAK,CAAE5T,KAAMwO,EAAS,GAAI+E,WAAUC,aACvCjR,GAAQC,IAAI,kBAAmBkR,EAIjC,CAAE,MAAOtU,GAQPmD,GAAQnD,MAAM,yBAA0BA,EAC1C,CACF,EAEAN,kBACoB9F,KAAKsO,UAClBtO,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIJ,IACE3C,GAAQC,IAAI,kBAAmBxJ,KAAKiN,eAKpC,MAAMuI,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEXE,QAAe1a,KAAKmN,iBAAiBpB,QACxCiR,MAAMlH,SAAS9V,KAAKiN,gBACpB2N,KAAK,CAAE5T,KAAMwO,EAAS,GAAI+E,WAAUC,aACvCjR,GAAQC,IAAI,aAAckR,EAI5B,CAAE,MAAOtU,GAQPmD,GAAQnD,MAAM,yBAA0BA,EAC1C,CACF,EAEAN,mBACoB9F,KAAKsO,UAClBtO,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIJ,IAEOlM,KAAK+M,MAAM/M,KAAKiN,gBACnBjN,KAAK4V,WAAW5V,KAAKiN,eACvBjN,KAAK+M,MAAM/M,KAAKiN,eAAe0B,OAAO3O,KAAKkO,kBAAoB5F,GAAAA,UAE/D,MAAMkN,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClC2W,EAAa,GAAEjd,KAAKgB,eAAehB,KAAKkN,eACxCqN,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,UACIxa,KAAKmN,iBAAiBpB,QACxCmR,OAAOld,KAAKiN,cAAegQ,GAC3BrC,KAAK,CAAE5T,KAAMwO,EAAS,GAAI+E,WAAUC,aAOvCjR,GAAQC,IAAI,qBAAsBxJ,KAAK+M,MAAM/M,KAAKiN,eAAe0B,OAAO3O,KAAKkO,kBAC/E,CAAE,MAAO9H,GAEFpG,KAAK+M,MAAM/M,KAAKiN,gBACnBjN,KAAK4V,WAAW5V,KAAKiN,eACvBjN,KAAK+M,MAAM/M,KAAKiN,eAAe0B,OAAO3O,KAAKkO,kBAAoB5F,GAAAA,KAC/DiB,GAAQnD,MAAM,wBAAyBA,EACzC,CACF,EACAN,uBACO9F,KAAKmN,mBACRnN,KAAKmN,iBAAmB,IAAInN,KAAKqO,QAAQnI,IAAIuP,SAC3CrJ,GACAF,KAIJ,IACE,MAAMsJ,QAAiBxV,KAAKqO,QAAQnI,IAAII,cAClCiU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IACXE,QAAe1a,KAAKmN,iBAAiBpB,QACxCoR,WAAWnd,KAAKiN,eAChBmM,KAAK,CAAEpS,KAAMwO,EAAS,GAAI+E,WAAUC,aACvCjR,GAAQC,IAAI,gBAAiBkR,EAE/B,CAAE,MAAOtU,GACPmD,GAAQnD,MAAM,8BAA+BA,EAC/C,CACF,EAEAN,kCAAkCkT,GAChC,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,mBAAoB,CAC9DC,cAEFhZ,KAAKqN,uBAAyByL,EAC9BvP,GAAQC,IAAI,0BAA2BxJ,KAAKqN,uBAAuB+P,KAAIC,GAAKA,EAAEvG,eAChF,EAEAhR,+BAA+BkT,GAC7B,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,gBAAiB,CAC3DC,cAEFhZ,KAAKsN,oBAAsBwL,EAC3BvP,GAAQC,IAAI,uBAAwBxJ,KAAKsN,oBAAoB8P,KAAIC,GAAKA,EAAEvG,eAC1E,EAEAhR,gCAAgCkT,GAC9B,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,iBAAkB,CAC5DC,cAEFhZ,KAAKuN,qBAAuBuL,EAC5BvP,GAAQC,IAAI,wBAAyBxJ,KAAKuN,qBAAqB6P,KAAIC,GAAKA,EAAEvG,eAC5E,EAEAhR,sCAAsCkT,GACpC,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,gBAAiB,CAC3DC,cAEFhZ,KAAKwN,oBAAsBsL,EAC3BvP,GAAQC,IAAI,uBAAwBxJ,KAAKwN,oBAAoB4P,KAAIC,GAAKA,EAAEvG,eAC1E,EAEAhR,8BAA8BkT,GAC5B,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,eAAgB,CAC1DC,cAEFhZ,KAAKyN,mBAAqBqL,EAC1BvP,GAAQC,IAAI,sBAAuBxJ,KAAKyN,mBAAmB2P,KAAIC,GAAKA,EAAEvG,eACxE,EAEAhR,0BAA0BkT,GACxB,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,WAAY,CACtDC,cAEFhZ,KAAK0N,eAAiBoL,EACtBvP,GAAQC,IAAI,kBAAmBxJ,KAAK0N,eAAe0P,KAAIC,GAAKA,EAAEvG,eAChE,EAEAhR,6BAA6BkT,GAC3B,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,cAAe,CACzDC,cAEFhZ,KAAK2N,kBAAoBmL,EACzBvP,GAAQC,IAAI,qBAAsBxJ,KAAK2N,kBAAkByP,KAAIC,GAAKA,EAAEvG,eACtE,EAEAhR,iCAAiCkT,GAC/B,MAAMpB,QAAiB5X,KAAK6X,cACtBiB,QAAelB,EAASmB,cAAc,kBAAmB,CAC7DC,cAEFhZ,KAAK4N,sBAAwBkL,EAC7BvP,GAAQC,IAAI,yBAA0BxJ,KAAK4N,sBAAsBwP,KAAIC,GAAKA,EAAEvG,eAC9E,EAIAhR,sBAEE,MAAM+Q,QAAoB7W,KAAK+T,aAI/B,IAAK,MAAM5P,KAASnE,KAAKqN,uBACvBrN,KAAKiY,oBAAoB9T,EAAO0S,GAKlC,IAAK,MAAM1S,KAASnE,KAAKsN,oBACvBtN,KAAKmX,mBAAmBhT,GAK1B,IAAK,MAAMA,KAASnE,KAAK4N,sBACvB5N,KAAK2X,2BAA2BxT,GAKlC,IAAK,MAAMA,KAASnE,KAAKuN,qBACvBvN,KAAKoX,0BAA0BjT,GAKjC,IAAK,MAAMA,KAASnE,KAAKwN,oBACvBxN,KAAKqX,oBAAoBlT,GAK3B,IAAK,MAAMA,KAASnE,KAAKyN,mBACvBzN,KAAKsX,oBAAoBnT,GAK3B,IAAK,MAAMA,KAASnE,KAAK0N,eACvB1N,KAAKuX,oBAAoBpT,GAK3B,IAAK,MAAMA,KAASnE,KAAK2N,kBACvB3N,KAAK0X,mBAAmBvT,EAI5B,EAGA2B,6BACE,MAAMwX,EAAY,IAAIC,gBAAgBzD,OAAOC,SAASyD,QAChDtK,EAAgBoK,EAAUG,IAAI,OAChCvK,GAGFC,aAAa0B,QAAQ,gBAAiB3B,GAKxClT,KAAKiO,sBAAwBjO,KAAKgO,kBAAkBjC,QAAQ2R,uBAAuB1d,KAAKC,eAAemZ,OAEvG7P,GAAQC,IAAI,oBAAqBxJ,KAAKiO,gBAExC,EAEAnI,6BACE,MAAMwX,EAAY,IAAIC,gBAAgBzD,OAAOC,SAASyD,QAChDG,EAAkBL,EAAUG,IAAI,QAChC3B,EAAYwB,EAAUG,IAAI,OAE7BE,IAAoB3d,KAAKd,WAAac,KAAK4d,eAAiB9B,SACvD9b,KAAKkc,kBAAkByB,EAAiB7B,EAGlD,EAEAhW,uBACE,MAAMkT,EAAY,QAEZhZ,KAAK6d,4BAA4B7E,SACjChZ,KAAK8d,yBAAyB9E,SAC9BhZ,KAAK+d,0BAA0B/E,SAC/BhZ,KAAKge,gCAAgChF,SACrChZ,KAAKie,wBAAwBjF,SAC7BhZ,KAAKke,oBAAoBlF,SACzBhZ,KAAKme,uBAAuBnF,SAC5BhZ,KAAKoe,2BAA2BpF,GAGtChZ,KAAKqe,eACP,IUlqDE,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,M,2CCREhgB,EAAAA,EAAAA,IAgCM,qBAhCD,qBAIDV,EAAAA,EAAAA,GAiBM,aAhBJA,EAAAA,EAAAA,GAAsD,WAAjD,0BAAsByB,EAAAA,EAAAA,IAAEjC,EAAAmhB,mBAAiB,IAE9C3gB,EAAAA,EAAAA,GAAsD,WAAjD,yBAAqByB,EAAAA,EAAAA,IAAEjC,EAAAohB,oBAAkB,IAC9C5gB,EAAAA,EAAAA,GAAkG,WAA7F,kCAA8ByB,EAAAA,EAAAA,IAAGjC,EAAAohB,mBAAqBphB,EAAAqhB,wBAAuB,KAAS,IAAC,IAC5F7gB,EAAAA,EAAAA,GAAsE,WAAjE,qCAAiCyB,EAAAA,EAAAA,IAAEjC,EAAAshB,wBAAsB,IAC9D9gB,EAAAA,EAAAA,GAAwD,WAAnD,2BAAuByB,EAAAA,EAAAA,IAAEjC,EAAAuhB,oBAAkB,IAChD/gB,EAAAA,EAAAA,GAAoE,WAA/D,iCAA6ByB,EAAAA,EAAAA,IAAErC,EAAA4hB,0BAAwB,IAC5DhhB,EAAAA,EAAAA,GAAmE,WAA9D,iCAA6ByB,EAAAA,EAAAA,IAAEjC,EAAAqhB,yBAAuB,IAE3D7gB,EAAAA,EAAAA,GAIM,qBAJD,iCACH,aAAAU,EAAAA,EAAAA,IAEMC,EAAAA,GAAA,MAAAgG,EAAAA,EAAAA,IAFiBnH,EAAAyhB,oBAAXvY,K,WAAZhI,EAAAA,EAAAA,IAEM,OAFsCP,IAAKuI,IAAOjH,EAAAA,EAAAA,IACpDiH,GAAO,M,SAGb1I,EAAAA,EAAAA,GAAqE,WAAhE,kCAA8ByB,EAAAA,EAAAA,IAAEjC,EAAA0hB,0BAAwB,IAC7DlhB,EAAAA,EAAAA,GAAkD,WAA7C,0BAAsByB,EAAAA,EAAAA,IAAEjC,EAAA2hB,eAAa,MAG5CnhB,EAAAA,EAAAA,GAA8C,UAArCc,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA2hB,OAAA3hB,EAAA2hB,SAAArgB,KAAO,mBACvBf,EAAAA,EAAAA,GAAkD,UAAzCc,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA4hB,SAAA5hB,EAAA4hB,WAAAtgB,KAAS,qBACzBf,EAAAA,EAAAA,GAAqD,UAA5Cc,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA6hB,OAAA7hB,EAAA6hB,SAAAvgB,KAAO,0BACvBf,EAAAA,EAAAA,GAAuE,UAA9Dc,QAAKzB,EAAA,KAAAA,EAAA,OAAA0B,IAAEtB,EAAA8hB,uBAAA9hB,EAAA8hB,yBAAAxgB,KAAuB,4B,iBAsE3C,UACEwM,WAAY,CACZ,EACAhC,MAAO,CACLpK,SAAU,CACRsM,KAAMwB,OACNvD,QAAS,OAGbJ,OACE,MAAO,CACLkW,gBAAiB,KACjBC,mBAAoB,KACpBpR,kBAAmB,KAEnB/N,cAAe,KAEfqe,kBAAmB,EAEnBC,mBAAoB,EACpBC,wBAAyB,EAEzBC,uBAAwB,EACxBI,yBAA0B,EAE1BC,cAAe,KACfF,mBAAoB,GAEpBF,mBAAoB,EAGpBW,oBAAqB,KAGzB,EACAvT,SAAU,CACNoC,mBAAmB,IAAAC,EAAE,OAAyB,QAAzBA,EAAOnO,KAAKC,qBAAa,IAAAkO,OAAA,EAAlBA,EAAoBC,aAAa,EAC7DC,UAAW,OAAO,IAAIrI,KAAJ,CAAShG,KAAKlB,SAAU,GAE9CwgB,UACE/V,GAAQC,IAAI,WAAYxJ,KAAKlB,UAC7ByK,GAAQC,IAAI,gBAAiB2C,IAC7BnM,KAAKuf,MAEP,EACArL,MAAM,CACN,EACAnI,QAAS,CACLjG,mBACU9F,KAAKwf,mBACLxf,KAAKyf,eACXzf,KAAK0f,uBACL1f,KAAK2f,wBACL3f,KAAK4f,4BACL5f,KAAK6f,4BACL7f,KAAK8f,8BACL9f,KAAK+f,uBAOT,EACAja,mBACI,MAAM0P,QAAiBxV,KAAKqO,QAAQnI,IAAII,cACxCiD,GAAQC,IAAI,WAAYgM,GACxBxV,KAAKC,cAAgBuV,EAAS,EAClC,EACA1P,qBAIE9F,KAAKmf,gBAAkB,IAAInf,KAAKqO,QAAQnI,IAAIuP,SACxCtJ,GAAAA,aAAAA,QACAA,GAAAA,kBAAAA,SAIJnM,KAAKof,mBAAqB,IAAIpf,KAAKqO,QAAQnI,IAAIuP,SAC3CtJ,GAAAA,aAAAA,WACAA,GAAAA,kBAAAA,YAIJnM,KAAKgO,kBAAoB,IAAIhO,KAAKqO,QAAQnI,IAAIuP,SAC1CtJ,GAAAA,aAAAA,UACAA,GAAAA,kBAAAA,UAGN,EAEArG,6BACE,IAAI9F,KAAKof,mBAAoB,OAAO,EAEpC,MAAMrgB,QAAgBiB,KAAKof,mBAAmBrT,QAAQiU,UAAUhgB,KAAKC,eAAemZ,OACpFpZ,KAAKse,kBAAoBvf,EAAU,IAAM,GAGzC4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKof,mBAAmBrT,QAAQiU,UAAUhgB,KAAKC,eAAemZ,OACpFpZ,KAAKse,kBAAoBvf,EAAU,IAAM,EAAE,GAC1C,IACL,EAEA+G,8BACE,IAAI9F,KAAKmf,gBAAiB,OAAO,EAEjC,MAAMpgB,QAAgBiB,KAAKmf,gBAAgBpT,QAAQkU,aAAajgB,KAAKC,eAAemZ,OACpFpZ,KAAKue,mBAAqBxf,EAAU,IAAM,GAG1C4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKmf,gBAAgBpT,QAAQkU,aAAajgB,KAAKC,eAAemZ,OACpFpZ,KAAKue,mBAAqBxf,EAAU,IAAM,EAAE,GAC3C,IACL,EAEA+G,kCACE,IAAI9F,KAAKmf,gBAAiB,OAAO,EAEjC,MAAMpgB,QAAgBiB,KAAKmf,gBAAgBpT,QAAQmU,kBAAkB9G,OACrEpZ,KAAKwe,wBAA0Bzf,EAAU,IAAM,GAG/C4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKmf,gBAAgBpT,QAAQmU,kBAAkB9G,OACrEpZ,KAAKwe,wBAA0Bzf,EAAU,IAAM,EAAE,GAChD,IACL,EAEA+G,kCACE,IAAI9F,KAAKmf,gBAAiB,OAAO,EAEjC,MAAMpgB,QAAgBiB,KAAKmf,gBAAgBpT,QAAQoU,qBAAqBngB,KAAKC,eAAemZ,OAC5FpZ,KAAKye,uBAAyB1f,EAAU,IAAM,GAG9C4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKmf,gBAAgBpT,QAAQoU,qBAAqBngB,KAAKC,eAAemZ,OAC5FpZ,KAAKye,uBAAyB1f,EAAU,IAAM,EAAE,GAC/C,IACL,EACA+G,oCACE,IAAI9F,KAAKgO,kBAAmB,OAAO,EAEnC,MAAMjP,QAAgBiB,KAAKgO,kBAAkBjC,QAAQoU,qBAAqBngB,KAAKC,eAAemZ,OAC9FpZ,KAAK6e,yBAA2B9f,EAAU,IAAM,GAGhD4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKgO,kBAAkBjC,QAAQoU,qBAAqBngB,KAAKC,eAAemZ,OAC9FpZ,KAAK6e,yBAA2B9f,EAAU,IAAM,EAAE,GACjD,IACL,EACA+G,8BACE,IAAI9F,KAAKgO,kBAAmB,OAAO,EAEnC,MAAMjP,QAAgBiB,KAAKgO,kBAAkBjC,QAAQqU,wBAAwBpgB,KAAKC,eAAemZ,OACjGpZ,KAAK4e,mBAAqB7f,EAG1B4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKgO,kBAAkBjC,QAAQqU,wBAAwBpgB,KAAKC,eAAemZ,OACjGpZ,KAAK4e,mBAAqB7f,CAAO,GAChC,IACL,EAEA+G,8BAEE,MAAM/G,QAAgBiB,KAAKqO,QAAQnI,IAAIO,WAAW0F,GAAAA,kBAAAA,MAClDnM,KAAK0e,mBAAqB3f,EAAU,IAAM,GAG1C4Z,aAAY7S,UACV,MAAM/G,QAAgBiB,KAAKqO,QAAQnI,IAAIO,WAAW0F,GAAAA,kBAAAA,MAClDnM,KAAK0e,mBAAqB3f,EAAU,IAAM,EAAE,GAC3C,IACL,EAsBA+G,cAEE,IACE,MAAMyU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IASX6F,SANYrgB,KAAKof,mBAAmBrT,QAAQuU,QAChDnU,GAAAA,kBAAAA,QACAnM,KAAKqO,QAAQ9H,MAAMM,MAAM,KAAM,UAC/B+T,KAAK,CAAE5T,KAAMhH,KAAKC,cAAesa,WAAUC,mBAG5Bxa,KAAKmf,gBAAgBpT,QAAQgT,MAC5C/e,KAAKqO,QAAQ9H,MAAMM,MAAM,KAAM,UAC/B+T,KAAK,CAAE5T,KAAMhH,KAAKC,cAAesa,WAAUC,cAO7C,aAJMxa,KAAKqO,QAAQnI,IAAIqa,sBAAsBF,EAAGG,iBAGhDjX,GAAQC,IAAI,SAAU6W,GACfA,CACT,CAAE,MAAOja,GAYP,OAVAmD,GAAQnD,MAAM,0BAA2BA,EAAMqa,SAG3Cra,EAAMsa,QACRnX,GAAQnD,MAAM,gBAAiBA,EAAMsa,QAIvCnX,GAAQnD,MAAM,qBAAsBA,EAAMua,OAEnCva,CACT,CACF,EAGAN,gBAEE,IACE,MAAMyU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEX6F,QAAWrgB,KAAKmf,gBAAgBpT,QAAQiT,QAC5Chf,KAAKqO,QAAQ9H,MAAMM,MAAM,KAAM,UAC/B+T,KAAK,CAAE5T,KAAMhH,KAAKC,cAAesa,WAAUC,aAO7C,aAJMxa,KAAKqO,QAAQnI,IAAIqa,sBAAsBF,EAAGG,iBAGhDjX,GAAQC,IAAI,WAAY6W,GACjBA,CACT,CAAE,MAAOja,GAEP,OADAmD,GAAQC,IAAI,kBAAmBpD,GACxBA,CACT,CACF,EAEAN,cAEE,IACE,MAAMyU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEX6F,QAAWrgB,KAAKmf,gBAAgBpT,QAAQ6U,eAAehG,KAAK,CAAE5T,KAAMhH,KAAKC,cAAesa,WAAUC,aAOxG,aAJMxa,KAAKqO,QAAQnI,IAAIqa,sBAAsBF,EAAGG,iBAGhDjX,GAAQC,IAAI,UAAW6W,GAChBA,CACT,CAAE,MAAOja,GAEP,OADAmD,GAAQC,IAAI,iBAAkBpD,GACvBA,CACT,CACF,EAEAN,8BAEE,IACE,MAAMyU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEX6F,QAAWrgB,KAAKgO,kBAAkBjC,QAAQ6U,eAAehG,KAAK,CAAE5T,KAAMhH,KAAKC,cAAesa,WAAUC,aAO1G,aAJMxa,KAAKqO,QAAQnI,IAAIqa,sBAAsBF,EAAGG,iBAGhDjX,GAAQC,IAAI,UAAW6W,GAChBA,CACT,CAAE,MAAOja,GAEP,OADAmD,GAAQC,IAAI,iBAAkBpD,GACvBA,CACT,CACF,EAEAN,2BAUE,IACE,MAAMyU,EAAWva,KAAKqO,QAAQ9H,MAAMM,MAAM,IAAK,QACzC2T,EAAW,IAEX6F,QAAWrgB,KAAKgO,kBAAkBjC,QAAQ4O,mBAC9C,8CACAC,KAAK,CAAE5T,KAAMhH,KAAKC,cAAesa,WAAUC,aAO7C,OADAjR,GAAQC,IAAI,yBAA0B6W,GAC/BA,CACT,CAAE,MAAOja,GAEP,MADAmD,GAAQC,IAAI,mCAAoCpD,GAC1CA,CACR,CACF,EAOAN,uBACI,aAAa9F,KAAKqO,QAAQnI,IAAIwP,gBAClC,IC/aF,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,M,6GCeA,MAAMmL,GAAmB,MACnBC,GAAmB,QACnBC,GAAqB,QACrBC,GAA6B,SAE7BC,GAAW,CACf,CAACJ,IAAmB,2BACpB,CAACC,IAAmB,iCACpB,CAACC,IAAqB,yBACtB,CAACC,IAA6B,yBAI1BE,GAAmBF,GAEzB,IAEEG,KAAM,OACNjY,MAAO,CACLzL,IAAKmP,QAEP1B,WAAY,CACVkW,KAAI,GACJC,QAAOA,IAETC,QACE,MAAMziB,GAAU0iB,EAAAA,GAAAA,KAAa,GACvBhjB,GAAWgjB,EAAAA,GAAAA,KAAa,GACxBC,GAAUD,EAAAA,GAAAA,KAAa,GACvBE,GAAoBF,EAAAA,GAAAA,IAAY,IAChCG,GAAaH,EAAAA,GAAAA,KAAa,GAG1BthB,IAFiBshB,EAAAA,GAAAA,IAAS,OAEVA,EAAAA,GAAAA,IAAY,KAC5BxiB,GAAUwiB,EAAAA,GAAAA,IAAY,KAEtBziB,GAAWyiB,EAAAA,GAAAA,KAAoC,GAC/CI,EACJ,0FAIIC,EAAW,IAAIC,GAAAA,GAAS,CAC5BF,WACAG,YAAa,CACXC,eAAgBC,GAAAA,GAAAA,OAChB/b,QAASib,GACTe,UAAWhB,GAASC,KAEtBgB,SAAU,CACRC,gBAAiB,MAEnBC,gBAAiB,YAInB7Y,GAAQC,IAAI,oBAAqBoY,EAAS9iB,UAO1C,MAAMujB,EAAc,IAAIC,GAAAA,EAA2B,CACjDC,gBAAiB,CAAC,EAClBC,kBAAmB,CACjBC,WAAY,CACVC,MAAO,CAAEC,QAAQ,EAAMC,OAAQ,CAAEC,QAAS,YAC1CC,SAAU,iDACVC,UAAW,kDAEbC,kBAAkB,EAClBC,eAAe,KAQbC,EAAyB,IAAIC,GAAAA,uBAAuB,CACxDC,gBAAiB,CACfC,OAAQ,oCAEV1B,aAGFC,EAAS0B,iBAAiBJ,GAI1B,MAAMK,EAAkB,IAAIC,GAAAA,gBAAgB,CAC1C7B,WACA8B,YAAa,KACbrB,gBAAiB,UACjBN,YAAa,CACXC,eAAgBC,GAAAA,GAAAA,OAChB/b,QAASib,GACTe,UAAWhB,GAASC,OAIxBqC,EAAgBG,mBAAmB,CACjCD,YAAa,MACb3B,YAAa,CACXC,eAAgBC,GAAAA,GAAAA,OAChB/b,QAASib,GACTe,UAAWhB,GAASC,IACpByC,cAAe,iCAGjBvB,gBAAiB,YAInBR,EAAS0B,iBAAiBC,GAE1B,MAAMK,EAAqB,IAAIC,GAAAA,mBAAmB,CAChDlC,aAIFC,EAAS0B,iBAAiBM,IAG1BE,EAAAA,EAAAA,KAAUhe,UACR,IACE0b,EAAQvd,OAAQ,EAChB1F,EAAS0F,OAAQ,QACX2d,EAASmC,YACf,MAAMC,QAAsBpC,EAASqC,oBAC/BrC,EAASsC,UAAU7B,GACrBT,EAAS9iB,WACXA,EAASmF,MAAQ2d,EAAS9iB,SAC1ByK,GAAQC,IAAI,WAAYwa,GAExBzlB,EAAS0F,OAAQ,QACXoe,EAAY8B,WAIpB5a,GAAQC,IAAI,WAAY1K,EAASmF,M,CACjC,MAAOmC,GACPge,EAAU,QAAShe,E,CACnB,QACAob,EAAQvd,OAAQ,C,KAGpB,MAAMogB,EAAeve,UACnB,IAAKhH,EAASmF,QAAUhE,EAAcgE,MACpC,OAGF,MAAMqgB,EAAM,IAAIC,GAAIzlB,EAASmF,OACvBugB,QAAmBF,EAAI7d,aAE7B8C,GAAQC,IAAI,aAAcgb,GAE1BzlB,EAAQkF,MAAQugB,CAAU,EAGtBC,EAAc3e,gBACZue,IACNlL,WAAWsL,EAAa,IAAK,GAKnCvQ,EAAAA,EAAAA,IACEpV,GACA,CAACsV,EAAUC,KACLD,IAEFqQ,IACAne,I,GAGJ,CAAEoe,WAAW,IAGX,MAAM/lB,EAAQmH,UACZ,IAAK8b,EAEH,YADAwC,EAAU,gCAGZtlB,EAASmF,YAAc2d,EAASuC,UAChC5a,GAAQC,IAAI,WAAY1K,SACI8iB,EAASqC,cAGrC1lB,EAAS0F,OAAQ,EAEjBmgB,EAAU,0BAA0B,EAGhCtgB,EAASgC,UAEb,GADAyD,GAAQC,IAAI,cAAe6Y,IACtBT,EAEH,YADAwC,EAAU,gCAWZ,MAAMJ,QAAsBpC,EAASqC,cAE/BU,EAAU,IAAIC,KAAJ,CAAY,aAAc,CAExCC,cAAe5kB,EAAcgE,MAC7B6gB,SAAU,CACRC,UAAWf,EAAS7C,MAAQ,GAC5B6D,MAAOhB,EAASgB,OAAS,IAM3BC,QAAS,WACTC,oBAAqB,uCAGzBP,EAAQpF,MAAM,EAIR4F,EAAmBrf,UACvB,IAAK8b,EAEH,YADAwC,EAAU,gCAGZ,MAAMgB,QAAgBxD,EAASuD,mBAC/Bf,EAAUgB,EAAQ,EAGdnB,EAAcne,UAClB,IAAK8b,EAEH,YADAwC,EAAU,gCAGZ,MAAMiB,QAAazD,EAASqC,cAC5BG,EAAUiB,EAAK,EAGXC,EAASxf,UACR8b,SAICA,EAAS0D,SACfxmB,EAASmF,MAAQ,KACjB1F,EAAS0F,OAAQ,GALfmgB,EAAU,+BAKU,EAGlBje,EAAaL,UACjB,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAGZ,MAAME,EAAM,IAAIC,GAAIzlB,EAASmF,OACvBgC,QAAgBqe,EAAIne,aAC1Bie,EAAUne,EAAQ,EAGdsf,EAAWzf,UACf,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAGZ,MAAMoB,EAAW,CACfvf,QAAS,MACTwf,YAAa,SACb1D,eAAgBC,GAAAA,GAAAA,OAChB0D,WAAY,SACZC,OAAQ,MACRC,SAAU,GACV3D,UAAW,kCACX0B,cAAe,qCAEH,OAAR/B,QAAQ,IAARA,OAAQ,EAARA,EAAU2D,SAASC,IACzBpB,EAAU,kBAAkB,EAGxByB,EAAc/f,UAClB,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAMMpC,GAAAA,GAAAA,aAOJ,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUiE,YAAY,CAAE5f,QAAS,SACvCme,EAAU,iBAAiB,EAIvB9d,EAAcR,UAClB,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAGZ,MAAME,EAAM,IAAIC,GAAIzlB,EAASmF,OACvBoC,QAAgBie,EAAIhe,cAC1BrG,EAAcgE,MAAQoC,EAAQ,GAC9B+d,EAAU/d,EAAQ,EAGdI,EAAaX,UACjB,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAGZ,MAAME,EAAM,IAAIC,GAAIzlB,EAASmF,OACvBlF,QAAgBulB,EAAI7d,aAC1B2d,EAAUrlB,EAAQ,EAGdgI,EAAkBjB,UACtB,IAAKhH,EAEH,YADAslB,EAAU,gCAGZ,MAAME,EAAM,IAAIC,GAAIzlB,EAASmF,OACvB6C,QAAgBwd,EAAIvd,kBAC1Bqd,EAAUtd,EAAQ,EAGdgf,EAAchgB,UAClB,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAGZ,MAAME,EAAM,IAAIC,GAAIzlB,EAASmF,OACvBoD,QAAsBid,EAAIwB,cAChC1B,EAAU/c,EAAc,EAGpB0e,EAAgBjgB,UACpB,IAAKhH,EAASmF,MAEZ,YADAmgB,EAAU,gCAGZ,MAAME,EAAM,IAAIC,GAAIzlB,EAASmF,OACvBuD,QAAmB8c,EAAIyB,gBAC7B3B,EAAU5c,EAAW,EAGvB,SAAS4c,KAAa1lB,GACpB,MAAMsnB,EAAKC,SAASC,cAAc,cAC9BF,IACFA,EAAGG,UAAYlR,KAAKC,UAAUxW,GAAQ,CAAC,EAAG,KAAM,GAEpD,CAUA,MAAO,CACLG,UACAN,WACAijB,UACAC,oBACAC,aACA5iB,WACAC,UACAkB,gBACAoO,QACAuT,EACAjjB,QACAmF,SACAqhB,mBACAG,SACArB,cACA9d,aACAof,WACAM,cACAvf,cACAG,aACAM,kBACA+e,cACAC,gBAEJ,GC/ZI,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,MCHA,IAAeK,EAAAA,EAAAA,IAAgB,CAC9BjF,KAAM,MACNjW,WAAY,CACXmb,KAAIA,MCFA,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASvpB,KAEpE,OCJAwpB,EAAAA,EAAAA,IAAUC,IAAKC,MAAM,O,4NCFjBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CACjDK,GAAIL,EACJM,QAAQ,EACRH,QAAS,CAAC,GAUX,OANAI,EAAoBP,GAAUvN,KAAK2N,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG3EK,EAAOE,QAAS,EAGTF,EAAOD,OACf,CAGAJ,EAAoBS,EAAID,E,MC5BxBR,EAAoBU,KAAO,CAAC,C,WCA5B,IAAIC,EAAW,GACfX,EAAoBY,EAAI,CAAC5M,EAAQ6M,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIP,EAASnR,OAAQ0R,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYJ,EAASO,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAASrR,OAAQ4R,MACpB,EAAXL,GAAsBC,GAAgBD,IAAahY,OAAOsY,KAAKrB,EAAoBY,GAAGU,OAAOlqB,GAAS4oB,EAAoBY,EAAExpB,GAAKypB,EAASO,MAC9IP,EAASU,OAAOH,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbR,EAASY,OAAOL,IAAK,GACrB,IAAIM,EAAIV,SACEX,IAANqB,IAAiBxN,EAASwN,EAC/B,CACD,CACA,OAAOxN,CAnBP,CAJC+M,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIP,EAASnR,OAAQ0R,EAAI,GAAKP,EAASO,EAAI,GAAG,GAAKH,EAAUG,IAAKP,EAASO,GAAKP,EAASO,EAAI,GACrGP,EAASO,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,C,WCzBdf,EAAoByB,EAAKpB,IACxB,IAAIqB,EAASrB,GAAUA,EAAOsB,WAC7B,IAAOtB,EAAO,WACd,IAAM,EAEP,OADAL,EAAoB4B,EAAEF,EAAQ,CAAExY,EAAGwY,IAC5BA,CAAM,C,WCLd1B,EAAoB4B,EAAI,CAACxB,EAASyB,KACjC,IAAI,IAAIzqB,KAAOyqB,EACX7B,EAAoB8B,EAAED,EAAYzqB,KAAS4oB,EAAoB8B,EAAE1B,EAAShpB,IAC5E2R,OAAOgZ,eAAe3B,EAAShpB,EAAK,CAAE4qB,YAAY,EAAMjL,IAAK8K,EAAWzqB,IAE1E,C,WCND4oB,EAAoBiC,EAAI,CAAC,EAGzBjC,EAAoBrJ,EAAKuL,GACjBC,QAAQC,IAAIrZ,OAAOsY,KAAKrB,EAAoBiC,GAAGI,QAAO,CAACC,EAAUlrB,KACvE4oB,EAAoBiC,EAAE7qB,GAAK8qB,EAASI,GAC7BA,IACL,I,WCNJtC,EAAoBuC,EAAKL,GAEjB,MAAQA,EAAU,IAAM,CAAC,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,YAAYA,GAAW,K,WCFzPlC,EAAoBwC,SAAYN,IAEf,C,WCHjBlC,EAAoByC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOppB,MAAQ,IAAIqpB,SAAS,cAAb,EAChB,CAAE,MAAOhM,GACR,GAAsB,kBAAXvD,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,WCAxB4M,EAAoB8B,EAAI,CAACc,EAAKC,IAAU9Z,OAAO+Z,UAAUC,eAAerQ,KAAKkQ,EAAKC,E,WCAlF,IAAIG,EAAa,CAAC,EACdC,EAAoB,UAExBjD,EAAoBkD,EAAI,CAAChQ,EAAKiQ,EAAM/rB,EAAK8qB,KACxC,GAAGc,EAAW9P,GAAQ8P,EAAW9P,GAAKkQ,KAAKD,OAA3C,CACA,IAAIE,EAAQC,EACZ,QAAWnD,IAAR/oB,EAEF,IADA,IAAImsB,EAAUhE,SAASiE,qBAAqB,UACpCtC,EAAI,EAAGA,EAAIqC,EAAQ/T,OAAQ0R,IAAK,CACvC,IAAIuC,EAAIF,EAAQrC,GAChB,GAAGuC,EAAEC,aAAa,QAAUxQ,GAAOuQ,EAAEC,aAAa,iBAAmBT,EAAoB7rB,EAAK,CAAEisB,EAASI,EAAG,KAAO,CACpH,CAEGJ,IACHC,GAAa,EACbD,EAAS9D,SAASoE,cAAc,UAEhCN,EAAOO,QAAU,QACjBP,EAAOQ,QAAU,IACb7D,EAAoB8D,IACvBT,EAAOU,aAAa,QAAS/D,EAAoB8D,IAElDT,EAAOU,aAAa,eAAgBd,EAAoB7rB,GACxDisB,EAAOW,IAAM9Q,GAEd8P,EAAW9P,GAAO,CAACiQ,GACnB,IAAIc,EAAmB,CAACC,EAAMzmB,KAE7B4lB,EAAOc,QAAUd,EAAOe,OAAS,KACjCC,aAAaR,GACb,IAAIS,EAAUtB,EAAW9P,GAIzB,UAHO8P,EAAW9P,GAClBmQ,EAAOkB,YAAclB,EAAOkB,WAAWC,YAAYnB,GACnDiB,GAAWA,EAAQ9R,SAASsO,GAAQA,EAAGrjB,KACpCymB,EAAM,OAAOA,EAAKzmB,EAAM,EAExBomB,EAAUpR,WAAWwR,EAAiBQ,KAAK,UAAMtE,EAAW,CAAEzb,KAAM,UAAWhH,OAAQ2lB,IAAW,MACtGA,EAAOc,QAAUF,EAAiBQ,KAAK,KAAMpB,EAAOc,SACpDd,EAAOe,OAASH,EAAiBQ,KAAK,KAAMpB,EAAOe,QACnDd,GAAc/D,SAASmF,KAAKC,YAAYtB,EAnCkB,CAmCX,C,WCtChDrD,EAAoBwB,EAAKpB,IACH,qBAAXwE,QAA0BA,OAAOC,aAC1C9b,OAAOgZ,eAAe3B,EAASwE,OAAOC,YAAa,CAAEtnB,MAAO,WAE7DwL,OAAOgZ,eAAe3B,EAAS,aAAc,CAAE7iB,OAAO,GAAO,C,WCL9DyiB,EAAoB8E,IAAOzE,IAC1BA,EAAO0E,MAAQ,GACV1E,EAAO2E,WAAU3E,EAAO2E,SAAW,IACjC3E,E,WCHRL,EAAoBiF,EAAI,G,WCKxB,IAAIC,EAAkB,CACrB,IAAK,GAGNlF,EAAoBiC,EAAEb,EAAI,CAACc,EAASI,KAElC,IAAI6C,EAAqBnF,EAAoB8B,EAAEoD,EAAiBhD,GAAWgD,EAAgBhD,QAAW/B,EACtG,GAA0B,IAAvBgF,EAGF,GAAGA,EACF7C,EAASc,KAAK+B,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAIjD,SAAQ,CAACkD,EAASC,IAAYH,EAAqBD,EAAgBhD,GAAW,CAACmD,EAASC,KAC1GhD,EAASc,KAAK+B,EAAmB,GAAKC,GAGtC,IAAIlS,EAAM8M,EAAoBiF,EAAIjF,EAAoBuC,EAAEL,GAEpDxiB,EAAQ,IAAI6lB,MACZC,EAAgB/nB,IACnB,GAAGuiB,EAAoB8B,EAAEoD,EAAiBhD,KACzCiD,EAAqBD,EAAgBhD,GACX,IAAvBiD,IAA0BD,EAAgBhD,QAAW/B,GACrDgF,GAAoB,CACtB,IAAIM,EAAYhoB,IAAyB,SAAfA,EAAMiH,KAAkB,UAAYjH,EAAMiH,MAChEghB,EAAUjoB,GAASA,EAAMC,QAAUD,EAAMC,OAAOsmB,IACpDtkB,EAAMqa,QAAU,iBAAmBmI,EAAU,cAAgBuD,EAAY,KAAOC,EAAU,IAC1FhmB,EAAM+a,KAAO,iBACb/a,EAAMgF,KAAO+gB,EACb/lB,EAAMqB,QAAU2kB,EAChBP,EAAmB,GAAGzlB,EACvB,CACD,EAEDsgB,EAAoBkD,EAAEhQ,EAAKsS,EAAc,SAAWtD,EAASA,EAE/D,CACD,EAWFlC,EAAoBY,EAAEQ,EAAKc,GAA0C,IAA7BgD,EAAgBhD,GAGxD,IAAIyD,EAAuB,CAACC,EAA4BrjB,KACvD,IAGI0d,EAAUiC,GAHTrB,EAAUgF,EAAaC,GAAWvjB,EAGhB2e,EAAI,EAC3B,GAAGL,EAASkF,MAAMzF,GAAgC,IAAxB4E,EAAgB5E,KAAa,CACtD,IAAIL,KAAY4F,EACZ7F,EAAoB8B,EAAE+D,EAAa5F,KACrCD,EAAoBS,EAAER,GAAY4F,EAAY5F,IAGhD,GAAG6F,EAAS,IAAI9R,EAAS8R,EAAQ9F,EAClC,CAEA,IADG4F,GAA4BA,EAA2BrjB,GACrD2e,EAAIL,EAASrR,OAAQ0R,IACzBgB,EAAUrB,EAASK,GAChBlB,EAAoB8B,EAAEoD,EAAiBhD,IAAYgD,EAAgBhD,IACrEgD,EAAgBhD,GAAS,KAE1BgD,EAAgBhD,GAAW,EAE5B,OAAOlC,EAAoBY,EAAE5M,EAAO,EAGjCgS,EAAqBC,KAAK,sBAAwBA,KAAK,uBAAyB,GACpFD,EAAmBxT,QAAQmT,EAAqBlB,KAAK,KAAM,IAC3DuB,EAAmB5C,KAAOuC,EAAqBlB,KAAK,KAAMuB,EAAmB5C,KAAKqB,KAAKuB,G,KClFvF,IAAIE,EAAsBlG,EAAoBY,OAAET,EAAW,CAAC,MAAM,IAAOH,EAAoB,SAC7FkG,EAAsBlG,EAAoBY,EAAEsF,E","sources":["webpack://handsy/./src/App.vue?6039","webpack://handsy/./src/Home.vue?b5c2","webpack://handsy/./src/components/Game.vue","webpack://handsy/./src/web3RPC.ts","webpack://handsy/./src/types/index.js","webpack://handsy/./src/assets/Rock.js","webpack://handsy/./src/assets/Paper.js","webpack://handsy/./src/assets/Scissors.js","webpack://handsy/./src/components/GameMove.vue","webpack://handsy/./src/components/GameMove.vue?ea68","webpack://handsy/./src/components/GameList.vue","webpack://handsy/./src/components/GameList.vue?d7e9","webpack://handsy/./src/components/Game.vue?5bab","webpack://handsy/./src/components/Staking.vue","webpack://handsy/./src/components/Staking.vue?5423","webpack://handsy/./src/Home.vue?a948","webpack://handsy/./src/Home.vue","webpack://handsy/./src/App.vue?847a","webpack://handsy/./src/App.vue","webpack://handsy/./src/main.ts","webpack://handsy/webpack/bootstrap","webpack://handsy/webpack/runtime/amd options","webpack://handsy/webpack/runtime/chunk loaded","webpack://handsy/webpack/runtime/compat get default export","webpack://handsy/webpack/runtime/define property getters","webpack://handsy/webpack/runtime/ensure chunk","webpack://handsy/webpack/runtime/get javascript chunk filename","webpack://handsy/webpack/runtime/get mini-css chunk filename","webpack://handsy/webpack/runtime/global","webpack://handsy/webpack/runtime/hasOwnProperty shorthand","webpack://handsy/webpack/runtime/load script","webpack://handsy/webpack/runtime/make namespace object","webpack://handsy/webpack/runtime/node module decorator","webpack://handsy/webpack/runtime/publicPath","webpack://handsy/webpack/runtime/jsonp chunk loading","webpack://handsy/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Home = _resolveComponent(\"Home\")!\n\n  return (_openBlock(), _createBlock(_component_Home, { msg: \"Welcome to Your Vue.js + TypeScript App\" }))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"title\" }, \" Handsy.io \", -1)\nconst _hoisted_2 = {\n  key: 0,\n  class: \"profile\"\n}\nconst _hoisted_3 = {\n  key: 0,\n  class: \"\"\n}\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to Handsy.io\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Play rock paper scissors with your friends or with randome opponents for real money.\", -1)\nconst _hoisted_6 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Game = _resolveComponent(\"Game\")!\n  const _component_Staking = _resolveComponent(\"Staking\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"nav\", null, [\n      _hoisted_1,\n      ($setup.loggedin)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (!$setup.loggedin)\n      ? (_openBlock(), _createElementBlock(\"header\", _hoisted_3, [\n          _hoisted_4,\n          _hoisted_5,\n          _createElementVNode(\"button\", {\n            class: \"button-dark\",\n            onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($setup.login && $setup.login(...args))),\n            style: {\"cursor\":\"pointer\"}\n          }, \" Login \")\n        ]))\n      : _createCommentVNode(\"\", true),\n    ($setup.loggedin)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          (!$setup.staking)\n            ? (_openBlock(), _createBlock(_component_Game, {\n                key: 0,\n                provider: $setup.provider,\n                balance: $setup.balance\n              }, null, 8, [\"provider\", \"balance\"]))\n            : _createCommentVNode(\"\", true),\n          ($setup.staking)\n            ? (_openBlock(), _createBlock(_component_Staking, {\n                key: 1,\n                provider: $setup.provider\n              }, null, 8, [\"provider\"]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n  <div class=\"content\">\n    <div v-if=\"!isInGame && !isWaiting\">\n      <p style=\"margin:0; margin-bottom:6px;\">Your balance</p>\n      <h1 style=\"margin:0; margin-bottom:22px;\">\n        <span\n          class=\"currency-symbol\"\n        >$</span>\n        {{this.balance?.toString().split(\".\")[0]}}\n        <span\n          class=\"decimals\">\n          .{{ this.balance?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n\n        </span>\n      </h1>\n      <div class=\"address-container\">\n        <div class=\"profile-mini\"></div>\n        <p class=\"address\">{{truncateAddress(this.activeAccount)}}</p>\n      </div>\n    </div>\n    \n    <!-- <button\n      class=\"button-dark\"\n      @click=\"copyAffiliateLink\"\n    >\n      Copy affiliate link\n    </button> -->\n    <!-- If in game-->\n    <div v-if=\"isInGame\">\n      <!-- <button\n        class=\"button-dark\"\n        @click=\"leaveGame\"\n      >\n        Leave game\n      </button> -->\n      <!-- Round Id-->\n      <div style=\"justify-content: center;\">\n        Round {{ currentRound }} for <a>{{ currentWager }} ETH</a>\n      </div>\n      <div> {{ roundStateString }}</div>\n      <!-- Game view -->\n      <div style=\"display:grid; grid-template-columns: 1fr auto 1fr;\">\n          <!-- Selected move-->\n          <div \n          style=\"display: flex; flex-direction:column; gap: 35px; align-items: center;\"\n\n            v-if=\"shouldMove\"\n            >\n            <div style=\"display:flex;\">\n              <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 1 }\"></div>\n              <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 2 }\"></div>\n              <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 3 }\"></div>\n            </div>\n            <GameMove :move=\"selectedMove\"/>\n            <div class=\"address-container\">\n              <div class=\"profile-mini\"></div>\n                <p class=\"address\">{{ truncateAddress(yourAddress) }}</p>\n            </div>\n            <div class=\"player-balance\">\n              $ 156.03\n            </div>\n            \n          </div>\n          <!-- Choose move-->\n          <div\n            style=\"display: flex; flex-direction:column; gap: 35px; align-items: center;\"\n            v-else\n          >\n          <div style=\"display:flex;\">\n            <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 1 }\"></div>\n            <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 2 }\"></div>\n            <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 3 }\"></div>\n          </div>\n          <GameMove :move=\"selectedMove\"/>\n          <div class=\"address-container\">\n            <div class=\"profile-mini\"></div>\n              <p class=\"address\">{{ truncateAddress(yourAddress) }}</p>\n          </div>\n          <div class=\"player-balance\">\n            $ 156.03\n          </div>\n            <div \n              style=\"display: flex; justify-content: center; gap: 10px;\"\n            >\n              <div \n                  :style=\"{ 'border-color': isRock ? 'yellow' : 'inherit' }\" \n                  @click=\"onRock\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"1\"/>\n              </div>\n              <div \n                  :style=\"{ 'border-color': isPaper ? 'yellow' : 'inherit' }\" \n                  @click=\"onPaper\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"2\"/>\n              </div>\n              <div \n                  :style=\"{ 'border-color': isScissors ? 'yellow' : 'inherit' }\" \n                  @click=\"onScissors\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"3\"/>\n              </div>\n            </div>\n\n            <!-- red button\n            <button\n              class=\"button-dark\"\n              @click=\"sendMove\"\n            >   \n              Submit\n            </button> -->\n\n          </div>\n\n          <div style=\"display:flex; flex-direction:column; height: 100%; align-items: center; gap:35px\">\n            <p>Your bet is</p>\n            <h1 style=\"margin:0; margin-bottom:22px;\">\n              <span\n                class=\"currency-symbol\"\n              >$</span>\n              {{this.selectedBet?.toString().split(\".\")[0]}}\n              <span\n                class=\"decimals\">\n                .{{ this.selectedBet?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n      \n              </span>\n            </h1>\n          </div>\n\n          <!-- Opponent move-->\n          <div \n          >\n              <div class=\"flex flex-column\"\n                  style=\"display: flex; flex-direction:column; gap: 35px; align-items: center;\"\n              >\n                <div style=\"display:flex;\">\n                  <div :class=\"{ 'point': true, 'point-active': opponentCurrentPoints >= 1 }\"></div>\n                  <div :class=\"{ 'point': true, 'point-active': opponentCurrentPoints >= 2 }\"></div>\n                  <div :class=\"{ 'point': true, 'point-active': opponentCurrentPoints >= 3 }\"></div>\n                </div>\n                <GameMove v-if=\"bothRevealed\" :move=\"opponentMove\"/>\n                  <GameMove class=\"flip\" v-else-if=\"isOpponentMoveSent\" :move=\"5\"/>\n                  <GameMove class=\"flip\" v-else :move=\"4\"/>\n                <div class=\"address-container\">\n                  <div class=\"profile-mini\"></div>\n                   <p class=\"address\">{{ truncateAddress(yourAddress) }}</p>\n                </div>\n                <div class=\"player-balance\">\n                  $ 156.03\n                </div>\n\n                <div v-if=\"!isOpponentMoveSent\"\n                 class=\"loading\"></div>\n                <div v-else\n                  class=\"checkmark\"\n                >\n                  \n                </div>\n                  \n                  \n              </div>\n              \n          </div>\n      </div>\n\n    </div>\n\n    <!-- Should find game-->\n    <div class=\"content\" v-else>\n        <!-- Previous Game Result -->\n        <!-- <div v-if=\"previousGame\">\n          <h1 v-if=\"wonLastGame\">You won {{ previousGameWager }} ETH against {{ previousGameOpponent }}</h1>\n          <h1 v-else>You lost {{ previousGameWager }} ETH against {{ previousGameOpponent }}</h1>\n          <h1> {{ previousGamePoints }} : {{ previousGameOpponentPoints }} </h1>\n        </div> -->\n        \n        <!-- Game buttons -->\n        <!-- <div v-if=\"!isRegistering && !isWaiting\">\n          <div>\n            <button v-for=\"(step, index) in wagerSteps\"\n                    class=\"select\"\n                    :key=\"step\"\n                    :class=\"{ 'highlight-select': index === sliderIndex }\"\n                    @click=\"buttonClicked(index)\">\n              {{ step }} ETH\n            </button>\n          </div>\n        </div> -->\n\n        <!-- <p \n          v-if=\"!isRegistering && !isWaiting\"\n          @click=\"togglePlayWithFriend\"\n          >\n          {{ playWithFriend ? \"Playing with friends. Switch to play with random\": \"Playing with random switch to play with friend\" }}\n        </p> -->\n        <div style=\"display:flex;\">\n          <button v-if=\"!isRegistering && !isWaiting\" class=\"button-light\" @click=\"buyEth\">\n             <div class=\"plus-symbol\"></div><div>Add Funds</div>\n            </button>\n          <button\n          class=\"button-dark\"\n          v-if=\"!isWaiting\"\n          @click=\"registerGame\"\n        >   \n          <div>\n            Play match\n            &nbsp; \n          </div>\n          <!-- <a>{{ this.wagerSteps[this.sliderIndex] }} ETH</a> -->\n          <select \n          class=\"selector\" \n          style=\"margin-right:-25px;\"\n          :value=\"this.selectedBet\"\n          @input=\"event => selectedBet = event.target.value\"\n          @click.stop\n          >\n            <option v-for=\"step in wagerSteps\" :key=\"step\" :value=\"step\">\n              <span class=\"currency-symbol\">$</span>\n              {{ step }} &nbsp;\n            </option>\n          </select>\n        </button>\n        <div v-if=\"isWaiting\" style=\"display:flex; flex-direction:column; align-items:center; margin-top:-70px;\">\n          <p>You wager is</p>\n          <h1 style=\"margin:0;\"> <span class=\"currency-symbol\">$</span>{{ this.selectedBet }} <span class=\"decimals\">.00</span> </h1>\n          <p style=\"opacity:0.5;\">Waiting for opponent ...</p>\n          <div class=\"searching\"></div>\n          <button\n            class=\"button-dark\"\n            @click=\"cancelGame\"\n          >\n            Cancel\n          </button>\n        </div>\n        \n        </div>\n        \n        <button\n          v-if=\"isWaiting && playWithFriend\"\n          class=\"button-dark\"\n          @click=\"copyPasswordGameLink\"\n        >\n          Copy game link\n        </button>\n    </div>\n\n\n    \n\n\n    \n    \n\n    <!-- <div v-if=\"isUserConnected\">\n\n      <div v-if=\"pastGames && pastGames.length\">\n        <h2>Past games</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Game ID</th>\n              <th>Player A</th>\n              <th>Player B</th>\n              <th>Outcome</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"game in pastGames\" :key=\"game.gameId\">\n              <td>{{ game.gameId }}</td>\n              <td>{{ game.playerA }} played {{ game.moveA }}</td>\n              <td>{{ game.playerB }} played {{ game.moveB }}</td>\n              <td>{{ game.outcome }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div> -->\n  </div>\n  <game-list\n   v-if=\"!isInGame\"\n   :activeData=\"activeGames\"\n   :completedData=\"completedGames\"\n   :pendingData=\"pendingGames\"\n   ></game-list>\n\n</template>\n\n<style>\nbody {\n  height: 100%;\n  width: 100%;\n}\n</style>\n\n<script>\nimport mainContracts from \"../../../contracts/local-contracts.json\"\n\nfunction gameStateToString(state) {\n    if(state == GameStates.Waiting)\n        return \"Waiting\"\n    if(state == GameStates.Sending)\n        return \"Sending move\"\n    if(state == GameStates.Revealing)\n        return \"Revealing move\"\n    if(state == GameStates.Revealed)\n        return \"Revealed move\"\n    if(state == GameStates.Matched)\n        return \"Matched with opponent\"\n    if(state == GameStates.Initial)\n        return \"\"\n    if(state == GameStates.Finished)\n        return \"Game complete\"\n    \n    return \"\"\n    \n}\n\nfunction opponentGameStateToString(state) {\n  if(state == GameStates.Waiting)\n        return \"Waiting\"\n    if(state == GameStates.Sending)\n        return \"Sending move\"\n    if(state == GameStates.Revealing)\n        return \"Revealing move\"\n    if(state == GameStates.Revealed)\n        return \"Revealed move\"\n    if(state == GameStates.Matched)\n        return \"Matched with opponent\"\n    if(state == GameStates.Initial)\n        return \"Waiting for opponent\"\n    if(state == GameStates.Finished)\n        return \"Game complete\"\n    \n    return \"\"\n}\nimport RPC from \"../web3RPC\";\n\nimport GameMove from \"./GameMove.vue\";\nimport GameList from \"./GameList.vue\";\nimport { Moves, Outcomes, GameStates } from \"../types\";\nimport Web3 from \"web3\";\nimport { sha256 } from \"js-sha256\";\nimport RampInstantSDK from \"@ramp-network/ramp-instant-sdk\";\nimport { ethers } from 'ethers'\nimport GameListVue from './GameList.vue'\n\nconst CONTRACT_ADDRESS = mainContracts.deployedContracts.Hands\nconst CONTRACT_ABI = mainContracts.deployedAbis.Hands\n\n//EXAMPLE Game.\n// {\n//   gameId: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n//   playerA: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n//   playerB: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n//   states: {}\n\n//   betAmount: 1,\n//   moveA: 1,\n//   moveB: 2,\n//   outcome: 2, // 0 = draw, 1 = playerA wins, 2 = playerB wins\n// }\n\n\nfunction generateRandomString() {\n  return Math.random().toString(36).substring(2, 15);\n}\n\nfunction calcWinner(moveA, moveB) {\n  if (moveA == moveB) {\n    return Outcomes.Draw;\n  }\n\n  if (moveA == Moves.Rock) {\n    if (moveB == Moves.Paper) {\n      return Outcomes.PlayerB;\n    } else {\n      return Outcomes.PlayerA;\n    }\n  }\n\n  if (moveA == Moves.Paper) {\n    if (moveB == Moves.Scissors) {\n      return Outcomes.PlayerB;\n    } else {\n      return Outcomes.PlayerA;\n    }\n  }\n\n  if (moveA == Moves.Scissors) {\n    if (moveB == Moves.Rock) {\n      return Outcomes.PlayerB;\n    } else {\n      return Outcomes.PlayerA;\n    }\n  }\n}\n\nexport default {\n  components: {\n      GameMove,\n      GameList,\n  },\n  props: {\n    provider: {\n      type: String,\n      default: null,\n    },\n    balance: {\n      type: Number,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      stripeClientSecret: null,\n      initialized: false,\n      games: {},\n      lastBlockSearched: 0,\n      currentGameId: \"0\",\n\n      selectedMove: \"\",\n      selectedBet: \"\",\n      randomString: \"\",\n\n      contractInstance: null,\n      pastGames: [],\n\n      playerRegisteredEvents: [],\n      playerWaitingEvents: [],\n      playersMatchedEvents: [],\n      moveCommittedEvents: [],\n      moveRevealedEvents: [],\n      newRoundEvents: [],\n      gameOutcomeEvents: [],\n      playerCancelledEvents: [],\n\n      wagerSteps: [\"0.01\", \"0.1\", \"1\", \"5\", \"10\"],\n      sliderIndex: 0,\n\n      _lastGameId: -1,\n      activeAccount: null,\n\n      rampSdk: null,\n\n      affiliateContract: null,\n      affiliateOfUser: null,\n\n      playWithFriend: null,\n    };\n  },\n  computed: {\n    getActiveAccount() {        \n      return this.activeAccount?.toLowerCase()\n    },\n    getWeb3() {return new Web3(this.provider);},\n    balance() {return this.getBalance();},\n    //Game state\n    isRock() { return this.selectedMove === Moves.Rock },\n    isPaper() { return this.selectedMove === Moves.Paper },\n    isScissors() { return this.selectedMove === Moves.Scissors;},\n    gameState() {\n      console.log(\"gameState\", this.currentGameId, this.games);\n      if (!this.games[this.currentGameId ?? \"0\"]) {\n        return GameStates.Initial;\n      }\n      const currentRound = this.games[this.currentGameId ?? \"0\"].round;\n      return this.games[this.currentGameId ?? \"0\"].states[currentRound][this.getActiveAccount] ?? GameStates.Matched\n    },\n    yourGameStateToString() { \n      switch(this.gameState) {\n        case GameStates.Initial:\n          return \"Waiting for opponent\"\n        case GameStates.Waiting:\n          return \"Waiting for opponent\"\n        case GameStates.Sending:\n          return \"Sending move\"\n        case GameStates.Sent:\n          return \"Sent move\"\n        case GameStates.Revealing:\n          return \"Revealing move\"\n        case GameStates.Revealed:\n          return \"Revealed move\"\n        case GameStates.Matched:\n          return \"Send your move\"\n        case GameStates.Finished:\n          return \"Game complete\"\n        default:\n          return \"\"\n      }\n    },\n    isRegistering() { return this.gameState == GameStates.Registering },\n    isWaiting() { return this.gameState == GameStates.Waiting },\n    isRevealing() { return this.gameState == GameStates.Revealing },\n    isRevealed() { return this.gameState == GameStates.Revealed },\n    \n    roundStateString() {\n      if(this.bothRevealed){\n        if(this.isWinner){\n          return \"You won!\"\n        } else if(this.isLoser){\n          return \"You lost!\"\n        } else {\n          return \"Draw!\"\n        }\n      } \n      return null\n      \n    },\n    isOpponentMoveRevealed() { return this.opponentState == GameStates.Revealed },\n    bothRevealed() { return this.isRevealed && this.isOpponentMoveRevealed },\n    isInGame() { return this.gameState == GameStates.Sending || this.gameState == GameStates.Revealing || this.gameState == GameStates.Revealed || this.gameState == GameStates.Matched || this.gameState == GameStates.Sent },\n    isMoveSent() { return this.gameState == GameStates.Sent || this.gameState == GameStates.Revealing || this.gameState == GameStates.Revealed},\n    isOpponentMoveSent() { return this.opponentState == GameStates.Sent || this.opponentState == GameStates.Revealing || this.opponentState == GameStates.Revealed},\n    isGameFinished() { return this.gameState == GameStates.Finished},\n    currentRound() { return this.games[this.currentGameId ?? \"0\"].round },\n    opponentMove() { return this.games[this.currentGameId ?? \"0\"].moves[this.currentRound][this.getOpponentAccount] },\n    isWinner() {\n      //just compare opponentMove to selectedMove\n      return calcWinner(this.selectedMove, this.opponentMove) == Outcomes.PlayerA\n    },\n    isLoser() {\n      //just compare opponentMove to selectedMove\n      return calcWinner(this.selectedMove, this.opponentMove) == Outcomes.PlayerB\n    },\n\n    previousGame() { \n      //get previous game by searching for the last game that is not the current game\n      //that has a state of finished\n      //that the current player is a part of\n      //search through all of the games by order of greatest gameId to least\n      //find the first game that is not the current game and has a state of finished\n      //that the current player is a part of\n      const games = Object.values(this.games).sort((a, b) => b.gameId - a.gameId)\n      const previousGame = games.find(game => game.gameId !== this.currentGameId && game.outcome != Outcomes.None)\n      console.log(\"games ordered by gameId\", games)\n      console.log(\"previous game\", previousGame)\n      return previousGame\n    },\n    previousGameWager() { return this.previousGame?.bet ?? 0},\n    currentWager() { return this.games[this.currentGameId]?.bet ?? 0},\n    previousGamePoints() { \n      console.log(\"previousGamePoints\", this.previousGame?.points[this.getActiveAccount.toLowerCase()])\n      return this.previousGame?.points[this.getActiveAccount.toLowerCase()] ?? 0\n    },\n    previousGameOpponent() { \n      const playerA = this.previousGame?.playerA?.toLowerCase()\n      const playerB = this.previousGame?.playerB?.toLowerCase()\n      return playerA === this?.getActiveAccount?.toLowerCase() ? playerB : playerA\n    },\n    yourCurrentPoints() { return this.games[this.currentGameId]?.points[this.getActiveAccount?.toLowerCase()] ?? 0},\n    opponentCurrentPoints() { return this.games[this.currentGameId]?.points[this.opponentAddress?.toLowerCase()] ?? 0},\n    previousGameOpponentPoints() { return this.previousGame?.points[this.previousGameOpponent?.toLowerCase()] ?? 0},\n    wonLastGame() { return this.previousGamePoints > this.previousGameOpponentPoints},\n    yourAddress() { return this.getActiveAccount},\n    yourMove() { return this.selectedMove },\n    opponentAddress(){\n      const playerA = this.games[this.currentGameId]?.playerA?.toLowerCase()\n      const playerB = this.games[this.currentGameId]?.playerB?.toLowerCase()\n      return playerA === this?.getActiveAccount?.toLowerCase() ? playerB : playerA\n    },\n    opponentMove() {\n      const opponentAddress = this.opponentAddress?.toLowerCase()\n      const currentGameId = this.currentGameId\n      return this.games[currentGameId?.toLowerCase()]?.moves[this.currentRound]?.[opponentAddress?.toLowerCase()] ?? Moves.None\n    },\n    opponentState() {\n      const opponentAddress = this.opponentAddress?.toLowerCase()\n      const currentGameId = this?.currentGameId\n      const currentRound = this.games[this.currentGameId ?? \"0\"]?.round ?? 0\n      console.log(\"opponentState\", this.games[currentGameId?.toLowerCase()]?.states[currentRound][opponentAddress?.toLowerCase()])\n      return this.games[currentGameId?.toLowerCase()]?.states[currentRound][opponentAddress?.toLowerCase()] ?? GameStates.Initial\n    },\n\n    opponentStateToString() { \n      switch(this.opponentState) {\n        case GameStates.Initial:\n          return \"Choosing move\"\n        case GameStates.Registering:\n          return \"Registering\"\n        case GameStates.Waiting:\n          return \"Waiting\"\n        case GameStates.Matched:\n          return \"Choosing move\"\n        case GameStates.Sending:\n          return \"Sending\"\n        case GameStates.Sent:\n          return \"Sent\"\n        case GameStates.Revealing:\n          return \"Revealing\"\n        case GameStates.Revealed:\n          return \"Revealed\"\n        case GameStates.Finished:\n          return \"Finished\"\n        default:\n          return \"Unknown\"\n      }\n    },\n    isMoveSending() { return this.gameState == GameStates.Sending },\n\n\n    //Seamless transaction handler\n    //Reveal move when both players have successfully sent their move\n    //And not revealing move yet\n    shouldReveal(){\n      console.log(\"shouldReveal\", this.isMoveSent, this.isOpponentMoveSent, this.isGameFinished, this.isRevealing)\n      return this.isMoveSent && this.isOpponentMoveSent && !this.isGameFinished && !this.isRevealing && this.initialized && !this.isRevealed\n    },\n    //should move when in a game and has not sent move yet\n    shouldMove(){\n      return (this.isMoveSent || this.isMoveSending) && this.isInGame\n    },\n    shouldSetAffiliateCode() {\n      //get affiliate code from local storage\n      const affiliateCode = localStorage.getItem(\"affiliateCode\")\n      \n      return affiliateCode && this.affiliateOfUser != ethers.constants.AddressZero\n    },\n\n    //Return array of games that are pending. Where a user is waiting for someone to join\n    pendingGames(){\n      const games = Object.values(this.games)\n      return games.filter(game => game.outcome == Outcomes.None && game.playerB == \"\" && game.gameId != \"0\")\n    },\n    //Return array of games that are ongoing. Where a users are playing a game\n    activeGames(){\n      const games = Object.values(this.games)\n      return games.filter(game => game.outcome == Outcomes.None && game.playerB != \"\" && game.gameId != \"0\")\n    },\n\n    completedGames(){\n      const games = Object.values(this.games)\n      return games.filter(game => game.outcome != Outcomes.None && game.gameId != \"0\")\n    },\n\n    \n  },\n\n  \n\n  async mounted() {\n    console.log(\"provider\", this.provider)\n    this.initialized = false\n    this.fetchPastGames();\n    this.subscribeToEvents();\n\n    console.log(\"ramp sdk\", RampInstantSDK)\n\n    // Load the last sentMove and betAmount from the localStorage\n    const lastSentMove = localStorage.getItem(\"lastSentMove\");\n    const lastRandomString = localStorage.getItem(\"lastRandomString\");\n    const lastBetAmount = localStorage.getItem(\"lastBetAmount\");\n    const playWithFriend = localStorage.getItem(\"playWithFriend\");\n\n    if (lastSentMove) {\n      this.selectedMove = lastSentMove;\n    }\n\n    if (lastBetAmount) {\n      this.selectedBet = lastBetAmount;\n      this.sliderIndex = this.wagerSteps.indexOf(parseFloat(lastBetAmount));\n    }\n\n    if (lastRandomString) {\n      this.randomString = lastRandomString;\n    }\n\n    this.playWithFriend = playWithFriend === \"true\" ? true : false;\n    console.log(\"playWithFriend\", this.playWithFriend);\n    console.log(\"playWithFriend localStorage\", localStorage.getItem(\"playWithFriend\"));\n\n    this.initialized = true\n\n    //set active account\n    await this.getAccount()\n\n    //check affiliate code\n    await this.checkAffililiateCode()\n\n    //check if joining password match\n    await this.checkJoiningPassword()\n    \n  },\n  watch:{\n    games: {\n      handler(newValue, oldValue) {\n        console.log(\"yourGameState\", gameStateToString(this.gameState));\n        console.log(\"games changed\", this.games[this.currentGameId]);\n      },\n      deep: true\n    },\n    shouldReveal: {\n      handler(newValue, oldValue) {\n        if (newValue) {\n          console.log(\"is calling revealMove\");\n          this.revealMove();\n        }\n      },\n      deep: true\n    },\n  },\n  methods: {\n    truncateAddress(address) {\n      return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n    },\n    onRock() {\n      this.selectedMove = Moves.Rock;\n      this.sendMove();\n    },\n    onPaper() {\n      this.selectedMove = Moves.Paper;\n      this.sendMove();\n    },\n    onScissors() {\n      this.selectedMove = Moves.Scissors;\n      this.sendMove();\n    },\n    buttonClicked(index) {\n      this.sliderIndex = index;\n      this.sliderValueChanged();\n    },\n    sliderValueChanged() {\n      this.selectedBet = this.wagerSteps[this.sliderIndex];\n    },\n    togglePlayWithFriend() {\n      const localStoragePlayWithFriend = localStorage.getItem(\"playWithFriend\");\n      if (localStoragePlayWithFriend == \"true\") {\n        console.log(\"setting playWithFriend to false\");\n        localStorage.setItem(\"playWithFriend\", false);\n        this.playWithFriend = false;\n      } else {\n        console.log(\"setting playWithFriend to true\");\n        localStorage.setItem(\"playWithFriend\", true);\n        this.playWithFriend = true;\n      }\n      \n    },\n    async getStripeClientSecret(){\n      if(this.activeAccount){\n        fetch(\"/api/stripe_intent\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            address,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setClientSecret(data.client_secret);\n          });\n      }\n    },\n    async getAccount() {\n      const accounts = await this.getWeb3.eth.getAccounts();\n      console.log(\"accounts\", accounts);\n      this.activeAccount = accounts[0];\n      return accounts[0];\n    },\n    async setContract() {\n      this.contractInstance = new this.getWeb3.eth.Contract(\n        CONTRACT_ABI,\n        CONTRACT_ADDRESS,\n      );\n\n      console.log(\"contractInstance\", this.contractInstance);\n\n      //Set Affiliate contract\n      this.affiliateContract = new this.getWeb3.eth.Contract(\n          mainContracts.deployedAbis.Affiliate,\n          mainContracts.deployedContracts.Affiliate\n      );\n    },\n\n    async getBlockNumber() {\n      return await this.getWeb3.eth.getBlockNumber();\n    },\n    async getContract() {\n      if (!this.contractInstance) {\n        await this.setContract();\n      }\n      return this.contractInstance;\n    },\n\n    createGame(gameId, playerA= this.getActiveAccount){\n      this.games[gameId] = {\n        gameId,\n        playerA: playerA.toLowerCase(),\n        playerB: \"\",\n        states: {\n            [0]: {\n                [playerA.toLowerCase()]: GameStates.Initial,\n            }\n        },\n        bet: 0,\n        moves: {\n          [0]: {\n            [playerA.toLowerCase()]: Moves.None,\n          },\n        },\n        outcome: Outcomes.None,\n        points: {\n          [playerA.toLowerCase()]: 0,\n        },\n        round: 0,\n      };\n    },\n\n    setLastGameId(gameId) {\n      console.log(\"setting last game\", gameId);\n      this._lastGameId = parseInt(gameId);\n    },\n\n    isNewestGameId(gameId) {\n      return parseInt(gameId) >= this._lastGameId && gameId >= this.currentGameId;\n    },\n\n    getGame(gameId) {\n      return this.games[gameId]\n    },\n\n    getGameCurrentRound(gameId) {\n      return this.games[gameId].length - 1;\n    },\n\n    convertTimestampToTime(timestamp) {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds by multiplying by 1000\n    let hours = date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    const strTime = hours + ':' + minutes.substr(-2) + ' ' + ampm;\n    return strTime;\n},\n    \n    //Whenever a new game is registered\n    async handleRegisterEvent(event, userAddress) {\n      console.log(\"PlayerRegistered event:\", event.returnValues);\n      const { gameId, playerAddress } = event.returnValues;\n      \n      //check if gameId is in games\n      if (!this.getGame(gameId, 0)) \n        this.createGame(gameId, playerAddress);\n      \n      //set players state to waiting\n      this.getGame(gameId).states[0][playerAddress.toLowerCase()] = GameStates.Waiting;  \n      \n      const block = await this.getWeb3.eth.getBlock(event.blockNumber);\n      const timestamp = block.timestamp;\n      this.getGame(gameId).time = this.convertTimestampToTime(timestamp)\n      \n      //set currentGameId if user is in game\n      if (playerAddress.toLowerCase() === userAddress.toLowerCase()) {\n        if (this.isNewestGameId(gameId)){\n          this.currentGameId = gameId;\n          console.log(\"setting currentGameId\", this.currentGameId);\n        }\n        this.setLastGameId(gameId);\n      }\n    },\n\n    //Whenever has created a match and is waiting for another player to join\n    //We set the bet value and the state to waiting\n    handleWaitingEvent(event) {\n      console.log(\"PlayerWaiting event:\", event.returnValues);\n      const { gameId, bet } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.getGame(gameId, 0))\n        this.createGame(gameId);\n      \n      //set players state to waiting\n      const playerA = this.getGame(gameId).playerA.toLowerCase()\n      const playerB = this.getGame(gameId).playerB.toLowerCase()\n      this.getGame(gameId).states[0][playerA] = GameStates.Waiting;\n\n      //set bet amount\n      this.getGame(gameId).bet = bet * 10 ** -18;\n\n      //set currentGameId if user is in game\n      if (playerA === this.activeAccount.toLowerCase() || playerB === this.activeAccount.toLowerCase()) {\n        this.currentGameId = gameId;\n        this.setLastGameId(gameId);\n        console.log(\"setting currentGameId\", this.currentGameId);\n      }\n    },\n\n\n    handlePlayersMatchedEvent(event) {\n      console.log(\"PlayersMatched event:\", event.returnValues);\n      const { gameId, playerA, playerB } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.getGame(gameId))\n        this.createGame(gameId, playerA);\n      \n      //set player values\n      this.getGame(gameId).playerA = playerA.toLowerCase()\n      this.getGame(gameId).playerB = playerB.toLowerCase()\n\n      //set player states\n      this.getGame(gameId).states[0][playerA.toLowerCase()] = GameStates.Matched;\n      this.getGame(gameId).states[0][playerB.toLowerCase()] = GameStates.Matched;\n\n      //Check if player is in game\n      if (playerA.toLowerCase() == this.activeAccount.toLowerCase() || playerB.toLowerCase() == this.activeAccount.toLowerCase()) {\n        this.currentGameId = gameId;\n        console.log(\"setting currentGameId\", this.currentGameId);\n      }\n      console.log(\"setting game to matched\");\n    },\n\n    handleMoveSentEvent(event) {\n      console.log(\"MoveSent event:\", event.returnValues);\n      const { gameId, round, playerAddress } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.getGame(gameId))\n        this.createGame(gameId, playerAddress);\n\n      //Check if round is in moves\n      if (!this.getGame(gameId).moves[round])\n        this.getGame(gameId).moves[round] = {};\n      \n      //Check if round is in states\n      if (!this.getGame(gameId).states[round])\n        this.getGame(gameId).states[round] = {};\n\n      //set player state\n      this.getGame(gameId).states[round][playerAddress.toLowerCase()] = GameStates.Sent;\n    },\n\n    handleRevealedEvent(event) {\n      console.log(\"MoveRevealed event:\", event.returnValues);\n      const { gameId, round, playerAddress, move } = event.returnValues;\n      \n      //check if gameId is in games\n      if (!this.getGame(gameId))\n        this.createGame(gameId, playerAddress);\n      \n      //Check if round is in moves\n      if (!this.getGame(gameId).moves[round])\n        this.getGame(gameId).moves[round] = {};\n\n      //Check if round is in states\n      if (!this.getGame(gameId).states[round])\n        this.getGame(gameId).states[round] = {};\n\n      //set player move\n      this.games[gameId].moves[round][playerAddress.toLowerCase()] = move;\n\n      //set player state\n      this.games[gameId].states[round][playerAddress.toLowerCase()] = GameStates.Revealed;\n    },\n\n    //Handle new round event\n    handleNewRoundEvent(event) {\n      console.log(\"NewRound event:\", event.returnValues);\n      const { gameId, round, pointsA, pointsB } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.games[gameId])\n        this.createGame(gameId);\n\n      //Check if round is in states\n      if (!this.games[gameId].states[round])\n        this.games[gameId].states[round] = {};\n\n      //Check if round is in moves\n      if (!this.games[gameId].moves[round])\n        this.games[gameId].moves[round] = {};\n\n      //set round\n      this.games[gameId].round = round;\n\n      //set points\n      this.games[gameId].points[this.games[gameId].playerA.toLowerCase()] = pointsA;\n      this.games[gameId].points[this.games[gameId].playerB.toLowerCase()] = pointsB;\n\n      console.log(\"setting new points for gameId\", gameId, pointsA, pointsB);\n\n      //reset game state to matched if not revealed or sent\n      // this.games[gameId].states[round][this.games[gameId].playerA.toLowerCase()] = GameStates.Matched;\n      \n      // this.games[gameId].states[round][this.games[gameId].playerB.toLowerCase()] = GameStates.Matched;\n      \n      \n    },\n    \n    handleOutcomeEvent(event) {\n      console.log(\"GameOutcome event:\", event.returnValues);\n      const { gameId, outcome } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.games[gameId])\n        this.createGame(gameId);\n\n      //set outcome\n      this.games[gameId].outcome = outcome;\n\n      //reset current gameId\n      if(this.isNewestGameId(gameId)){\n        this.currentGameId = \"0\";\n        console.log(`resetting current game id from ${gameId} to 0 lastGameId: ${this._lastGameId}`);\n        this.createGame(\"0\");\n        this.setLastGameId(gameId);\n      }      \n    },\n\n    //If the game id that was cancelled was yours then reset the current game id and remove the game\n    handlePlayerCancelledEvent(event) {\n      console.log(\"PlayerCancelled event:\", event.returnValues);\n      const { gameId, playerAddress } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.games[gameId])\n        this.createGame(gameId, playerAddress);\n\n      //check if player is in game\n      if (this.games[gameId].playerA.toLowerCase() == this.activeAccount.toLowerCase() || this.games[gameId].playerB.toLowerCase() == this.activeAccount.toLowerCase()) {\n        //reset current gameId\n        if(this.isNewestGameId(gameId)){\n          console.log(\"resetting current game id \", gameId);\n          //this.currentGameId = \"0\";\n          this.createGame(\"0\");\n          this.setLastGameId(gameId);\n        }\n      }\n    },\n\n    async subscribeToEvents() {\n      const contract = await this.getContract();\n      const userAddress = await this.getAccount();\n\n      console.log(\"Polling for events...\");\n      console.log(\"contract:\", contract);\n\n      const eventNames = [\n        \"PlayerRegistered\",\n        \"PlayerWaiting\",\n        \"PlayersMatched\",\n        \"MoveCommitted\",\n        \"MoveRevealed\",\n        \"NewRound\",\n        \"GameOutcome\",\n        \"PlayerCancelled\",\n      ];\n\n      const eventHandlers = {\n        PlayerRegistered: this.handleRegisterEvent,\n        PlayerWaiting: this.handleWaitingEvent,\n        PlayersMatched: this.handlePlayersMatchedEvent,\n        MoveCommitted: this.handleMoveSentEvent,\n        MoveRevealed: this.handleRevealedEvent,\n        NewRound: this.handleNewRoundEvent,\n        GameOutcome: this.handleOutcomeEvent,\n        PlayerCancelled: this.handlePlayerCancelledEvent,\n      };\n\n      const pollingInterval = 1000; // Poll every 5 seconds\n\n      let lastBlockChecked = await this.getBlockNumber()\n\n      setInterval(async () => {\n        const currentBlock = await this.getBlockNumber();\n\n        for (const eventName of eventNames) {\n          const events = await contract.getPastEvents(eventName, {\n            fromBlock: lastBlockChecked + 1,\n            toBlock: currentBlock,\n          });\n\n          events.forEach((event) => {\n            console.log(`New ${eventName} event detected:`, event);\n            if (eventName === \"NewRound\" || eventName === \"GameOutcome\") {\n              setTimeout(() => {\n                eventHandlers[eventName].call(this, event, userAddress);\n              }, 3000); // Add a 1-second delay before handling the NewRound event\n            } else {\n              eventHandlers[eventName].call(this, event, userAddress);\n            }\n          });\n        }\n\n        lastBlockChecked = currentBlock;\n      }, pollingInterval);\n    },\n\n    async setPassword() {\n      const password = await generateRandomString();\n      const passwordHash = \"0x\" + sha256(password);\n      //store in local storage\n      localStorage.setItem(\"passwordHash\", passwordHash);\n      localStorage.setItem(\"password\", password);\n    },   \n    \n    getPassword() {\n      const password = localStorage.getItem(\"password\");\n      return password;\n    },\n\n    getPasswordHash() {\n      const passwordHash = localStorage.getItem(\"passwordHash\");\n      return passwordHash;\n    },\n\n    async getActiveGameId() {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n        return gameId;\n      } catch (error) {\n        //console.error(\"Error getting active gameId:\", error);\n      }\n    },\n\n    //copy affiliate link to clipboard\n    //affiliate link is the current url with the user's address appended to the end as a query string\n    copyAffiliateLink() {\n      const url = new URL(window.location.href);\n      url.searchParams.set(\"ref\", this.getActiveAccount);\n      navigator.clipboard.writeText(url.href);\n      alert(\"Copied to clipboard!\");\n    },\n\n    copyPasswordGameLink(){\n      const url = new URL(window.location.href);\n      const password = this.getPassword();\n      url.searchParams.set(\"game\", password);\n      const bet = this.selectedBet;\n      url.searchParams.set(\"bet\", bet);\n      navigator.clipboard.writeText(url.href);\n      alert(\"Copied to clipboard!\");\n    },\n\n    //calls the affiliate contract this.affiliateContract\n    async registerAsConsumer(){\n      console.log(\"Registering as consumer...\")\n      if (this.affiliateContract){\n        try {\n          const accounts = await this.getWeb3.eth.getAccounts();\n          const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n          const gasLimit = 3000000;\n\n          //get affilaite address from local storage \n          const affiliateAddress = localStorage.getItem(\"affiliateCode\");\n          console.log(\"affiliateAddress:\", affiliateAddress);\n\n\n          const result = await this.affiliateContract.methods.registerAsConsumer(affiliateAddress).send({\n            from: this.activeAccount,\n            gasPrice,\n            gasLimit,\n          });\n          console.log(\"registerAsConsumer result:\", result);\n        } catch (error) {\n          console.error(\"Error registering as consumer:\", error);\n        }\n      }\n\n    },\n\n\n    //Join or create a new game\n    async registerGame() {\n      if(this.playWithFriend){\n        await this.createPasswordGame();\n        return;\n      }\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      if(this.shouldSetAffiliateCode){\n        await this.registerAsConsumer();\n      }else{\n        console.log(\"Not registering as consumer...\")\n      }\n\n      try {\n        console.log(\"Registering game...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Registering;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const betInWei = this.getWeb3.utils.toWei(this.selectedBet.toString(), \"ether\");\n\n        //get playerGame mapping\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n        console.log(\"gameId:\", gameId);\n        const result = await this.contractInstance.methods\n          .register()\n          .send({ from: accounts[0], value: betInWei, gasPrice, gasLimit });\n        \n\n        localStorage.setItem(\"lastBetAmount\", this.selectedBet);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Initial;\n\n        //revert selected move\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    //Create password game\n    async createPasswordGame() {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      try {\n        console.log(\"Creating password game...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Registering;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const betInWei = this.getWeb3.utils.toWei(this.selectedBet.toString(), \"ether\");\n\n        //get playerGame mapping\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n\n        //set password\n        await this.setPassword();\n        const passwordHash = this.getPasswordHash();\n        console.log(\"gameId:\", gameId);\n        const result = await this.contractInstance.methods\n          .createPasswordMatch(passwordHash)\n          .send({ from: accounts[0], value: betInWei, gasPrice, gasLimit });\n        \n\n        localStorage.setItem(\"lastBetAmount\", this.selectedBet);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Initial;\n\n        //revert selected move\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    //Join password match\n    async joinPasswordMatch(password, betAmount) {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n      this.selectedBet = betAmount;\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      if(this.shouldSetAffiliateCode){\n        await this.registerAsConsumer();\n      }else{\n        console.log(\"Not registering as consumer...\")\n      }\n\n      try {\n        console.log(\"Joining password match...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Registering;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const betInWei = this.getWeb3.utils.toWei(this.selectedBet.toString(), \"ether\");\n\n        //get playerGame mapping\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n\n        //set password\n        console.log(\"gameId:\", gameId);\n        const result = await this.contractInstance.methods\n          .joinPasswordMatch(password)\n          .send({ from: accounts[0], value: betInWei, gasPrice, gasLimit });\n        \n\n        localStorage.setItem(\"lastBetAmount\", this.selectedBet);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Initial;\n\n        //revert selected move\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    //Send move to the contract\n    async sendMove(){\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      try {\n        console.log(\"Sending game...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[this.currentRound][this.getActiveAccount] = GameStates.Sending;\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n        this.randomString = generateRandomString(); // Save randomString\n        const encryptedMove =\n          \"0x\" + sha256(this.selectedMove + this.randomString);\n        console.log(\"clearMove:\", this.selectedMove + this.randomString);\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const result = await this.contractInstance.methods\n          .commit(parseInt(this.currentGameId), encryptedMove)\n          .send({ from: accounts[0], gasPrice, gasLimit });\n        console.log(\"Game registered:\", result);\n\n        // Store the last sentMove and betAmount in the localStorage\n        localStorage.setItem(\"lastSentMove\", this.selectedMove);\n        localStorage.setItem(\"lastRandomString\", this.randomString);\n        \n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = prevState\n\n        //revert selected move\n        this.selectedMove = \"\";\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    async cancelGame(){\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        console.log(\"Cancelling game...\", this.currentGameId);\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\")\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = GameStates.Cancelling;\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const result = await this.contractInstance.methods\n          .cancel(parseInt(this.currentGameId))\n          .send({ from: accounts[0], gasPrice, gasLimit });\n        console.log(\"Game cancelled:\", result);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\");\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = prevState\n\n        // //revert selected move\n        // this.selectedMove = \"\";\n        console.error(\"Error cancelling game:\", error);\n      }\n    },\n\n    async leaveGame(){\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        console.log(\"Leaving game...\", this.currentGameId);\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\")\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = GameStates.Cancelling;\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const result = await this.contractInstance.methods\n          .leave(parseInt(this.currentGameId))\n          .send({ from: accounts[0], gasPrice, gasLimit });\n        console.log(\"Game left:\", result);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\");\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = prevState\n\n        // //revert selected move\n        // this.selectedMove = \"\";\n        console.error(\"Error cancelling game:\", error);\n      }\n    },\n\n    async revealMove() {\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        // Update the gameState to Revealing\n        if (!this.games[this.currentGameId]) \n          this.createGame(this.currentGameId)\n        this.games[this.currentGameId].states[this.getActiveAccount] = GameStates.Revealing;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const clearMove = `${this.selectedMove}${this.randomString}`; // Use saved randomString\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n        const result = await this.contractInstance.methods\n          .reveal(this.currentGameId, clearMove)\n          .send({ from: accounts[0], gasPrice, gasLimit });\n\n        //console.log(\"Move revealed:\", result);\n\n        // Automatically update the gameId to get the outcome\n\n        \n        console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //Update the gameState to Matched\n        if (!this.games[this.currentGameId]) \n          this.createGame(this.currentGameId)\n        this.games[this.currentGameId].states[this.getActiveAccount] = GameStates.Sent\n        console.error(\"Error revealing move:\", error);\n      }\n    },\n    async getGameOutcome() {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n        const gasLimit = 3000000;\n        const result = await this.contractInstance.methods\n          .getOutcome(this.currentGameId)\n          .call({ from: accounts[0], gasPrice, gasLimit });\n        console.log(\"Game outcome:\", result);\n        //this.gameInfo.outcome = result;\n      } catch (error) {\n        console.error(\"Error getting game outcome:\", error);\n      }\n    },\n\n    async fetchPlayerRegisteredEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"PlayerRegistered\", {\n        fromBlock,\n      });\n      this.playerRegisteredEvents = events;\n      console.log(\"playerRegisteredEvents:\", this.playerRegisteredEvents.map(e => e.returnValues));\n    },\n\n    async fetchPlayerWaitingEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"PlayerWaiting\", {\n        fromBlock,\n      });\n      this.playerWaitingEvents = events;\n      console.log(\"playerWaitingEvents:\", this.playerWaitingEvents.map(e => e.returnValues));\n    },\n\n    async fetchPlayersMatchedEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"PlayersMatched\", {\n        fromBlock,\n      });\n      this.playersMatchedEvents = events;\n      console.log(\"playersMatchedEvents:\", this.playersMatchedEvents.map(e => e.returnValues));\n    },\n\n    async fetchPlayersMoveCommittedEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"MoveCommitted\", {\n        fromBlock,\n      });\n      this.moveCommittedEvents = events;\n      console.log(\"moveCommittedEvents:\", this.moveCommittedEvents.map(e => e.returnValues));\n    },\n\n    async fetchMoveRevealedEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"MoveRevealed\", {\n        fromBlock,\n      });\n      this.moveRevealedEvents = events;\n      console.log(\"moveRevealedEvents:\", this.moveRevealedEvents.map(e => e.returnValues));\n    },\n\n    async fetchNewRoundEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"NewRound\", {\n        fromBlock,\n      });\n      this.newRoundEvents = events;\n      console.log(\"newRoundEvents:\", this.newRoundEvents.map(e => e.returnValues));\n    },\n\n    async fetchGameOutcomeEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"GameOutcome\", {\n        fromBlock,\n      });\n      this.gameOutcomeEvents = events;\n      console.log(\"gameOutcomeEvents:\", this.gameOutcomeEvents.map(e => e.returnValues));\n    },\n\n    async fetchPlayerCancelledEvents(fromBlock) {\n      const contract = await this.getContract();\n      const events = await contract.getPastEvents(\"PlayerCancelled\", {\n        fromBlock,\n      });\n      this.playerCancelledEvents = events;\n      console.log(\"playerCancelledEvents:\", this.playerCancelledEvents.map(e => e.returnValues));\n    },\n\n\n    \n    async processEvents() {\n      // Get the current user's address\n      const userAddress = await this.getAccount();\n\n      // Iterate over the playerRegisteredEvents\n      // Call handlePlayerRegisteredEvent for each event\n      for (const event of this.playerRegisteredEvents) {\n        this.handleRegisterEvent(event, userAddress);\n      }\n\n      // Iterate over the playerWaitingEvents\n      // Call handlePlayerWaitingEvent for each event\n      for (const event of this.playerWaitingEvents) {\n        this.handleWaitingEvent(event)\n      }\n\n      // Iterate over the playerCancelledEvents\n      // Call handlePlayerCancelledEvent for each event\n      for (const event of this.playerCancelledEvents) {\n        this.handlePlayerCancelledEvent(event)\n      }\n\n      // Iterate over the playersMatchedEvents\n      // Call handlePlayersMatchedEvent for each event\n      for (const event of this.playersMatchedEvents) {\n        this.handlePlayersMatchedEvent(event)\n      }\n\n      // Iterate over the moveCommittedEvents\n      // Call handleMoveSentEvent for each event\n      for (const event of this.moveCommittedEvents) {\n        this.handleMoveSentEvent(event)\n      }\n\n      // Iterate over the moveRevealedEvents\n      // Call handleMoveRevealedEvent for each event\n      for (const event of this.moveRevealedEvents) {\n        this.handleRevealedEvent(event)\n      }\n\n      // Iterate over the newRoundEvents\n      // Call handleNewRoundEvent for each event\n      for (const event of this.newRoundEvents) {\n        this.handleNewRoundEvent(event)\n      }\n\n      // Iterate over the gameOutcomeEvents\n      // Call handleGameOutcomeEvent for each event\n      for (const event of this.gameOutcomeEvents) {\n        this.handleOutcomeEvent(event)\n      }\n\n      \n    },\n\n    //checkAffiliateCode in ref query string\n    async checkAffililiateCode() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const affiliateCode = urlParams.get('ref');\n      if (affiliateCode) {\n        //set local storage affiliate code\n        //if there is no affiliate code in local storage\n        localStorage.setItem(\"affiliateCode\", affiliateCode)\n\n        \n      }\n      //set the affiliate address defined in the affiliate contract\n      this.affiliateOfUser = await this.affiliateContract.methods.getAffiliateOfConsumer(this.activeAccount).call();\n\n      console.log(\"affiliate of user\", this.affiliateOfUser)\n\n    },\n\n    async checkJoiningPassword() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const joiningPassword = urlParams.get('game');\n      const betAmount = urlParams.get('bet');\n\n      if(joiningPassword && !this.isInGame && !this.isJoiningGame && betAmount) {\n        await this.joinPasswordMatch(joiningPassword, betAmount);\n      }\n      \n    },\n\n    async fetchPastGames() {\n      const fromBlock = 0;\n\n      await this.fetchPlayerRegisteredEvents(fromBlock);\n      await this.fetchPlayerWaitingEvents(fromBlock);\n      await this.fetchPlayersMatchedEvents(fromBlock);\n      await this.fetchPlayersMoveCommittedEvents(fromBlock);\n      await this.fetchMoveRevealedEvents(fromBlock);\n      await this.fetchNewRoundEvents(fromBlock);\n      await this.fetchGameOutcomeEvents(fromBlock);\n      await this.fetchPlayerCancelledEvents(fromBlock);\n\n\n      this.processEvents();\n    },\n  },\n};\n</script>\n","import type { SafeEventEmitterProvider } from \"@web3auth/base\";\nimport Web3 from \"web3\";\n\nexport default class EthereumRpc {\n  private provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  async getChainId(): Promise<string> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get the connected Chain's ID\n      const chainId = await web3.eth.getChainId();\n\n      return chainId.toString();\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async getAccounts(): Promise<any> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const address = await web3.eth.getAccounts();\n\n      return address;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async getBalance(): Promise<string> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const address = (await web3.eth.getAccounts())[0];\n\n      // Get user's balance in ether\n      const balance = web3.utils.fromWei(\n        await web3.eth.getBalance(address) // Balance is in wei\n      );\n\n      return balance;\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async sendTransaction(): Promise<any> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const fromAddress = (await web3.eth.getAccounts())[0];\n\n      const destination = fromAddress;\n\n      const amount = web3.utils.toWei(\"0.001\"); // Convert 1 ether to wei\n\n      // Submit transaction to the blockchain and wait for it to be mined\n      const receipt = await web3.eth.sendTransaction({\n        from: fromAddress,\n        to: destination,\n        value: amount,\n        maxPriorityFeePerGas: \"5000000\", // Max priority fee per gas\n        maxFeePerGas: \"6000000\", // Max fee per gas\n      });\n\n      return receipt;\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async signMessage() {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const fromAddress = (await web3.eth.getAccounts())[0];\n\n      const originalMessage = \"YOUR_MESSAGE\";\n\n      // Sign the message\n      const signedMessage = await web3.eth.personal.sign(\n        originalMessage,\n        fromAddress,\n        \"test password!\" // configure your own password here.\n      );\n\n      return signedMessage;\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async getPrivateKey(): Promise<any> {\n    try {\n      const privateKey = await this.provider.request({\n        method: \"eth_private_key\",\n      });\n\n      return privateKey;\n    } catch (error) {\n      return error as string;\n    }\n  }\n}\n","export const Moves = {\n    None: 0,\n    Rock: 1,\n    Paper: 2,\n    Scissors: 3,\n    LoadingMark: 4,\n    CheckMark: 5,\n};\n  \nexport const Outcomes = {\n    None: 0,\n    PlayerA: 1,\n    PlayerB: 2,\n    Draw: 3,\n};\n  \nexport const GameStates = {\n    Initial: 0, //\n    Registering: 1, //Searching for a match\n    Waiting: 2, //Waiting to be matched\n    Matched: 3, //Matched with another player\n    Sending: 4, //Sending move\n    Sent: 5, //Sent move\n    Revealing: 6, //Revealing move to opponent\n    Revealed: 7, //Revealed move to opponent\n    Finished: 8, //Both players have revealed their moves. Game over\n};","export default `\n<svg fill=\"#000000\" width=\"100%\" height=\"100%\" viewBox=\"0 0 256 256\" id=\"Flat\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M200,76H188V64a35.9767,35.9767,0,0,0-60-26.804A35.96779,35.96779,0,0,0,69.26855,54.54492,35.97777,35.97777,0,0,0,20,88v40a108,108,0,0,0,216,0V112A36.04061,36.04061,0,0,0,200,76ZM152,52a12.01343,12.01343,0,0,1,12,12V76H140V64A12.01343,12.01343,0,0,1,152,52ZM92,64a12,12,0,0,1,24,0v40a12,12,0,0,1-24,0V64ZM44,88a12,12,0,0,1,24,0v16a12,12,0,0,1-24,0Zm168,40A84.003,84.003,0,0,1,44.61035,138.15381,35.95752,35.95752,0,0,0,80,130.804a35.90058,35.90058,0,0,0,43.6499,3.33715,36.31106,36.31106,0,0,0,6.3833,6.36231A51.8053,51.8053,0,0,0,116,176a12,12,0,0,0,24,0,28.03146,28.03146,0,0,1,28-28,12,12,0,0,0,0-24H152a12.01343,12.01343,0,0,1-12-12V100h60a12.01343,12.01343,0,0,1,12,12Z\"/>\n</svg>`","export default `\n<svg fill=\"#000000\" width=\"100%\" height=\"100%\" viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 25.1289 53.5117 C 33.3789 53.5117 39.1680 49.0352 42.2851 40.2461 L 46.4102 28.6445 C 47.4414 25.7149 46.5039 23.3008 44.0664 22.4102 C 41.8867 21.6133 39.7305 22.5508 38.6992 24.9649 L 37.1758 28.7149 C 37.1289 28.8086 37.0586 28.8789 36.9649 28.8789 C 36.8476 28.8789 36.8008 28.7852 36.8008 28.6680 L 36.8008 9.8711 C 36.8008 7.1289 35.0898 5.4180 32.4649 5.4180 C 31.5039 5.4180 30.6367 5.7461 29.9805 6.3555 C 29.6758 3.9649 28.1289 2.4883 25.8086 2.4883 C 23.5351 2.4883 21.9414 4.0117 21.5898 6.3086 C 21.0039 5.7227 20.1602 5.4180 19.3164 5.4180 C 16.8789 5.4180 15.2617 7.1055 15.2617 9.7071 L 15.2617 12.3086 C 14.6289 11.6524 13.6914 11.3008 12.6836 11.3008 C 10.2461 11.3008 8.5586 13.1055 8.5586 15.7305 L 8.5586 35.8633 C 8.5586 46.8320 15.2149 53.5117 25.1289 53.5117 Z M 25.0117 50.2539 C 16.7149 50.2539 11.6524 44.9336 11.6524 35.4883 L 11.6524 16.0586 C 11.6524 15.0742 12.2851 14.3711 13.2695 14.3711 C 14.2305 14.3711 14.9336 15.0742 14.9336 16.0586 L 14.9336 28.0352 C 14.9336 28.9024 15.6367 29.4883 16.3867 29.4883 C 17.1836 29.4883 17.9102 28.9024 17.9102 28.0352 L 17.9102 10.1289 C 17.9102 9.1211 18.5430 8.4414 19.5039 8.4414 C 20.4883 8.4414 21.1680 9.1211 21.1680 10.1289 L 21.1680 26.8398 C 21.1680 27.7071 21.8711 28.2930 22.6445 28.2930 C 23.4414 28.2930 24.1680 27.7071 24.1680 26.8398 L 24.1680 7.2227 C 24.1680 6.2383 24.8242 5.5117 25.8086 5.5117 C 26.7461 5.5117 27.4258 6.2383 27.4258 7.2227 L 27.4258 26.8398 C 27.4258 27.6602 28.0820 28.2930 28.9024 28.2930 C 29.6992 28.2930 30.4024 27.6602 30.4024 26.8398 L 30.4024 10.1289 C 30.4024 9.1211 31.0820 8.4414 32.0430 8.4414 C 33.0273 8.4414 33.6836 9.1211 33.6836 10.1289 L 33.6836 33.1914 C 33.6836 34.2695 34.3633 35.0430 35.3476 35.0430 C 36.1914 35.0430 36.8945 34.6680 37.4336 33.4961 L 40.6211 26.3711 C 41.0430 25.3633 41.8867 24.8476 42.7539 25.1758 C 43.6914 25.5508 44.0195 26.4414 43.5742 27.6602 L 39.4258 39.2383 C 36.5664 47.2305 31.5508 50.2539 25.0117 50.2539 Z\"/></svg>\n`","export default `\n<svg fill=\"#000000\" width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 15 2 C 13.355469 2 12 3.355469 12 5 L 12 6.53125 L 11.875 6.125 C 11.398438 4.550781 9.699219 3.648438 8.125 4.125 C 6.550781 4.601563 5.648438 6.300781 6.125 7.875 L 8.71875 16.3125 C 8.53125 16.386719 8.328125 16.472656 8.125 16.59375 C 7.289063 17.09375 6.34375 18.105469 6.0625 19.71875 C 5.851563 20.914063 6.082031 21.964844 6.25 22.53125 C 6.25 22.542969 6.25 22.550781 6.25 22.5625 L 7.03125 25.0625 C 7.933594 27.996094 10.652344 30 13.71875 30 L 19 30 C 22.855469 30 26 26.855469 26 23 L 26 13.09375 C 26 13.050781 26 13.011719 26 12.96875 C 26 12.949219 26 12.925781 26 12.90625 C 26 12.894531 26 12.886719 26 12.875 C 25.992188 12.84375 25.980469 12.8125 25.96875 12.78125 C 25.878906 11.679688 25.210938 10.652344 24.125 10.21875 C 23.371094 9.917969 22.578125 9.960938 21.875 10.25 C 21.550781 9.636719 21.027344 9.117188 20.34375 8.84375 C 19.558594 8.53125 18.722656 8.582031 18 8.90625 L 18 5 C 18 3.355469 16.644531 2 15 2 Z M 15 4 C 15.566406 4 16 4.433594 16 5 L 16 11.59375 L 14.96875 14.21875 C 14.820313 14.589844 14.75 14.992188 14.75 15.375 L 10.65625 15.90625 L 8.0625 7.28125 C 7.898438 6.742188 8.179688 6.195313 8.71875 6.03125 C 9.257813 5.867188 9.804688 6.179688 9.96875 6.71875 L 12.03125 13.5625 L 13.15625 13.21875 L 14 13.21875 L 14 5 C 14 4.433594 14.433594 4 15 4 Z M 19.1875 10.625 C 19.316406 10.621094 19.464844 10.636719 19.59375 10.6875 C 20.117188 10.898438 20.367188 11.476563 20.15625 12 L 19.09375 14.65625 L 19.09375 14.6875 L 18.6875 15.71875 C 18.667969 15.773438 18.621094 15.796875 18.59375 15.84375 C 18.085938 15.449219 17.445313 15.195313 16.78125 15.1875 C 16.792969 15.113281 16.78125 15.042969 16.8125 14.96875 L 18.3125 11.25 C 18.46875 10.855469 18.800781 10.632813 19.1875 10.625 Z M 22.96875 12 C 23.101563 12 23.242188 12.011719 23.375 12.0625 C 23.769531 12.21875 23.992188 12.574219 24 12.96875 C 24 12.980469 24 12.988281 24 13 C 24 13.121094 23.984375 13.253906 23.9375 13.375 L 22.8125 16.15625 C 22.601563 16.679688 22.023438 16.929688 21.5 16.71875 C 20.976563 16.507813 20.757813 15.929688 20.96875 15.40625 L 22.03125 12.75 C 22.046875 12.710938 22.046875 12.664063 22.0625 12.625 C 22.167969 12.363281 22.359375 12.164063 22.59375 12.0625 C 22.710938 12.011719 22.835938 12 22.96875 12 Z M 16.5 17.15625 C 17.027344 17.03125 17.53125 17.347656 17.65625 17.875 C 17.734375 18.199219 17.691406 18.363281 17.59375 18.53125 C 17.496094 18.699219 17.289063 18.90625 16.84375 19.0625 L 12 20.3125 C 11.703125 20.390625 11.460938 20.601563 11.339844 20.878906 C 11.21875 21.160156 11.230469 21.480469 11.375 21.75 L 12.28125 23.40625 C 12.546875 23.890625 13.15625 24.066406 13.640625 23.796875 C 14.125 23.53125 14.300781 22.921875 14.03125 22.4375 L 13.75 21.9375 L 17.4375 20.96875 C 17.46875 20.960938 17.5 20.949219 17.53125 20.9375 C 18.304688 20.667969 18.925781 20.207031 19.3125 19.5625 C 19.628906 19.035156 19.75 18.421875 19.6875 17.8125 C 19.980469 18.128906 20.355469 18.390625 20.78125 18.5625 C 21.925781 19.019531 23.183594 18.730469 24 17.90625 L 24 23 C 24 25.773438 21.773438 28 19 28 L 13.71875 28 C 11.519531 28 9.585938 26.570313 8.9375 24.46875 L 8.1875 21.96875 C 8.105469 21.699219 7.941406 20.753906 8.0625 20.0625 C 8.25 18.988281 8.71875 18.574219 9.15625 18.3125 C 9.59375 18.050781 9.90625 18.03125 9.90625 18.03125 C 9.925781 18.03125 9.949219 18.03125 9.96875 18.03125 L 16.40625 17.1875 C 16.4375 17.179688 16.46875 17.167969 16.5 17.15625 Z\"/></svg>\n`","<script setup>\nimport { Moves } from '../types';\n</script>\n<template>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-if=\"move == Moves.Rock\" class=\"Rock\"></div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.Paper\" class=\"Paper\"></div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.Scissors\" class=\"Scissors\"></div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.LoadingMark\" class=\"Rock\" >\n  </div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.CheckMark\" class=\"Rock\" >\n  </div>\n</template>\n\n<style>\n  svg  {\n    width: inherit;\n    height: inherit;\n  }\n\n  .small {\n    width: 32px;\n    height: 32px;\n  }\n\n  .normal {\n    cursor: pointer;\n    width: 160px;\n    height: 160px;\n  }\n\n  .normal:hover {\n    cursor: pointer;\n    width: 200px;\n    height: 200px;\n  }\n\n  .large {\n    width: 240px;\n    height: 240px;\n  }\n</style>\n\n<script>\nimport Rock from '../assets/Rock.js'\nimport Paper from '../assets/Paper.js'\nimport Scissors from '../assets/Scissors.js'\nimport { onMounted } from 'vue';\n\nexport default {\n  data() {\n    return {\n      Rock,\n      Paper,\n      Scissors\n    }\n  },\n  props: {\n    move: Number,\n    isSmall: {\n      default: false\n    },\n    isNormal: {\n      default: false\n    },\n  },\n\n  //output the value of move\n  created(){\n    console.log(this.move)\n  }\n}\n</script>\n\n  ","import script from \"./GameMove.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GameMove.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GameMove.vue?vue&type=style&index=0&id=00601e1c&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div style=\"margin: 120px 80px;\">\n      <table>\n        <thead>\n        \n          <tr>\n            <th><div class=\"table-header-item\"><div class=\"star-symbol-table\"></div><p>Score</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"clock-symbol-table\"></div><p>Time</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user1-symbol-table\"></div><p>Player 1</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user2-symbol-table\"></div><p>Player 2</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"prize-symbol-table\"></div><p>Prize</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"rounds-symbol-table\"></div><p>Rounds</p></div></th>\n            <th>\n                <div class=\"tabs-container\">\n                    <div class=\"tabs\">\n                        <button \n                          v-for=\"(tab, index) in tabs\" \n                          :key=\"index\"\n                          @click=\"selectedTab = tab\"\n                          :class=\"{ active: selectedTab === tab }\"\n                        >\n                          {{ tab }}\n                        </button>\n                      </div>\n                    </div>\n            </th>\n                \n            \n            \n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in selectedData\" :key=\"index\">\n            <td class=\"score\">{{ item.points[item.playerA] }} : {{ item.points[item.playerB] ?? 0 }}</td>\n            <td class=\"time\">{{ item.time }}</td>\n            <td class=\"player\">\n                <div>\n                    <div class=\"profile-mini\"></div>\n                    <p>{{  item.playerA?.slice(0, 6) + \"...\" + item.playerA?.slice(-4) }}</p>\n                </div>\n            </td>\n\n            <td class=\"player\">\n                <div>\n                    <div class=\"profile-mini\"></div>\n                    <p>{{ item.playerB?.slice(0, 6) + \"...\" + item.playerB?.slice(-4) }}</p>\n                </div>\n            </td>\n            <td class=\"prize\">${{ item.bet }}</td>\n            <td class=\"round\" colspan=\"2\">\n              <ul class=\"rounds-container\">\n                <div v-for=\"(round, roundIndex) in item.moves\" :key=\"roundIndex\" class=\"rounds-list\">\n                  <game-move :isSmall=\"true\" :move=\"round[item.playerA]\"></game-move> : <game-move :isSmall=\"true\" :move=\"round[item.playerB]\"></game-move>\n                </div>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\nimport GameMove from './GameMove.vue'\n  export default {\n    components: {\n        GameMove\n    },\n    data() {\n      return {\n        tabs: ['Completed', 'Active', 'Pending'],\n        selectedTab: 'Completed',\n      }\n    },\n    props: {\n        activeData: {\n      type: Array,\n      default: () => Array(10).fill({\n        score: 'Score',\n        time: new Date().toLocaleString(),\n        player1: 'Player 1',\n        player2: 'Player 2',\n        prize: 'Prize',\n        rounds: ['Round 1', 'Round 2']\n      })\n    },\n    completedData: {\n      type: Array,\n      default: () => Array(10).fill({\n        score: 'Score',\n        time: new Date().toLocaleString(),\n        player1: 'Player 1',\n        player2: 'Player 2',\n        prize: 'Completed',\n        rounds: ['Round 1', 'Round 2']\n      })\n    },\n    pendingData: {\n      type: Array,\n      default: () => Array(10).fill({\n        score: 'Score',\n        time: new Date().toLocaleString(),\n        player1: 'Player 1',\n        player2: 'Player 2',\n        prize: 'Pending',\n        rounds: ['Round 1', 'Round 2']\n      })\n    }\n    },\n    computed: {\n      selectedData() {\n        console.log(\"selected tab\", this.selectedTab)\n        switch(this.selectedTab) {\n          case 'Active':\n          console.log(\"active data\", this.activeData)\n            return this.activeData;\n          case 'Completed':\n            console.log(\"completed data\", this.completedData)\n            return this.completedData;\n          case 'Pending':\n            console.log(\"pending data\", this.pendingData)\n            return this.pendingData;\n          default:\n            return [];\n        }\n      }\n    },\n    methods:{\n        truncateAddress(address) {\n      return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n    },\n    }\n  }\n  </script>\n  \n  <style scoped>\n \n  \n  \n\n  \n  .tabs {\n\n  }\n  \n  .tabs button {\n\n  }\n  \n  .tabs .active {\n    font-weight: bold;\n  }\n  </style>\n  ","import { render } from \"./GameList.vue?vue&type=template&id=7b042650&scoped=true\"\nimport script from \"./GameList.vue?vue&type=script&lang=js\"\nexport * from \"./GameList.vue?vue&type=script&lang=js\"\n\nimport \"./GameList.vue?vue&type=style&index=0&id=7b042650&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7b042650\"]])\n\nexport default __exports__","import { render } from \"./Game.vue?vue&type=template&id=618d2e0a\"\nimport script from \"./Game.vue?vue&type=script&lang=js\"\nexport * from \"./Game.vue?vue&type=script&lang=js\"\n\nimport \"./Game.vue?vue&type=style&index=0&id=618d2e0a&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    \n      Staking screen\n\n      <div>\n        <div>Hands token balance : {{handsTokenBalance}}</div>\n\n        <div>Your staked amount : {{handsStakedBalance}}</div>\n        <div>Share of total hands staked : {{(handsStakedBalance / totalHandsStakedBalance) * 100}}%</div>\n        <div>Your claimable ETH for staking : {{claimableEthForStaking}}</div>\n        <div>Protocol fee revenue : {{protocolFeeRevenue}}</div>\n        <div>Protocol affiliate revenue : {{protocolAffiliateRevenue}}</div>\n        <div>Total hands staked balance : {{totalHandsStakedBalance}}</div>\n\n        <div>Your onboarded addresses : \n          <div v-for=\"address in onboardedAddresses\" :key=\"address\">\n            {{address}}\n          </div>\n        </div>\n        <div>Claimable Affiliate rewards : {{claimableEthForAffiliate}}</div>\n        <div>Your affiliate link : {{affiliateLink}}</div>\n      </div>\n\n      <button @click=\"stake\">Stake 10 HANDS</button>\n      <button @click=\"unstake\">Unstake 10 HANDS</button>\n      <button @click=\"claim\">Claim Staking Rewards</button>\n      <button @click=\"claimAffiliateRewards\">Claim Affiliate Rewards</button>\n      <!-- <button @click=\"removeLiquidity\">Remove Liquidity 10 WETH - 10 HANDS</button> -->\n      <!-- <button @click=\"stakeLiquidity\">Stake Liquidity</button> -->\n      <!-- <button @click=\"stakeHands\">Stake 100 Hands</button> -->\n      <!-- <button @click=\"unstakeHands\">Unstake Hands</button> -->\n\n  </div>\n</template>\n  \n  \n<script>\n\n  import RPC from \"../web3RPC\";\n  \n  import GameMove from \"./GameMove.vue\";\n  import { Moves, Outcomes, GameStates } from \"../types\";\n  import Hands from \"../contracts/Hands.json\";\n  import Web3 from \"web3\";\n  import { sha256 } from \"js-sha256\";\n  \n  import mainContracts from \"../../../contracts/local-contracts.json\"\n  \n  //EXAMPLE Game.\n  // {\n  //   gameId: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   playerA: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   playerB: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   states: {}\n  \n  //   betAmount: 1,\n  //   moveA: 1,\n  //   moveB: 2,\n  //   outcome: 2, // 0 = draw, 1 = playerA wins, 2 = playerB wins\n  // }\n  \n  \n  function generateRandomString() {\n    return Math.random().toString(36).substring(2, 15);\n  }\n  \n  function calcWinner(moveA, moveB) {\n    if (moveA == moveB) {\n      return Outcomes.Draw;\n    }\n  \n    if (moveA == Moves.Rock) {\n      if (moveB == Moves.Paper) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  \n    if (moveA == Moves.Paper) {\n      if (moveB == Moves.Scissors) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  \n    if (moveA == Moves.Scissors) {\n      if (moveB == Moves.Rock) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  }\n  \n  export default {\n    components: {\n    },\n    props: {\n      provider: {\n        type: String,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        stakingContract: null,\n        handsTokenContract: null,\n        affiliateContract: null,\n\n        activeAccount: null,\n\n        handsTokenBalance: 0,\n\n        handsStakedBalance: 0,\n        totalHandsStakedBalance: 0,\n\n        claimableEthForStaking: 0,\n        claimableEthForAffiliate: 0,\n\n        affiliateLink: null,\n        onboardedAddresses: [],\n\n        protocolFeeRevenue: 0,\n\n        //userSharePerBlock: null,\n        totalStakedPerBlock: null,\n\n      };\n    },\n    computed: {\n        getActiveAccount() { return this.activeAccount?.toLowerCase()},\n        getWeb3() {return new Web3(this.provider);},\n    },\n    mounted() {\n      console.log(\"provider\", this.provider)\n      console.log(\"mainContracts\", mainContracts)\n      this.init();\n\n    },\n    watch:{\n    },\n    methods: {\n        async init(){\n            await this.setAccount();\n            await this.setContracts();\n            this.setHandsTokenBalance();\n            this.setHandsStakedBalance();\n            this.setTotalHandsStakedAmount();\n            this.setClaimableEthForStaking();\n            this.setClaimableEthForAffiliate();\n            this.setProtocolFeeRevenue();\n\n            // this.getWETHAddress();\n            // this.getToken0Address();\n            // this.getToken1Address();\n            // this.getReserve0();\n            // this.getReserve1();\n        },\n        async setAccount() {\n            const accounts = await this.getWeb3.eth.getAccounts();\n            console.log(\"accounts\", accounts);\n            this.activeAccount = accounts[0];\n        },\n        async setContracts() {\n\n\n          //Set staking contract\n          this.stakingContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.Staking,\n              mainContracts.deployedContracts.Staking\n          );\n\n          //Set HandsToken contract\n          this.handsTokenContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.HandsToken,\n              mainContracts.deployedContracts.HandsToken\n          );\n\n          //Set Affiliate contract\n          this.affiliateContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.Affiliate,\n              mainContracts.deployedContracts.Affiliate\n          );\n\n        },\n\n        async setHandsTokenBalance() {\n          if(!this.handsTokenContract) return 0;\n\n          const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n          this.handsTokenBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n            this.handsTokenBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setHandsStakedBalance(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n          this.handsStakedBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n            this.handsStakedBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setTotalHandsStakedAmount(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.viewTotalStaked().call();\n          this.totalHandsStakedBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.viewTotalStaked().call();\n            this.totalHandsStakedBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setClaimableEthForStaking(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n          this.claimableEthForStaking = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForStaking = balance / 10 ** 18;\n          }, 5000);\n        },\n        async setClaimableEthForAffiliate(){\n          if(!this.affiliateContract) return 0;\n\n          const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n          this.claimableEthForAffiliate = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForAffiliate = balance / 10 ** 18;\n          }, 5000);\n        },\n        async setOnboardedAddresses(){\n          if(!this.affiliateContract) return 0;\n\n          const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n          this.onboardedAddresses = balance;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n            this.onboardedAddresses = balance;\n          }, 5000);\n        },\n\n        async setProtocolFeeRevenue(){\n          //Get the balance of the Bank contract\n          const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n          this.protocolFeeRevenue = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n            this.protocolFeeRevenue = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        // async setUserSharePerBlock(){\n        //   if(!this.stakingContract) return 0;\n\n          \n        //   const currentBlock = await this.getWeb3.eth.getBlockNumber();\n        //   this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n        //   console.log(userSharesPerBlock);\n\n        //   //Poll for balance every 5 seconds\n        //   setInterval(async () => {\n        //     const currentBlock = await this.getWeb3.eth.getBlockNumber();\n        //     this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n        //     console.log(userSharesPerBlock);\n        //   }, 5000);\n        // },\n        \n        \n\n \n        \n        async stake() {\n          // Call the stake method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n            const gasLimit = 30000000;\n\n            // give allowance to staking contract\n            const tx1 = await this.handsTokenContract.methods.approve(\n              mainContracts.deployedContracts.Staking,\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n            \n\n            const tx = await this.stakingContract.methods.stake(\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n            \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n            \n            // Transaction was successful if we made it here\n            console.log('Staked', tx);\n            return tx;\n          } catch (error) {\n            // Log more detailed information about the error\n            console.error('Error staking. Message:', error.message);\n            \n            // Log error reason if available. This can be the error message from a require statement in a smart contract\n            if (error.reason) {\n              console.error('Error reason:', error.reason);\n            }\n            \n            // Log the error stack trace for debugging\n            console.error('Error stack trace:', error.stack);\n            \n            return error;\n          }\n        },\n\n\n        async unstake() {\n          // Call the unstake method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.stakingContract.methods.unstake(\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Unstaked', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error unstaking', error);\n            return error;\n          }\n        },\n\n        async claim() {\n          // Call the claim method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.stakingContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Claimed', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error claiming', error);\n            return error;\n          }\n        },\n\n        async claimAffiliateRewards() {\n          // Call the claim method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.affiliateContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Claimed', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error claiming', error);\n            return error;\n          }\n        },\n\n        async registerAsConsumer() {\n          // Use an empty bytes data\n          const data = '0x';\n        \n        \n          // No callback\n          const callback = '0x0000000000000000000000000000000000000000';\n          const callbackData = '0x';\n        \n          // Call the addLiquidity method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"5\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.affiliateContract.methods.registerAsConsumer(\n              '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            \n        \n            // Transaction was successful if we made it here\n            console.log('Registered as consumer', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error registering as a consumer:', error);\n            throw error;\n          }\n        },\n\n\n\n\n        \n    \n        async getBlockNumber() {\n            return await this.getWeb3.eth.getBlockNumber();\n        },  \n        \n    },\n  };\n  </script>\n  ","import { render } from \"./Staking.vue?vue&type=template&id=698d1e64\"\nimport script from \"./Staking.vue?vue&type=script&lang=js\"\nexport * from \"./Staking.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport Game from \"./components/Game.vue\";\nimport Staking from \"./components/Staking.vue\";\nimport Web3 from \"web3\";\n\n\nimport Transak from '@biconomy/transak';\n\n\nimport { ref, onMounted, watch } from \"vue\";\nimport { Web3Auth } from \"@web3auth/modal\";\nimport { CHAIN_NAMESPACES, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport RPC from \"./web3RPC\";\n\n// Plugins\nimport { TorusWalletConnectorPlugin } from \"@web3auth/torus-wallet-connector-plugin\";\n\n// Adapters\nimport { WalletConnectV1Adapter } from \"@web3auth/wallet-connect-v1-adapter\";\nimport { MetamaskAdapter } from \"@web3auth/metamask-adapter\";\nimport { TorusWalletAdapter } from \"@web3auth/torus-evm-adapter\";\n\nconst CHAIN_ID_MAINNET = \"0x1\"\nconst CHAIN_ID_TESTNET = \"0x118\"\nconst CHAIN_ID_LOCALHOST = \"0x10e\"\nconst CHAIN_ID_LOCALHOST_HARDHAT = \"0x7A69\"\n\nconst RPC_URLS = {\n  [CHAIN_ID_MAINNET]: \"https://rpc.ankr.com/eth\",\n  [CHAIN_ID_TESTNET]: \"https://testnet.era.zksync.dev\",\n  [CHAIN_ID_LOCALHOST]: \"http://localhost:3050/\",\n  [CHAIN_ID_LOCALHOST_HARDHAT]: \"http://localhost:8545\",\n\n};\n\nconst CURRENT_CHAIN_ID = CHAIN_ID_LOCALHOST_HARDHAT;\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Home\",\n  props: {\n    msg: String,\n  },\n  components: {\n    Game,\n    Staking,\n  },\n  setup() {\n    const staking = ref<boolean>(false);\n    const loggedin = ref<boolean>(false);\n    const loading = ref<boolean>(false);\n    const loginButtonStatus = ref<string>(\"\");\n    const connecting = ref<boolean>(false);\n    const rampInstantSdk = ref<any>(null);\n\n    const activeAccount = ref<string>(\"\");\n    const balance = ref<string>(\"0\");\n\n    const provider = ref<SafeEventEmitterProvider | any>(false);\n    const clientId =\n      \"BPskEPAhlqjgenfk3gNE3CM09cpmINBS5wHflAZavWwWp1B4oWWWypVCHRbHpbLYeKPjkPXYNuNhEPXAJfkYijw\"; // get from https://dashboard.web3auth.io\n\n      \n\n    const web3auth = new Web3Auth({\n      clientId,\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: CURRENT_CHAIN_ID,\n        rpcTarget: RPC_URLS[CURRENT_CHAIN_ID] // This is the public RPC we have added, please pass on your own endpoint while creating an app\n      },\n      uiConfig: {\n        defaultLanguage: \"en\",\n      },\n      web3AuthNetwork: \"mainnet\",\n      //provider: new web3.providers.WebsocketProvider(\"ws://localhost:8545\"),\n    });\n\n    console.log(\"web3auth provider\", web3auth.provider);\n\n    // plugins and adapters are optional and can be added as per your requirement\n    // read more about plugins here: https://web3auth.io/docs/sdk/web/plugins/\n\n    // adding torus wallet connector plugin\n\n    const torusPlugin = new TorusWalletConnectorPlugin({\n      torusWalletOpts: {},\n      walletInitOptions: {\n        whiteLabel: {\n          theme: { isDark: true, colors: { primary: \"#00a8ff\" } },\n          logoDark: \"https://web3auth.io/images/w3a-L-Favicon-1.svg\",\n          logoLight: \"https://web3auth.io/images/w3a-D-Favicon-1.svg\",\n        },\n        useWalletConnect: true,\n        enableLogging: true,\n      },\n    });\n\n    // read more about adapters here: https://web3auth.io/docs/sdk/web/adapters/\n\n    // adding wallet connect v1 adapter\n\n    const walletConnectV1Adapter = new WalletConnectV1Adapter({\n      adapterSettings: {\n        bridge: \"https://bridge.walletconnect.org\",\n      },\n      clientId,\n    });\n\n    web3auth.configureAdapter(walletConnectV1Adapter);\n\n    // adding metamask adapter\n\n    const metamaskAdapter = new MetamaskAdapter({\n      clientId,\n      sessionTime: 3600, // 1 hour in seconds\n      web3AuthNetwork: \"testnet\",\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: CURRENT_CHAIN_ID,\n        rpcTarget: RPC_URLS[CURRENT_CHAIN_ID]   \n      },\n    });\n    // we can change the above settings using this function\n    metamaskAdapter.setAdapterSettings({\n      sessionTime: 86400, // 1 day in seconds\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: CURRENT_CHAIN_ID,\n        rpcTarget: RPC_URLS[CURRENT_CHAIN_ID],\n        blockExplorer: \"https://rinkeby.etherscan.io/\",\n\n      },\n      web3AuthNetwork: \"testnet\",\n    });\n\n    // it will add/update  the metamask adapter in to web3auth class\n    web3auth.configureAdapter(metamaskAdapter);\n\n    const torusWalletAdapter = new TorusWalletAdapter({\n      clientId,\n    });\n\n    // it will add/update  the torus-evm adapter in to web3auth class\n    web3auth.configureAdapter(torusWalletAdapter);\n\n\n    onMounted(async () => {\n      try {\n        loading.value = true;\n        loggedin.value = false;\n        await web3auth.initModal();\n        const userInfo: any = await web3auth.getUserInfo();\n        await web3auth.addPlugin(torusPlugin);\n        if (web3auth.provider) {\n          provider.value = web3auth.provider;\n          console.log(\"userInfo\", userInfo)\n          //const initVal = await torusPlugin.initWithProvider(provider.value, userInfo);\n          loggedin.value = true;\n          await torusPlugin.connect()\n\n        }\n\n        console.log(\"provider\", provider.value);\n      } catch (error) {\n        uiConsole(\"error\", error);\n      } finally {\n        loading.value = false;\n      }\n    });\n    const fetchBalance = async () => {\n      if (!provider.value || !activeAccount.value) {\n        return;\n      }\n\n      const rpc = new RPC(provider.value);\n      const balanceEth = await rpc.getBalance();\n\n      console.log(\"balanceEth\", balanceEth);\n\n      balance.value = balanceEth;\n    };\n\n    const pollBalance = async () => {\n      await fetchBalance();\n      setTimeout(pollBalance, 5000); // Poll every 5000 milliseconds (5 seconds)\n    };\n\n\n    \nwatch(\n  provider,\n  (newValue, oldValue) => {\n    if (newValue) {\n      // The provider value has changed, start polling the balance\n      pollBalance();\n      getAccounts();\n    }\n  },\n  { immediate: true } // This option triggers the watch callback immediately with the current value\n);\n\n    const login = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      provider.value = await web3auth.connect();\n      console.log(\"provider\", provider);\n      const userInfo: any = await web3auth.getUserInfo();\n      //await torusPlugin.initWithProvider(provider, userInfo);\n      \n      loggedin.value = true;\n      //await torusPlugin.connect()\n      uiConsole(\"Logged in Successfully!\");\n    };    \n\n    const buyEth = async () => {\n      console.log(\"torusPlugin\", torusPlugin);\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      // await torusPlugin.initiateTopup(\"moonpay\", {\n      //   selectedAddress: activeAccount.value, // User's wallet address\n      //   selectedCurrency: \"USD\", // Fiat currency\n      //   fiatValue: 100, // Fiat Value\n      //   selectedCryptoCurrency: \"ETH\", // Crypto currency\n      //   chainNetwork: \"mainnet\", // Blockchain network\n      // });\n\n      const userInfo: any = await web3auth.getUserInfo();\n\n      const transak = new Transak('PRODUCTION', {\n\n        walletAddress: activeAccount.value,\n        userData: {\n          firstName: userInfo.name || '',\n          email: userInfo.email || '',\n        },\n        //fiatCurrency: 'USD', // INR\n        //defaultCryptoAmount: 100,\n        //cryptoCurrencyCode: 'USDC',\n        //cryptoAmount: 1000,\n        network: 'arbitrum',\n        exchangeScreenTitle: 'Buy ETH for your Handsy.io account',\n\n    }); \n    transak.init();\n    }\n\n\n    const authenticateUser = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      const idToken = await web3auth.authenticateUser();\n      uiConsole(idToken);\n    };\n\n    const getUserInfo = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      const user = await web3auth.getUserInfo();\n      uiConsole(user);\n    };\n\n    const logout = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      await web3auth.logout();\n      provider.value = null;\n      loggedin.value = false;\n    };\n\n    const getChainId = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(provider.value);\n      const chainId = await rpc.getChainId();\n      uiConsole(chainId);\n    };\n\n    const addChain = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const newChain = {\n        chainId: \"0x5\",\n        displayName: \"Goerli\",\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        tickerName: \"Goerli\",\n        ticker: \"ETH\",\n        decimals: 18,\n        rpcTarget: \"https://rpc.ankr.com/eth_goerli\",\n        blockExplorer: \"https://goerli.etherscan.io\",\n      };\n      await web3auth?.addChain(newChain);\n      uiConsole(\"New Chain Added\");\n    };\n\n    const switchChain = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const newChain = {\n        chainId: \"0x5\",\n        displayName: \"Goerli\",\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        tickerName: \"Goerli\",\n        ticker: \"ETH\",\n        decimals: 18,\n        rpcTarget: \"https://rpc.ankr.com/eth_goerli\",\n        blockExplorer: \"https://goerli.etherscan.io\",\n      };\n      await web3auth?.switchChain({ chainId: \"0x5\" });\n      uiConsole(\"Chain Switched\");\n    };\n\n\n    const getAccounts = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(provider.value);\n      const address = await rpc.getAccounts()\n      activeAccount.value = address[0]\n      uiConsole(address);\n    };\n\n    const getBalance = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(provider.value);\n      const balance = await rpc.getBalance();\n      uiConsole(balance);\n    };\n\n    const sendTransaction = async () => {\n      if (!provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(provider.value);\n      const receipt = await rpc.sendTransaction();\n      uiConsole(receipt);\n    };\n\n    const signMessage = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(provider.value);\n      const signedMessage = await rpc.signMessage();\n      uiConsole(signedMessage);\n    };\n\n    const getPrivateKey = async () => {\n      if (!provider.value) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(provider.value);\n      const privateKey = await rpc.getPrivateKey();\n      uiConsole(privateKey);\n    };\n\n    function uiConsole(...args: any[]): void {\n      const el = document.querySelector(\"#console>p\");\n      if (el) {\n        el.innerHTML = JSON.stringify(args || {}, null, 2);\n      }\n    }\n\n    function setStakingTrue () {\n      staking.value = true\n    }\n\n    function setStakingFalse () {\n      staking.value = false\n    }\n\n    return {\n      staking,\n      loggedin,\n      loading,\n      loginButtonStatus,\n      connecting,\n      provider,\n      balance,\n      activeAccount,\n      getWeb3: \n      web3auth,\n      login,\n      buyEth,\n      authenticateUser,\n      logout,\n      getUserInfo,\n      getChainId,\n      addChain,\n      switchChain,\n      getAccounts,\n      getBalance,\n      sendTransaction,\n      signMessage,\n      getPrivateKey,\n    };\n  },\n};\n","import { render } from \"./Home.vue?vue&type=template&id=bc20cb24&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue';\nimport Home from './Home.vue';\n\nexport default defineComponent({\n\tname: 'App',\n\tcomponents: {\n\t\tHome,\n\t},\n});\n","import { render } from \"./App.vue?vue&type=template&id=441334a8&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"233\":\"35ef0508\",\"314\":\"5f2ba86b\",\"348\":\"5bba0d0f\",\"462\":\"1067d10c\",\"503\":\"58f29bc1\",\"537\":\"3d36475f\",\"550\":\"ad042737\",\"737\":\"f3aeac3f\",\"796\":\"a71b3468\",\"845\":\"39f04d67\",\"901\":\"2908db4c\",\"951\":\"c044102c\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"handsy:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhandsy\"] = self[\"webpackChunkhandsy\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], () => (__webpack_require__(25019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_Home","_resolveComponent","_openBlock","_createBlock","msg","_hoisted_1","_createElementVNode","class","_hoisted_2","key","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_Game","_component_Staking","_createElementBlock","_Fragment","loggedin","_createCommentVNode","onClick","args","login","style","staking","provider","balance","_hoisted_41","_hoisted_42","isInGame","isWaiting","_toDisplayString","_this$balance","toString","split","_this$balance$toStrin","_this$balance2","_this$balance2$toStri","substring","_hoisted_7","_hoisted_8","_hoisted_9","truncateAddress","this","activeAccount","_hoisted_10","_hoisted_11","currentRound","currentWager","roundStateString","_hoisted_12","shouldMove","_hoisted_13","_hoisted_14","_normalizeClass","yourCurrentPoints","_createVNode","_component_GameMove","move","selectedMove","_hoisted_15","_hoisted_16","_hoisted_17","yourAddress","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_normalizeStyle","isRock","onRock","isNormal","isPaper","onPaper","isScissors","onScissors","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_this$selectedBet","selectedBet","_hoisted_30","_this$selectedBet$toS","_this$selectedBet2","_this$selectedBet2$to","_hoisted_31","_hoisted_32","opponentCurrentPoints","bothRevealed","opponentMove","isOpponentMoveSent","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_38","_hoisted_37","_hoisted_39","_hoisted_40","isRegistering","buyEth","registerGame","_hoisted_44","value","onInput","event","target","_withModifiers","_renderList","wagerSteps","step","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","cancelGame","playWithFriend","copyPasswordGameLink","_component_game_list","activeData","activeGames","completedData","completedGames","pendingData","pendingGames","EthereumRpc","constructor","_defineProperty","async","web3","Web3","chainId","eth","getChainId","error","address","getAccounts","utils","fromWei","getBalance","fromAddress","destination","amount","toWei","receipt","sendTransaction","from","to","maxPriorityFeePerGas","maxFeePerGas","originalMessage","signedMessage","personal","sign","privateKey","request","method","Moves","None","Rock","Paper","Scissors","LoadingMark","CheckMark","Outcomes","PlayerA","PlayerB","Draw","GameStates","Initial","Registering","Waiting","Matched","Sending","Sent","Revealing","Revealed","Finished","__default__","data","props","Number","isSmall","default","created","console","log","__exports__","colspan","tabs","tab","index","$event","selectedTab","active","selectedData","item","_item$points$item$pla","_item$playerA","_item$playerA2","_item$playerB","_item$playerB2","points","playerA","playerB","time","slice","bet","moves","round","roundIndex","_component_game_move","components","GameMove","type","Array","fill","score","Date","toLocaleString","player1","player2","prize","rounds","computed","methods","gameStateToString","state","CONTRACT_ADDRESS","mainContracts","CONTRACT_ABI","generateRandomString","Math","random","calcWinner","moveA","moveB","GameList","String","stripeClientSecret","initialized","games","lastBlockSearched","currentGameId","randomString","contractInstance","pastGames","playerRegisteredEvents","playerWaitingEvents","playersMatchedEvents","moveCommittedEvents","moveRevealedEvents","newRoundEvents","gameOutcomeEvents","playerCancelledEvents","sliderIndex","_lastGameId","rampSdk","affiliateContract","affiliateOfUser","getActiveAccount","_this$activeAccount","toLowerCase","getWeb3","gameState","_this$currentGameId","_this$currentGameId2","_this$games$states$cu","_this$currentGameId3","states","yourGameStateToString","isRevealing","isRevealed","isWinner","isLoser","isOpponentMoveRevealed","opponentState","isMoveSent","isGameFinished","_this$currentGameId4","_this$currentGameId5","getOpponentAccount","previousGame","Object","values","sort","a","b","gameId","find","game","outcome","previousGameWager","_this$previousGame$be","_this$previousGame","_this$games$this$curr","_this$games$this$curr2","previousGamePoints","_this$previousGame2","_this$previousGame$po","_this$previousGame3","previousGameOpponent","_this$previousGame4","_this$previousGame4$p","_this$previousGame5","_this$previousGame5$p","_this$getActiveAccoun","_this$games$this$curr3","_this$games$this$curr4","_this$getActiveAccoun2","_this$games$this$curr5","_this$games$this$curr6","_this$opponentAddress","opponentAddress","previousGameOpponentPoints","_this$previousGame$po2","_this$previousGame6","_this$previousGameOpp","wonLastGame","yourMove","_this$games$this$curr7","_this$games$this$curr8","_this$games$this$curr9","_this$games$this$curr10","_this$getActiveAccoun3","_this$opponentAddress2","_this$games$currentGa","_this$games$currentGa2","_this$games$currentGa3","_this$opponentAddress3","_this$games$round","_this$games","_this$currentGameId6","_this$games$currentGa4","_this$games$currentGa5","_this$games$currentGa6","opponentStateToString","isMoveSending","shouldReveal","shouldSetAffiliateCode","affiliateCode","localStorage","getItem","ethers","filter","fetchPastGames","subscribeToEvents","RampInstantSDK","lastSentMove","lastRandomString","lastBetAmount","indexOf","parseFloat","getAccount","checkAffililiateCode","checkJoiningPassword","watch","handler","newValue","oldValue","deep","revealMove","sendMove","buttonClicked","sliderValueChanged","togglePlayWithFriend","localStoragePlayWithFriend","setItem","fetch","headers","body","JSON","stringify","then","res","json","setClientSecret","client_secret","accounts","Contract","getBlockNumber","setContract","createGame","setLastGameId","parseInt","isNewestGameId","getGame","getGameCurrentRound","length","convertTimestampToTime","timestamp","date","hours","getHours","minutes","getMinutes","ampm","strTime","substr","userAddress","returnValues","playerAddress","block","getBlock","blockNumber","handleWaitingEvent","handlePlayersMatchedEvent","handleMoveSentEvent","handleRevealedEvent","handleNewRoundEvent","pointsA","pointsB","handleOutcomeEvent","handlePlayerCancelledEvent","contract","getContract","eventNames","eventHandlers","PlayerRegistered","handleRegisterEvent","PlayerWaiting","PlayersMatched","MoveCommitted","MoveRevealed","NewRound","GameOutcome","PlayerCancelled","pollingInterval","lastBlockChecked","setInterval","currentBlock","eventName","events","getPastEvents","fromBlock","toBlock","forEach","setTimeout","call","password","passwordHash","sha256","getPassword","getPasswordHash","playerGame","copyAffiliateLink","url","URL","window","location","href","searchParams","set","navigator","clipboard","writeText","alert","gasPrice","gasLimit","affiliateAddress","result","registerAsConsumer","send","createPasswordGame","_this$currentGameId7","_this$currentGameId8","_this$currentGameId9","betInWei","register","_this$currentGameId10","_this$currentGameId11","_this$currentGameId12","_this$currentGameId13","_this$currentGameId14","_this$currentGameId15","setPassword","createPasswordMatch","_this$currentGameId16","_this$currentGameId17","_this$currentGameId18","betAmount","_this$currentGameId19","_this$currentGameId20","_this$currentGameId21","joinPasswordMatch","_this$currentGameId22","_this$currentGameId23","_this$currentGameId24","prevState","_this$currentGameId25","_this$currentGameId26","_this$currentGameId27","encryptedMove","commit","_this$currentGameId28","_this$currentGameId29","_this$currentGameId30","cancel","leave","clearMove","reveal","getOutcome","map","e","urlParams","URLSearchParams","search","get","getAffiliateOfConsumer","joiningPassword","isJoiningGame","fetchPlayerRegisteredEvents","fetchPlayerWaitingEvents","fetchPlayersMatchedEvents","fetchPlayersMoveCommittedEvents","fetchMoveRevealedEvents","fetchNewRoundEvents","fetchGameOutcomeEvents","fetchPlayerCancelledEvents","processEvents","handsTokenBalance","handsStakedBalance","totalHandsStakedBalance","claimableEthForStaking","protocolFeeRevenue","protocolAffiliateRevenue","onboardedAddresses","claimableEthForAffiliate","affiliateLink","stake","unstake","claim","claimAffiliateRewards","stakingContract","handsTokenContract","totalStakedPerBlock","mounted","init","setAccount","setContracts","setHandsTokenBalance","setHandsStakedBalance","setTotalHandsStakedAmount","setClaimableEthForStaking","setClaimableEthForAffiliate","setProtocolFeeRevenue","balanceOf","stakedAmount","viewTotalStaked","viewClaimableRewards","getConsumersOfAffiliate","tx","approve","getTransactionReceipt","transactionHash","message","reason","stack","claimRewards","CHAIN_ID_MAINNET","CHAIN_ID_TESTNET","CHAIN_ID_LOCALHOST","CHAIN_ID_LOCALHOST_HARDHAT","RPC_URLS","CURRENT_CHAIN_ID","name","Game","Staking","setup","ref","loading","loginButtonStatus","connecting","clientId","web3auth","Web3Auth","chainConfig","chainNamespace","CHAIN_NAMESPACES","rpcTarget","uiConfig","defaultLanguage","web3AuthNetwork","torusPlugin","TorusWalletConnectorPlugin","torusWalletOpts","walletInitOptions","whiteLabel","theme","isDark","colors","primary","logoDark","logoLight","useWalletConnect","enableLogging","walletConnectV1Adapter","WalletConnectV1Adapter","adapterSettings","bridge","configureAdapter","metamaskAdapter","MetamaskAdapter","sessionTime","setAdapterSettings","blockExplorer","torusWalletAdapter","TorusWalletAdapter","onMounted","initModal","userInfo","getUserInfo","addPlugin","connect","uiConsole","fetchBalance","rpc","RPC","balanceEth","pollBalance","immediate","transak","Transak","walletAddress","userData","firstName","email","network","exchangeScreenTitle","authenticateUser","idToken","user","logout","addChain","newChain","displayName","tickerName","ticker","decimals","switchChain","signMessage","getPrivateKey","el","document","querySelector","innerHTML","defineComponent","Home","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","push","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","installedChunks","installedChunkData","promise","resolve","reject","Error","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}