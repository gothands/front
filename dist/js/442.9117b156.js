"use strict";(self["webpackChunkHandsy_io"]=self["webpackChunkHandsy_io"]||[]).push([[442],{40442:(t,e,i)=>{i.d(e,{TorusWalletAdapter:()=>h});i(57658),i(21703);var n=i(82482),s=i(1767),r=i(31267),a=i(18228);function o(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function c(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?o(Object(i),!0).forEach((function(e){(0,n.Z)(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}class h extends a.d{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),(0,n.Z)(this,"name",r.rW.TORUS_EVM),(0,n.Z)(this,"adapterNamespace",r.yk.EIP155),(0,n.Z)(this,"currentChainNamespace",r.EN.EIP155),(0,n.Z)(this,"type",r.hN.EXTERNAL),(0,n.Z)(this,"status",r.MP.NOT_READY),(0,n.Z)(this,"torusInstance",null),(0,n.Z)(this,"torusWalletOptions",void 0),(0,n.Z)(this,"initParams",void 0),(0,n.Z)(this,"loginSettings",{}),this.torusWalletOptions=t.adapterSettings||{},this.initParams=t.initParams||{},this.loginSettings=t.loginSettings||{}}get provider(){return this.status===r.MP.CONNECTED&&this.torusInstance?this.torusInstance.provider:null}set provider(t){throw new Error("Not implemented")}async init(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await super.init(t),super.checkInitializationRequirements();const{chainId:e,blockExplorer:i,displayName:n,rpcTarget:a,ticker:o,tickerName:h}=this.chainConfig,u={chainId:Number.parseInt(e,16),host:a,blockExplorer:i,networkName:n,ticker:o,tickerName:h};this.torusInstance=new s.ZP(this.torusWalletOptions),r.cM.debug("initializing torus evm adapter init"),await this.torusInstance.init(c(c({showTorusButton:!1},this.initParams),{},{network:u})),this.status=r.MP.READY,this.emit(r.n2.READY,r.rW.TORUS_EVM);try{r.cM.debug("initializing torus evm adapter"),t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(d){r.cM.error("Failed to connect with torus evm provider",d),this.emit(r.n2.ERRORED,d)}}async connect(){if(super.checkConnectionRequirements(),!this.torusInstance)throw r.Ty.notReady("Torus wallet is not initialized");this.status=r.MP.CONNECTING,this.emit(r.n2.CONNECTING,{adapter:r.rW.TORUS_EVM});try{await this.torusInstance.login(this.loginSettings);const{chainId:t}=this.torusInstance.provider;if(t&&parseInt(t)!==parseInt(this.chainConfig.chainId,16)){const{chainId:t,blockExplorer:e,displayName:i,rpcTarget:n,ticker:s,tickerName:a}=this.chainConfig,o={chainId:Number.parseInt(t,16),host:n,blockExplorer:e,networkName:i,tickerName:a,ticker:s};await this.torusInstance.setProvider(c({},o));const h=await this.torusInstance.ethereum.request({method:"eth_chainId"});if(h&&parseInt(h)!==parseInt(this.chainConfig.chainId,16))throw r.Ty.fromCode(5e3,`Not connected to correct chainId. Expected: ${this.chainConfig.chainId}, Current: ${h}`)}return this.status=r.MP.CONNECTED,this.torusInstance.showTorusButton(),this.emit(r.MP.CONNECTED,{adapter:r.rW.TORUS_EVM,reconnected:this.rehydrated}),this.provider}catch(t){throw this.status=r.MP.READY,this.rehydrated=!1,this.emit(r.MP.ERRORED,t),t instanceof r.up?t:r.RM.connectionError("Failed to login with torus wallet")}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(await super.disconnectSession(),!this.torusInstance)throw r.Ty.notReady("Torus wallet is not initialized");await this.torusInstance.logout(),this.torusInstance.hideTorusButton(),t.cleanup?(this.status=r.MP.NOT_READY,this.torusInstance=null):this.status=r.MP.READY,await super.disconnect()}async getUserInfo(){if(this.status!==r.MP.CONNECTED)throw r.RM.notConnectedError("Not connected with wallet");if(!this.torusInstance)throw r.Ty.notReady("Torus wallet is not initialized");const t=await this.torusInstance.getUserInfo("");return t}async addChain(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkAddChainRequirements(e),this.addChainConfig(t)}async switchChain(t){var e;let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkSwitchChainRequirements(t,i);const n=this.getChainConfig(t.chainId);await(null===(e=this.torusInstance)||void 0===e?void 0:e.setProvider({host:n.rpcTarget,chainId:parseInt(n.chainId,16),networkName:n.displayName,blockExplorer:n.blockExplorer,ticker:n.ticker,tickerName:n.tickerName})),this.setAdapterSettings({chainConfig:this.getChainConfig(t.chainId)})}}}}]);
//# sourceMappingURL=442.9117b156.js.map