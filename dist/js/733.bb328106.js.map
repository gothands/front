{"version":3,"file":"js/733.bb328106.js","mappings":"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","sources":["webpack://Handsy.io/../src/Layout.ts","webpack://Handsy.io/../src/_assert.ts","webpack://Handsy.io/../src/crypto.ts","webpack://Handsy.io/../src/utils.ts","webpack://Handsy.io/../src/_sha2.ts","webpack://Handsy.io/../src/_u64.ts","webpack://Handsy.io/../src/sha512.ts","webpack://Handsy.io/../../src/abstract/utils.ts","webpack://Handsy.io/../../src/abstract/modular.ts","webpack://Handsy.io/../../src/abstract/curve.ts","webpack://Handsy.io/../../src/abstract/edwards.ts","webpack://Handsy.io/../src/ed25519.ts","webpack://Handsy.io/../src/sha256.ts","webpack://Handsy.io/../src/error.ts","webpack://Handsy.io/../src/struct.ts","webpack://Handsy.io/../src/structs/utilities.ts","webpack://Handsy.io/../src/structs/types.ts","webpack://Handsy.io/../src/structs/coercions.ts","webpack://Handsy.io/../src/sha3.ts","webpack://Handsy.io/../src/hmac.ts","webpack://Handsy.io/../../src/abstract/weierstrass.ts","webpack://Handsy.io/../src/_shortw_utils.ts","webpack://Handsy.io/../src/secp256k1.ts","webpack://Handsy.io/../src/utils/ed25519.ts","webpack://Handsy.io/../src/utils/to-buffer.ts","webpack://Handsy.io/../src/utils/borsh-schema.ts","webpack://Handsy.io/../src/publickey.ts","webpack://Handsy.io/../src/bpf-loader-deprecated.ts","webpack://Handsy.io/../src/transaction/constants.ts","webpack://Handsy.io/../src/transaction/expiry-custom-errors.ts","webpack://Handsy.io/../src/message/account-keys.ts","webpack://Handsy.io/../src/layout.ts","webpack://Handsy.io/../src/utils/shortvec-encoding.ts","webpack://Handsy.io/../src/utils/assert.ts","webpack://Handsy.io/../src/message/compiled-keys.ts","webpack://Handsy.io/../src/message/legacy.ts","webpack://Handsy.io/../src/message/v0.ts","webpack://Handsy.io/../src/message/versioned.ts","webpack://Handsy.io/../src/transaction/legacy.ts","webpack://Handsy.io/../src/transaction/versioned.ts","webpack://Handsy.io/../src/timing.ts","webpack://Handsy.io/../src/sysvar.ts","webpack://Handsy.io/../src/utils/send-and-confirm-transaction.ts","webpack://Handsy.io/../src/utils/sleep.ts","webpack://Handsy.io/../src/instruction.ts","webpack://Handsy.io/../src/fee-calculator.ts","webpack://Handsy.io/../src/nonce-account.ts","webpack://Handsy.io/../src/utils/bigint.ts","webpack://Handsy.io/../src/programs/system.ts","webpack://Handsy.io/../src/loader.ts","webpack://Handsy.io/../src/bpf-loader.ts","webpack://Handsy.io/../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","webpack://Handsy.io/../src/errors.ts","webpack://Handsy.io/../src/__forks__/browser/fetch-impl.ts","webpack://Handsy.io/../src/programs/address-lookup-table/state.ts","webpack://Handsy.io/../src/connection.ts","webpack://Handsy.io/../src/keypair.ts","webpack://Handsy.io/../src/programs/address-lookup-table/index.ts","webpack://Handsy.io/../src/programs/compute-budget.ts","webpack://Handsy.io/../src/programs/ed25519.ts","webpack://Handsy.io/../src/utils/secp256k1.ts","webpack://Handsy.io/../src/programs/secp256k1.ts","webpack://Handsy.io/../src/programs/stake.ts","webpack://Handsy.io/../src/programs/vote.ts","webpack://Handsy.io/../src/validator-info.ts","webpack://Handsy.io/../src/vote-account.ts","webpack://Handsy.io/./node_modules/@toruslabs/tweetnacl-js/nacl-fast.js","webpack://Handsy.io/../src/safeEventEmitter.ts","webpack://Handsy.io/../src/serializableError.ts","webpack://Handsy.io/../src/jrpc.ts","webpack://Handsy.io/../src/jrpcEngine.ts","webpack://Handsy.io/../src/mux.ts","webpack://Handsy.io/../src/browserStorage.ts","webpack://Handsy.io/../src/constants.ts","webpack://Handsy.io/../src/index.ts","webpack://Handsy.io/../src/chain/IChainInterface.ts","webpack://Handsy.io/../src/errors/index.ts","webpack://Handsy.io/../src/wallet/index.ts","webpack://Handsy.io/../src/adapter/IAdapter.ts","webpack://Handsy.io/../src/loglevel.ts","webpack://Handsy.io/../../src/internal.ts","webpack://Handsy.io/../../src/bytes.ts","webpack://Handsy.io/../../src/helpers.ts","webpack://Handsy.io/../../src/constants.ts","webpack://Handsy.io/../../src/units.ts","webpack://Handsy.io/../../src/index.ts","webpack://Handsy.io/../../src/account.ts","webpack://Handsy.io/../../src/db.ts","webpack://Handsy.io/../../src/types.ts","webpack://Handsy.io/../src/BaseController.ts","webpack://Handsy.io/../src/createEventEmitterProxy.ts","webpack://Handsy.io/../src/interfaces.ts","webpack://Handsy.io/../src/utils/utils.ts","webpack://Handsy.io/../src/Network/createFetchMiddleware.ts","webpack://Handsy.io/../src/Preferences/IPreferencesController.ts","webpack://Handsy.io/../src/Preferences/BasePreferencesController.ts","webpack://Handsy.io/../src/baseProvider.ts","webpack://Handsy.io/../src/jrpcClient.ts","webpack://Handsy.io/../src/CommonJRPCProvider.ts","webpack://Handsy.io/../src/commonPrivateKeyProvider.ts","webpack://Handsy.io/../src/rpc/JrpcClient.ts","webpack://Handsy.io/../src/rpc/solanaRpcMiddlewares.ts","webpack://Handsy.io/../src/providers/injectedProviders/base/baseInjectedProvider.ts","webpack://Handsy.io/../src/providers/injectedProviders/base/providerHandlers.ts","webpack://Handsy.io/../src/providers/injectedProviders/injectedProviderProxy.ts","webpack://Handsy.io/../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","webpack://Handsy.io/../src/providers/injectedProviders/torus/providerHandlers.ts","webpack://Handsy.io/../src/providers/injectedProviders/torus/torusInjectedProvider.ts","webpack://Handsy.io/../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","webpack://Handsy.io/../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/base-x/src/index.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/bs58/index.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/compose.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/duplex.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/duplexify.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/from.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/legacy.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/operators.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/passthrough.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/readable.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/state.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/transform.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/utils.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/streams/writable.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/internal/validators.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/browser.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/errors.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/primordials.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/ours/util.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/stream.js","webpack://Handsy.io/./node_modules/@web3auth/solana-provider/node_modules/readable-stream/lib/stream/promises.js","webpack://Handsy.io/./node_modules/borsh/lib/index.js","webpack://Handsy.io/./node_modules/jayson/lib/client/browser/index.js","webpack://Handsy.io/./node_modules/jayson/lib/generateRequest.js","webpack://Handsy.io/./node_modules/rpc-websockets/dist/lib/client.js","webpack://Handsy.io/./node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/createClass.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/inherits.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Handsy.io/./node_modules/@babel/runtime/regenerator/index.js","webpack://Handsy.io/./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n",null,null,null,null,null,"import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack: pack,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { Duplex } from \"readable-stream\";\n\nimport { AsyncJRPCMiddleware, ConsoleLike, IdMap, JRPCMiddleware, JRPCRequest, JRPCResponse, Json, ReturnHandlerCallback } from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error: unknown) {\n      log.error(`OpenLogin - RPC Error thrown: ${(error as Error).message}`, error);\n      res.error = new SerializableError({ code: -32603, message: (error as Error).message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err: Error;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err: unknown) {\n      err = _err as Error;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\nexport type ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = Math.random().toString(36).slice(2);\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (err: unknown) {\n      const error = err as Error;\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import { rpcErrors, serializeError } from \"@metamask/rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport {\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCEngineReturnHandler,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  Maybe,\n  RequestArguments,\n  SendCallBack,\n} from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[],\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error: unknown) {\n        end(error as Error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(_req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error: unknown) {\n            return handlerCallback(error as Error);\n          }\n          return handlerCallback();\n        });\n      } catch (error: unknown) {\n        return end(error as Error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error: unknown) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error as Error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read(): undefined {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error.toString(),\n          code: res.error?.code || -32603,\n        },\n      });\n\n      throw rpcErrors.internal(err);\n    }\n    return res.result as U;\n  };\n\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: unknown, providerRes: JRPCResponse<U>) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: Math.random().toString(36).slice(2),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error: unknown) {\n      return end(error as Error);\n    }\n  };\n}\n","import eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport { BufferEncoding } from \"./interfaces\";\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import { IStorage, storageAvailable } from \"./utils\";\n\nexport class MemoryStore implements IStorage {\n  store: Record<string, string> = {};\n\n  getItem(key: string): string {\n    return this.store[key] || null;\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n\nexport class BrowserStorage {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: BrowserStorage;\n\n  public storage: IStorage;\n\n  private _storeKey: string;\n\n  private constructor(storeKey: string, storage: IStorage) {\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n\n  static getInstance(key: string, storageKey: \"session\" | \"local\" = \"local\"): BrowserStorage {\n    if (!this.instance) {\n      let storage: IStorage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n\n      this.instance = new this(key, storage);\n    }\n    return this.instance;\n  }\n\n  toJSON(): string {\n    return this.storage.getItem(this._storeKey);\n  }\n\n  resetStore(): Record<string, unknown> {\n    const currStore = this.getStore();\n    this.storage.setItem(this._storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore(): Record<string, unknown> {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n\n  get<T>(key: string): T {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n\n  set<T>(key: string, value: T): void {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n","import { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from \"@toruslabs/constants\";\n\nexport const storeKey = \"openlogin_store\";\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport const OPENLOGIN_NETWORK = {\n  ...TORUS_SAPPHIRE_NETWORK,\n  ...TORUS_LEGACY_NETWORK,\n} as const;\n\nexport const SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\",\n} as const;\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\",\n} as const;\n\nexport const MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\",\n} as const;\n\nexport const OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MODIFY_MFA: \"modify_mfa\",\n} as const;\n\nexport const BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\",\n} as const;\n\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK };\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = (typeof CHAIN_NAMESPACES)[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  XRPL: \"xrpl\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = (typeof ADAPTER_NAMESPACES)[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n\n  /**\n   * web socket target Url for the chain\n   */\n  wsTarget?: string;\n\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n  /**\n   * Number of decimals for the currency ticker (e.g: 18)\n   */\n  decimals?: number;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n    5115: \"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa\",\n    5116: \"Chain config has not been added. Please add the chain config before calling switchChain\",\n    5117: \"Unsupported operation\",\n    5118: \"useCoreKitKey flag is enabled but coreKitKey is not available\",\n    5119: \"User not logged in.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}. ${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n  public static mfaEnabled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5115, extraMessage);\n  }\n\n  public static chainConfigNotAdded(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5116, extraMessage);\n  }\n\n  public static unsupportedOperation(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5117, extraMessage);\n  }\n\n  public static coreKitKeyNotFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5118, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5119, extraMessage);\n  }\n}\n\nexport class WalletOperationsError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5201: \"Provided chainId is not allowed\",\n    5202: \"This operation is not allowed\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletOperationsError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletOperationsError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static chainIDNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5201, extraMessage);\n  }\n\n  public static operationNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5202, extraMessage);\n  }\n\n  public static chainNamespaceNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5203, extraMessage);\n  }\n}\n\nexport class WalletProviderError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5301: \"Expected a single, non-array, object argument.\",\n    5302: \"'args.method' must be a non-empty string.\",\n    5303: \"'args.params' must be an object or array if provided.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletProviderError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletProviderError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static invalidRequestArgs(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5301, extraMessage);\n  }\n\n  public static invalidRequestMethod(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5302, extraMessage);\n  }\n\n  public static invalidRequestParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5303, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = (typeof WALLET_ADAPTERS)[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = (typeof SOLANA_ADAPTERS)[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = (typeof EVM_ADAPTERS)[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = (typeof MULTI_CHAIN_ADAPTERS)[keyof typeof MULTI_CHAIN_ADAPTERS];\n\nexport const ADAPTER_NAMES = {\n  [MULTI_CHAIN_ADAPTERS.OPENLOGIN]: \"OpenLogin\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V2]: \"Wallet Connect v2\",\n  [SOLANA_ADAPTERS.TORUS_SOLANA]: \"Torus\",\n  [SOLANA_ADAPTERS.PHANTOM]: \"Phantom\",\n  [SOLANA_ADAPTERS.SOLFLARE]: \"Solflare\",\n  [SOLANA_ADAPTERS.SLOPE]: \"Slope\",\n  [EVM_ADAPTERS.TORUS_EVM]: \"Torus\",\n  [EVM_ADAPTERS.METAMASK]: \"Metamask\",\n  [EVM_ADAPTERS.COINBASE]: \"Coinbase\",\n};\n","import { JRPCRequest, JRPCResponse, Maybe, RequestArguments, SafeEventEmitter, SendCallBack } from \"@toruslabs/openlogin-jrpc\";\nimport { OPENLOGIN_NETWORK, OPENLOGIN_NETWORK_TYPE, OpenloginUserInfo } from \"@toruslabs/openlogin-utils\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError, WalletOperationsError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = (typeof ADAPTER_CATEGORY)[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n  CACHE_CLEAR: \"cache_clear\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = (typeof ADAPTER_STATUS)[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\n\nexport interface BaseAdapterSettings {\n  clientId?: string;\n  sessionTime?: number;\n  chainConfig?: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n  useCoreKitKey?: boolean;\n}\n\nexport interface IProvider extends SafeEventEmitter {\n  get chainId(): string;\n  request<S, R>(args: RequestArguments<S>): Promise<Maybe<R>>;\n  sendAsync<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n  sendAsync<T, U>(req: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n  send<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n}\n\nexport interface IBaseProvider<T> extends IProvider {\n  provider: SafeEventEmitterProvider | null;\n  currentChainConfig: Partial<CustomChainConfig>;\n  setupProvider(provider: T): Promise<void>;\n  addChain(chainConfig: CustomChainConfig): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  updateProviderEngineProxy(provider: SafeEventEmitterProvider): void;\n}\n\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  web3AuthNetwork: OPENLOGIN_NETWORK_TYPE;\n  clientId: string;\n  status: ADAPTER_STATUS_TYPE;\n  provider: IProvider | null;\n  adapterData?: unknown;\n  connnected: boolean;\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<IProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setAdapterSettings(adapterSettings: BaseAdapterSettings): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  public clientId: string;\n\n  public web3AuthNetwork: OPENLOGIN_NETWORK_TYPE = OPENLOGIN_NETWORK.MAINNET;\n\n  protected rehydrated = false;\n\n  // should be added in constructor or from setAdapterSettings function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  protected knownChainConfigs: Record<CustomChainConfig[\"chainId\"], CustomChainConfig> = {};\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  constructor(options: BaseAdapterSettings = {}) {\n    super();\n    this.setAdapterSettings(options);\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get connnected(): boolean {\n    return this.status === ADAPTER_STATUS.CONNECTED;\n  }\n\n  public abstract get provider(): IProvider | null;\n\n  public setAdapterSettings(options: BaseAdapterSettings): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n    if (options?.web3AuthNetwork) {\n      this.web3AuthNetwork = options.web3AuthNetwork;\n    }\n    const customChainConfig = options.chainConfig;\n    if (customChainConfig) {\n      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n      // chainId is optional in this function.\n      // we go with mainnet chainId by default.\n      const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n      // NOTE: It is being forced casted to CustomChainConfig to handle OTHER Chainnamespace\n      // where chainConfig is not required.\n      const finalChainConfig = { ...(defaultChainConfig || {}), ...customChainConfig } as CustomChainConfig;\n\n      this.chainConfig = finalChainConfig;\n      this.addChainConfig(finalChainConfig);\n    }\n  }\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V2 && this.status === ADAPTER_STATUS.CONNECTING) return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n  }\n\n  checkInitializationRequirements(): void {\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"Please initialize Web3Auth with a valid clientId in constructor\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    if (!this.chainConfig.rpcTarget && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    }\n\n    if (!this.chainConfig.chainId && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"chainID is required in chainConfig\");\n    }\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  checkDisconnectionRequirements(): void {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n  }\n\n  checkAddChainRequirements(chainConfig: CustomChainConfig, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (this.currentChainNamespace !== chainConfig.chainNamespace) {\n      throw WalletOperationsError.chainNamespaceNotAllowed(\"This adapter doesn't support this chainNamespace\");\n    }\n  }\n\n  checkSwitchChainRequirements({ chainId }: { chainId: string }, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (!this.knownChainConfigs[chainId]) throw WalletLoginError.chainConfigNotAdded(\"Invalid chainId\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  protected addChainConfig(chainConfig: CustomChainConfig): void {\n    const currentConfig = this.knownChainConfigs[chainConfig.chainId];\n    this.knownChainConfigs[chainConfig.chainId] = {\n      ...(currentConfig || {}),\n      ...chainConfig,\n    };\n  }\n\n  protected getChainConfig(chainId: string): CustomChainConfig | null {\n    return this.knownChainConfigs[chainId] || null;\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<IProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n  abstract addChain(chainConfig: CustomChainConfig): Promise<void>;\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport type WalletConnectV2Data = {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n};\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n",null,null,null,null,null,null,null,null,null,"import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { BaseConfig, BaseState, IController } from \"./interfaces\";\n\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\nclass BaseController<C extends BaseConfig, S extends BaseState> extends SafeEventEmitter implements IController<C, S> {\n  /**\n   * Default options used to configure this controller\n   */\n  defaultConfig: C = {} as C;\n\n  /**\n   * Default state set on this controller\n   */\n  defaultState: S = {} as S;\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n  disabled = false;\n\n  /**\n   * Name of this controller used during composition\n   */\n  name = \"BaseController\";\n\n  private readonly initialConfig: C;\n\n  private readonly initialState: S;\n\n  private internalConfig: C = this.defaultConfig;\n\n  private internalState: S = this.defaultState;\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor({ config = {} as C, state = {} as S }: { config?: Partial<C>; state?: Partial<S> }) {\n    super();\n    // Use assign since generics can't be spread: https://git.io/vpRhY\n    this.initialState = state as S;\n    this.initialConfig = config as C;\n  }\n\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n  get config(): C {\n    return this.internalConfig;\n  }\n\n  /**\n   * Retrieves current controller state\n   *\n   * @returns - Current state\n   */\n  get state(): S {\n    return this.internalState;\n  }\n\n  /**\n   * Updates controller configuration\n   *\n   * @param config - New configuration options\n   * @param overwrite - Overwrite config instead of merging\n   * @param fullUpdate - Boolean that defines if the update is partial or not\n   */\n  configure(config: Partial<C>, overwrite = false, fullUpdate = true): void {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? (config as C) : Object.assign(this.internalConfig, config);\n\n      for (const key in this.internalConfig) {\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (this as any)[key as string] = this.internalConfig[key];\n        }\n      }\n    } else {\n      for (const key in config) {\n        /* istanbul ignore else */\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this.internalConfig[key] = config[key];\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (this as any)[key] = config[key];\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates controller state\n   *\n   * @param state - New state\n   * @param overwrite - Overwrite state instead of merging\n   */\n  update(state: Partial<S>, overwrite = false): void {\n    this.internalState = overwrite ? { ...(state as S) } : { ...this.internalState, ...state };\n    this.emit(\"store\", this.internalState);\n  }\n\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns - This controller instance\n   */\n  protected initialize(): this {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n}\n\nexport default BaseController;\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nconst filterNoop = () => true;\nconst internalEvents = [\"newListener\", \"removeListener\"];\nconst externalEventFilter = (name: string) => !internalEvents.includes(name);\n\ninterface EventEmitterProxyOpts {\n  eventFilter?: ((name: string) => boolean) | string;\n}\n\nfunction getRawListeners<T extends SafeEventEmitter>(eventEmitter: T, name: string | symbol) {\n  // prefer native\n  return typeof eventEmitter.rawListeners !== \"undefined\" ? eventEmitter.rawListeners(name) : eventEmitter.listeners(name);\n}\n\nexport default function createEventEmitterProxy<T extends SafeEventEmitter>(initialTarget: T, opts?: EventEmitterProxyOpts): T {\n  // parse options\n  const finalOpts = opts || {};\n  let eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n\n  let target = initialTarget;\n\n  let setTarget = (newTarget: T) => {\n    const oldTarget = target;\n    target = newTarget;\n\n    oldTarget\n      .eventNames()\n      .filter(eventFilter as (name: string | symbol) => boolean)\n      .forEach((name: string | symbol) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getRawListeners(oldTarget, name).forEach((handler) => newTarget.on(name, handler as (...args: any[]) => void));\n      });\n\n    // remove old listeners\n    oldTarget.removeAllListeners();\n  };\n\n  const proxy = new Proxy<T>({} as T, {\n    get: (_, name: \"setTarget\" | keyof SafeEventEmitter) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name as keyof SafeEventEmitter];\n    },\n    set: (_, name: \"setTarget\" | keyof SafeEventEmitter, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n      target[name as keyof SafeEventEmitter] = value;\n      return true;\n    },\n  });\n\n  return proxy;\n}\n","import { type TORUS_LEGACY_NETWORK_TYPE } from \"@toruslabs/constants\";\n\nimport { BUILD_ENV, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_ACTIONS, OPENLOGIN_NETWORK, SUPPORTED_KEY_CURVES, UX_MODE } from \"./constants\";\n\nexport { TORUS_LEGACY_NETWORK_TYPE };\n\nexport type UX_MODE_TYPE = (typeof UX_MODE)[keyof typeof UX_MODE];\n\nexport type OriginData = {\n  [P in string]: string;\n};\n\nexport type UserData = {\n  [P in string]: string;\n};\n\nexport type BaseRedirectParams = {\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * Any custom state you wish to pass along. This will be returned to you post redirect.\n   * Use this to store data that you want to be available to the dapp after login.\n   */\n  appState?: string;\n};\n\n/**\n * {@label loginProviderType}\n */\nexport type LOGIN_PROVIDER_TYPE = (typeof LOGIN_PROVIDER)[keyof typeof LOGIN_PROVIDER];\n\nexport type OPENLOGIN_ACTIONS_TYPE = (typeof OPENLOGIN_ACTIONS)[keyof typeof OPENLOGIN_ACTIONS];\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\nexport type CUSTOM_LOGIN_PROVIDER_TYPE = string & { toString?: (radix?: number) => string };\n\nexport type MfaLevelType = (typeof MFA_LEVELS)[keyof typeof MFA_LEVELS];\n\nexport type SUPPORTED_KEY_CURVES_TYPE = (typeof SUPPORTED_KEY_CURVES)[keyof typeof SUPPORTED_KEY_CURVES];\n\nexport type OPENLOGIN_NETWORK_TYPE = (typeof OPENLOGIN_NETWORK)[keyof typeof OPENLOGIN_NETWORK];\n\nexport type BUILD_ENV_TYPE = (typeof BUILD_ENV)[keyof typeof BUILD_ENV];\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\" | string;\n  /**\n   * - `'none'`: do not prompt user for login or consent on re-authentication\n   * - `'login'`: prompt user for re-authentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\" | string;\n  /**\n   * Maximum allowable elapsed time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be re-authenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface ExtraLoginOptions extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport type LoginParams = BaseRedirectParams & {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   */\n  loginProvider: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n\n  /**\n   * You can set the `mfaLevel` to customize when mfa screen should be shown to user.\n   * It currently accepts 4 values:-\n   * - `'default'`: Setting mfa level to `default` will present mfa screen to user on every third login.\n   * - `'optional'`: Setting mfa level to `default` will present mfa screen to user on every login but user can skip it.\n   * - `'mandatory'`: Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login.\n   * - `'none'`: Setting mfa level to `none` will make the user skip the mfa setup screen\n   *\n   * Defaults to `default`\n   * @defaultValue `default`\n   */\n  mfaLevel?: MfaLevelType;\n\n  /**\n   * This option is for internal use only in torus wallet and has no effect\n   * on user's login on other dapps.\n   *\n   * Defaults to false\n   * @defaultValue false\n   * @internal\n   */\n  getWalletKey?: boolean;\n\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user's email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n\n  /**\n   * Custom Logins can get a dapp share returned to them post successful login.\n   * This is useful if the dapps want to use this share to allow users to login seamlessly\n   * dappShare is a 24 word seed phrase\n   */\n  dappShare?: string;\n\n  /**\n   * This curve will be used to determine the public key encoded in the jwt token which returned in\n   * `getUserInfo` function after user login.\n   * You can use that public key from jwt token as a unique user identifier in your backend.\n   *\n   * - `'secp256k1'`: secp256k1 based pub key is added as a wallet public key in jwt token to use.\n   * - `'ed25519'`: ed25519 based pub key is added as a wallet public key in jwt token to use.\n   *\n   * Note: This parameter won't change format of private key returned by openlogin. Private key returned\n   * by openlogin is always `secp256k1`. As of now you have to convert it to `'ed25519'` if you want.\n   * You can use `@toruslabs/openlogin-ed25519` npm package for this purpose.\n   *\n   *\n   * @defaultValue secp256k1\n   */\n  curve?: SUPPORTED_KEY_CURVES_TYPE;\n};\n\nexport type SocialMfaModParams = {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   */\n  loginProvider: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user's email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n};\nexport const LANGUAGES = {\n  en: \"en\",\n  ja: \"ja\",\n  ko: \"ko\",\n  de: \"de\",\n  zh: \"zh\",\n  es: \"es\",\n  fr: \"fr\",\n  pt: \"pt\",\n  nl: \"nl\",\n} as const;\n\nexport type LANGUAGE_TYPE = (typeof LANGUAGES)[keyof typeof LANGUAGES];\n\nexport const THEME_MODES = {\n  light: \"light\",\n  dark: \"dark\",\n  auto: \"auto\",\n};\n\nexport type THEME_MODE_TYPE = (typeof THEME_MODES)[keyof typeof THEME_MODES];\n\nexport type WhiteLabelData = {\n  /**\n   * App name to display in the UI\n   */\n  appName?: string;\n  /**\n   * App url\n   */\n  appUrl?: string;\n  /**\n   * App logo to use in light mode\n   */\n  logoLight?: string;\n  /**\n   * App logo to use in dark mode\n   */\n  logoDark?: string;\n  /**\n   * language which will be used by web3auth. app will use browser language if not specified. if language is not supported it will use \"en\"\n   * en: english\n   * de: german\n   * ja: japanese\n   * ko: korean\n   * zh: mandarin\n   * es: spanish\n   * fr: french\n   * pt: portuguese\n   * nl: dutch\n   *\n   * @defaultValue en\n   */\n  defaultLanguage?: LANGUAGE_TYPE;\n  /**\n   theme\n   *\n   * @defaultValue auto\n   */\n  mode?: THEME_MODE_TYPE;\n  /**\n   * Use logo loader\n   *\n   * @defaultValue false\n   */\n  useLogoLoader?: boolean;\n\n  /**\n   * Used to customize theme of the login modal with following options\n   * `'primary'` - To customize primary color of modal's content.\n   */\n  theme?: {\n    primary?: string;\n    gray?: string;\n    red?: string;\n    green?: string;\n    success?: string;\n    warning?: string;\n    error?: string;\n    info?: string;\n    white?: string;\n  };\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   * e.g.\n   * tncLink: {\n   *  en: \"http://example.com/tnc/en\",\n   *  ja: \"http://example.com/tnc/ja\",\n   * }\n   */\n  tncLink?: Partial<Record<LANGUAGE_TYPE, string>>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   * e.g.\n   * privacyPolicy: {\n   *  en: \"http://example.com/tnc/en\",\n   *  ja: \"http://example.com/tnc/ja\",\n   * }\n   */\n  privacyPolicy?: Partial<Record<LANGUAGE_TYPE, string>>;\n};\n\nexport type TypeOfLogin =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"email_password\"\n  | \"passwordless\"\n  | \"jwt\"\n  | \"webauthn\";\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport type LoginConfig = Record<\n  string,\n  {\n    verifier: string;\n\n    /**\n     * The type of login. Refer to enum `LOGIN_TYPE`\n     */\n    typeOfLogin: TypeOfLogin;\n\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name?: string;\n\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n\n    /**\n     * Custom client_id. If not provided, we use the default for openlogin app\n     */\n    clientId?: string;\n\n    verifierSubIdentifier?: string;\n\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n\n    /**\n     * If we are using social logins as a backup factor,\n     * then this option will be used to show the type of social login\n     * on the social backup login screen.\n     */\n    showOnSocialBackupFactor?: boolean;\n\n    /**\n     * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n     */\n    jwtParameters?: JwtParameters;\n  }\n>;\n\nexport type OpenloginUserInfo = {\n  email?: string;\n  name?: string;\n  profileImage?: string;\n  aggregateVerifier?: string;\n  verifier: string;\n  verifierId: string;\n  typeOfLogin: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n  dappShare?: string;\n  /**\n   * Token issued by Web3Auth.\n   */\n  idToken?: string;\n\n  /**\n   * Token issued by OAuth provider. Will be available only if you are using\n   * custom verifiers.\n   */\n  oAuthIdToken?: string;\n\n  /**\n   * Access Token issued by OAuth provider. Will be available only if you are using\n   * custom verifiers.\n   */\n  oAuthAccessToken?: string;\n  appState?: string;\n  touchIDPreference?: string;\n  isMfaEnabled?: boolean;\n};\n\nexport type KeyMode = \"v1\" | \"1/1\" | \"2/n\";\n\nexport interface OpenloginSessionData {\n  privKey?: string;\n  coreKitKey?: string;\n  ed25519PrivKey?: string;\n  coreKitEd25519PrivKey?: string;\n  sessionId?: string;\n  oAuthPrivateKey?: string;\n  tKey?: string;\n  walletKey?: string;\n  userInfo?: OpenloginUserInfo;\n  keyMode?: KeyMode;\n  metadataNonce?: string;\n  authToken?: string;\n  factorKey?: string;\n  signatures?: string[];\n  tssShareIndex?: number;\n  tssPubKey?: string;\n  tssShare?: string;\n  tssNonce?: number;\n}\n\nexport const MFA_FACTOR = {\n  DEVICE: \"deviceShareFactor\",\n  BACKUP_SHARE: \"backUpShareFactor\",\n  SOCIAL_BACKUP: \"socialBackupFactor\",\n  PASSWORD: \"passwordFactor\",\n} as const;\n\nexport type MFA_FACTOR_TYPE = (typeof MFA_FACTOR)[keyof typeof MFA_FACTOR];\nexport type MFA_SETTINGS = {\n  enable: boolean;\n  priority?: number;\n  mandatory?: boolean;\n};\n\nexport type MfaSettings = Partial<Record<MFA_FACTOR_TYPE, MFA_SETTINGS>>;\n\nexport type OpenLoginOptions = {\n  /**\n   * You can get your clientId/projectId by registering your\n   * dapp on {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   */\n  clientId: string;\n\n  /**\n   * network specifies the openlogin sdk url to be used.\n   *\n   * - `'mainnet'`: https://app.openlogin.com will be used which is the production version.\n   * - `'cyan'`: https://cyan.openlogin.com will be used which is the production cyan version.\n   * - `'testnet'`: https://testing.openlogin.com will be used which is the testing version.\n   * - `'development'`: http://localhost:3000 will be used for development purpose.\n   */\n  network: OPENLOGIN_NETWORK_TYPE;\n\n  /**\n   * This parameter will be used to change the build environment of openlogin sdk.\n   * @defaultValue production\n   */\n  buildEnv?: BUILD_ENV_TYPE;\n\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n\n  /**\n   * two uxModes are supported:-\n   * - `'POPUP'`: In this uxMode, a popup will be shown to user for login.\n   * - `'REDIRECT'`: In this uxMode, user will be redirected to a new window tab for login.\n   *\n   * @defaultValue `'POPUP'`\n   * @remarks\n   *\n   * Use of `'REDIRECT'` mode is recommended in browsers where popups might get blocked.\n   */\n  uxMode?: UX_MODE_TYPE;\n\n  /**\n   * replaceUrlOnRedirect removes the params from the redirected url after login\n   *\n   * @defaultValue true\n   */\n  replaceUrlOnRedirect?: boolean;\n\n  /**\n   * originData is used to verify the origin of dapp by iframe.\n   *\n   * @internal\n   * @remarks\n   * You don't have to pass originData explicitly if you have registered your dapp at\n   * {@link \"https://dashboard.web3auth.io\"| developer dashboard}.\n   *\n   * originData contains a signature of dapp's origin url which is generated using\n   * project's secret.\n   */\n  originData?: OriginData;\n\n  /**\n   * loginConfig enables you to pass your own login verifiers configuration for various\n   * loginProviders.\n   *\n   * loginConfig is key value map where each key should be a valid loginProvider and value\n   * should be custom configuration for that loginProvider\n   *\n   * @remarks\n   * You can deploy your own verifiers from {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * to use here.\n   *\n   */\n  loginConfig?: LoginConfig;\n\n  /**\n   * webauthnTransport enables you to configure the transport type user can use\n   * for saving their share.\n   *\n   * @defaultValue [\"internal\"]\n   *\n   * @remarks\n   * This is only available for v1 users.\n   */\n  webauthnTransports?: AuthenticatorTransport[];\n\n  /**\n   * sdkUrl is for internal development use only and is used to override the\n   * `network` parameter.\n   * @internal\n   */\n  sdkUrl?: string;\n\n  /**\n   * options for whitelabling default openlogin modal.\n   */\n  whiteLabel?: WhiteLabelData;\n\n  /**\n   * Specify a custom storage server url\n   * @defaultValue https://broadcast-server.tor.us\n   * @internal\n   */\n  storageServerUrl?: string;\n\n  /**\n   * setting to \"local\" will persist social login session accross browser tabs.\n   *\n   * @defaultValue \"local\"\n   */\n  storageKey?: \"session\" | \"local\";\n\n  /**\n   * How long should a login session last at a minimum in seconds\n   *\n   * @defaultValue 86400 seconds\n   * @remarks Max value of sessionTime can be 7 * 86400 (7 days)\n   */\n  sessionTime?: number;\n\n  /**\n   * This option is for internal use only in torus wallet and has no effect\n   * on user's login on other dapps.\n   * @internal\n   */\n  sessionNamespace?: string;\n\n  /**\n   * This parameter will be used to enable mfa factors and set priority on UI listing.\n   * List of factors available\n   * backUpShareFactor | socialFactor | passwordFactor\n   * @defaultValue false\n   */\n  mfaSettings?: MfaSettings;\n\n  /**\n   * This parameter will be used to use openlogin mpc\n   * @defaultValue false\n   */\n  useMpc?: boolean;\n};\n\nexport interface BaseLoginParams {\n  loginId?: string;\n  sessionNamespace?: string;\n}\n\nexport interface OpenloginSessionConfig {\n  actionType: OPENLOGIN_ACTIONS_TYPE;\n  options: OpenLoginOptions;\n  params: Partial<LoginParams>;\n  sessionId?: string;\n}\n","import {\n  addHexPrefix,\n  bigIntToBytes,\n  bigIntToHex,\n  bytesToBigInt,\n  ecsign,\n  fromSigned,\n  hashPersonalMessage,\n  stripHexPrefix,\n  toUnsigned,\n} from \"@ethereumjs/util\";\nimport { MethodType } from \"@toruslabs/broadcast-channel\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { TransactionMeta } from \"../Transaction/ITransactionController\";\n\n/**\n * General utility functions\n */\n\nexport function intToHex(i: number): string {\n  const hex = i.toString(16);\n  return `0x${hex}`;\n}\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nexport const randomId = (): string => Math.random().toString(36).slice(2);\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== \"\" && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n  }\n\n  if (targetLength < 0) {\n    throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bytesToBigInt(v);\n  const rStr = padWithZeroes(Buffer.from(toUnsigned(rSig)).toString(\"hex\"), 64);\n  const sStr = padWithZeroes(Buffer.from(toUnsigned(sSig)).toString(\"hex\"), 64);\n  const vStr = stripHexPrefix(bigIntToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\nexport function timeout(duration: number): Promise<void> {\n  return new Promise((resolve) => {\n    const timeoutRef = window.setTimeout(() => {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\n\nexport const getHeaders = (jwt: string) => {\n  return {\n    headers: {\n      Authorization: `Bearer ${jwt}`,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n};\n\n/**\n * Text/number formatting utilities\n */\nexport const formatSmallNumbers = (number: number, currency = \"usd\", noTilde = false): string => {\n  const finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  const value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  const tilde = value > 0 ? \"~ \" : \"\";\n  return `${currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde}${Number(value)} ${currency.toUpperCase()}`;\n};\n\nexport const addressSlicer = (address: string, sliceLength = 5): string => {\n  if (!address) return \"\";\n  if (address.length < 11) {\n    return address;\n  }\n  if (typeof address !== \"string\") return \"\";\n  return `${address.slice(0, sliceLength)}...${address.slice(-sliceLength)}`;\n};\n\nexport const significantDigits = (number: number | BigNumber, perc = false, length_ = 2): number | BigNumber => {\n  let input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n  let depth;\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n  const shift = new BigNumber(10).pow(new BigNumber(depth));\n  const roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nexport const formatDate = (inputDate: string): string => {\n  const monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = new Date(inputDate);\n  const day = date.getDate();\n  const month = monthList[date.getMonth()];\n  const year = date.getFullYear();\n  return `${day} ${month} ${year}`;\n};\n\nexport const formatTime = (time: string): string => {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n\n/**\n * Network utilities\n */\nexport const transactionMatchesNetwork = <T>(transaction: TransactionMeta<T>, chainId: string): boolean => {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n  return false;\n};\n\n/**\n * Signing utils\n */\nexport const hashMessage = (message: string): Buffer => {\n  const bufferedMessage = Buffer.from(message, \"utf8\");\n  const el = hashPersonalMessage(bufferedMessage);\n  return Buffer.from(el);\n};\n\nexport const signMessage = async (privateKey: string, data: string): Promise<string> => {\n  const privKey = Buffer.from(privateKey, \"hex\");\n  const message = stripHexPrefix(data);\n  const msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  const rawMsgSig = concatSig(Buffer.from(bigIntToBytes(msgSig.v)), Buffer.from(msgSig.r), Buffer.from(msgSig.s));\n  return rawMsgSig;\n};\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const broadcastChannelOptions = {\n  type: \"server\" as MethodType,\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nexport function getCustomDeviceInfo(): Record<string, string> | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((navigator as any)?.brave) {\n    return {\n      browser: \"Brave\",\n    };\n  }\n}\nexport class UserError extends Error {}\n\nexport const handleRedirectParameters = (\n  hash: string,\n  queryParameters: Record<string, string>\n): { error: string; instanceParameters: Record<string, string>; hashParameters: Record<string, string> } => {\n  const hashParameters: Record<string, string> = {};\n  const hashUrl = new URL(`${window.location.origin}/?${hash.slice(1)}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    hashParameters[key] = value;\n  });\n  let instanceParameters = {};\n  let error = \"\";\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n  return { error, instanceParameters, hashParameters };\n};\n\nexport function sleep<T>(ms: number): Promise<T> {\n  return new Promise<T>((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { Block, createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, Payload } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface FetchMiddlewareOptions {\n  rpcTarget: string;\n  originHttpHeaderKey?: string;\n}\n\nexport interface PayloadwithOrgin extends Payload {\n  origin?: string;\n}\nexport interface FetchMiddlewareFromReqOptions extends FetchMiddlewareOptions {\n  req: PayloadwithOrgin;\n}\n\nexport interface FetchConfig {\n  fetchUrl: string;\n  fetchParams: RequestInit;\n}\n\nconst RETRIABLE_ERRORS: string[] = [\n  // ignore server overload errors\n  \"Gateway timeout\",\n  \"ETIMEDOUT\",\n  // ignore server sent html error pages\n  // or truncated json responses\n  \"failed to parse response body\",\n  // ignore errors where http req failed to establish\n  \"Failed to fetch\",\n];\n\nfunction checkForHttpErrors(fetchRes: Response): void {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw rpcErrors.methodNotFound();\n\n    case 418:\n      throw rpcErrors.internal({ message: `Request is being rate limited.` });\n\n    case 503:\n    case 504:\n      throw rpcErrors.internal({\n        message: `Gateway timeout. The request took too long to process.` + `This can happen when querying over too wide a block range.`,\n      });\n\n    default:\n      break;\n  }\n}\n\nfunction timeout(duration: number): Promise<number> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  });\n}\n\nfunction parseResponse(fetchRes: Response, body: Record<string, Block>): Block {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw rpcErrors.internal({\n      message: `Non-200 status code: '${fetchRes.status}'`,\n      data: body,\n    });\n  }\n  // check for rpc error\n  if (body.error) {\n    throw rpcErrors.internal({\n      data: body.error,\n    });\n  }\n  // return successful result\n  return body.result;\n}\n\nexport function createFetchConfigFromReq({ req, rpcTarget, originHttpHeaderKey }: FetchMiddlewareFromReqOptions): FetchConfig {\n  const parsedUrl: URL = new URL(rpcTarget);\n\n  // prepare payload\n  // copy only canonical json rpc properties\n  const payload: Payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params,\n  };\n\n  // extract 'origin' parameter from request\n  const originDomain: string | undefined = req.origin;\n\n  // serialize request body\n  const serializedPayload: string = JSON.stringify(payload);\n\n  // configure fetch params\n  const fetchParams: RequestInit = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    } as HeadersInit,\n    body: serializedPayload,\n  };\n\n  // optional: add request origin as header\n  if (originHttpHeaderKey && originDomain) {\n    (fetchParams.headers as Record<string, string>)[originHttpHeaderKey] = originDomain;\n  }\n\n  return { fetchUrl: parsedUrl.href, fetchParams };\n}\n\nexport function createFetchMiddleware({ rpcTarget, originHttpHeaderKey }: FetchMiddlewareOptions): JRPCMiddleware<string[], Block> {\n  return createAsyncMiddleware(async (req: JRPCRequest<string[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const { fetchUrl, fetchParams } = createFetchConfigFromReq({\n      req,\n      rpcTarget,\n      originHttpHeaderKey,\n    });\n\n    // attempt request multiple times\n    const maxAttempts = 5;\n    const retryInterval = 1000;\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        const fetchRes: Response = await fetch(fetchUrl, fetchParams);\n        // check for http errrors\n        checkForHttpErrors(fetchRes);\n        // parse response body\n        const fetchBody: Record<string, Block> = await fetchRes.json();\n        const result: Block = parseResponse(fetchRes, fetchBody);\n        // set result and exit retry loop\n        res.result = result;\n        return;\n      } catch (err) {\n        const errMsg: string = err.toString();\n        const isRetriable: boolean = RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n        // re-throw error if not retriable\n        if (!isRetriable) {\n          throw err;\n        }\n      }\n      // delay before retrying\n      await timeout(retryInterval);\n    }\n  });\n}\n","import { BaseConfig, BaseState, IController, UserInfo } from \"../interfaces\";\n\nexport const ACTIVITY_ACTION = {\n  ACTIVITY_ACTION_ALL: \"walletActivity.allTransactions\",\n  ACTIVITY_ACTION_SEND: \"walletActivity.send\",\n  ACTIVITY_ACTION_RECEIVE: \"walletActivity.receive\",\n  ACTIVITY_ACTION_TOPUP: \"walletActivity.topup\",\n};\n\nexport type ACTIVITY_ACTION_TYPE = (typeof ACTIVITY_ACTION)[keyof typeof ACTIVITY_ACTION];\n\nexport const ACCOUNT_CATEGORY = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\",\n};\n\nexport type ACCOUNT_TYPE = (typeof ACCOUNT_CATEGORY)[keyof typeof ACCOUNT_CATEGORY];\n\nexport type THEME = \"light\" | \"dark\";\n\nexport type CustomNft = {\n  id: number;\n  created_at: string;\n  nft_address: string;\n  public_address: string;\n  network: string;\n  nft_contract_standard: string;\n  nft_id: string;\n};\n\nexport type CustomToken = {\n  id: number;\n  created_at: string;\n  token_address: string;\n  public_address: string;\n  network: string;\n  token_symbol: string;\n  token_name: string;\n  decimals: string;\n};\n\nexport type UserVerifierInfo = {\n  verifier: string;\n  verifierId: string;\n};\n\nexport type PaymentTransaction = {\n  id: string;\n  date: string;\n  from: string;\n  slicedFrom: string;\n  action: string;\n  to: string;\n  slicedTo: string;\n  totalAmount: number;\n  totalAmountString: string;\n  currencyAmount: number;\n  currencyAmountString: string;\n  amount: number;\n  ethRate: number;\n  status: string;\n  blockExplorerLink: string;\n  currencyUsed: string;\n};\n\nexport interface RecordLoginPayload {\n  browser: string;\n  os: string;\n  os_version: string;\n  browser_version: string;\n  platform: string;\n  hostname: string;\n  verifier: string;\n  verifier_id: string;\n  metadata?: string;\n  idToken?: string;\n}\n\nexport interface UserPayload {\n  verifier: string;\n  verifier_id: string;\n  theme: string;\n  locale: string;\n  default_currency: string;\n  idToken?: string; // verified by openlogin\n}\nexport interface ContactPayload {\n  contact_verifier: string; // This is the verifier of the contact\n  contact_verifier_id: string; // This is the verifier id of the contact\n  display_name: string;\n}\n\nexport type Contact = {\n  id: number;\n  created_at: string;\n  updated_at: string;\n  contact_verifier: string;\n  contact_verifier_id: string;\n  display_name: string;\n  public_address: string;\n};\n\nexport interface AddressPreferences {\n  selectedCurrency: string;\n  theme: THEME;\n  locale: string;\n  accountType: ACCOUNT_TYPE;\n  contacts: Contact[];\n  crashReport: boolean;\n  userInfo: UserInfo;\n  jwtToken?: string;\n  paymentTx?: PaymentTransaction[];\n  defaultPublicAddress?: string;\n  customTokens?: CustomToken[];\n  customNfts?: CustomNft[];\n}\n\nexport interface User {\n  id: number;\n  public_address: string;\n  default_currency: string;\n  created_at: string;\n  theme: THEME;\n  locale: string;\n  verifier: string;\n  verifier_id: string;\n  account_type: string;\n  default_public_address: string;\n  contacts?: Contact[];\n  customTokens?: CustomToken[];\n  customNfts?: CustomNft[];\n}\n\nexport interface BillboardEvent {\n  eventName: string;\n  imageUrl: string;\n  imageDarkUrl: string;\n  description: string;\n  callToActionLinkTwo: string;\n  callToActionLink: string;\n  callToActionText: string;\n  locale: string;\n}\n\n/**\n * Preferences controller state\n */\nexport interface PreferencesState<P> extends BaseState {\n  /**\n   * Map of addresses to ContactEntry objects\n   */\n  identities: { [address: string]: P };\n  /**\n   * Current coinbase account\n   */\n  selectedAddress: string;\n\n  lastErrorMessage?: string;\n\n  lastSuccessMessage?: string;\n}\n\nexport interface PreferencesConfig extends BaseConfig {\n  pollInterval?: number;\n  api: string;\n  commonApiHost: string;\n  signInPrefix: string;\n}\n\ninterface DappUrl {\n  url: string;\n}\n\nexport interface DiscoverDapp {\n  logo: DappUrl[];\n  title: string;\n  category: string;\n  desc: string;\n  network: string;\n  url: string;\n}\n\nexport interface IPreferencesController<P, C, S> extends IController<C, S> {\n  /**\n   * Init will sync the preferences of specified address with backend and also add the identity in state\n   * the store.\n   * @param address - address of the user\n   * @param jwtToken - if jwt token already exists, it will be used instead of fetching from backend\n   * @param calledFromEmbed - if called from embed\n   * @param userInfo - optional user info\n   * @param rehydrate - Rehydrate the preferences from the local storage\n   *\n   */\n  initPreferences(params: {\n    address: string;\n    jwtToken?: string;\n    calledFromEmbed?: boolean;\n    userInfo?: { verifier: string; verifierId: string };\n    rehydrate?: boolean;\n    locale?: string;\n  }): Promise<void>;\n\n  /**\n   * Gets the preferences state of specified address\n   * @defaultValue - By default it will return selected address preferences\n   */\n  getAddressState(address?: string): P;\n\n  /**\n   * Sets the selected address in state\n   * @param selectedAddress - Sets the provided address as currently selected address\n   */\n  setSelectedAddress(selectedAddress: string): void;\n}\n","import { get, patch, post, remove } from \"@toruslabs/http-helpers\";\nimport bowser from \"bowser\";\nimport { cloneDeep } from \"lodash\";\nimport log from \"loglevel\";\n\nimport BaseController from \"../BaseController\";\nimport { BaseConfig, EmailObject, LOGIN_PROVIDER, UserInfo } from \"../interfaces\";\nimport { BaseKeyringController } from \"../Keyring/BaseKeyringController\";\nimport { KeyringControllerState } from \"../Keyring/IKeyringController\";\nimport { TransactionStatus } from \"../Transaction/ITransactionController\";\nimport { getCustomDeviceInfo, getHeaders } from \"../utils\";\nimport {\n  ACCOUNT_CATEGORY,\n  ACCOUNT_TYPE,\n  AddressPreferences,\n  BillboardEvent,\n  Contact,\n  ContactPayload,\n  DiscoverDapp,\n  PreferencesConfig,\n  PreferencesState,\n  RecordLoginPayload,\n  THEME,\n  UserPayload,\n} from \"./IPreferencesController\";\n\n// By default, poll every 3 minutes\nconst DEFAULT_INTERVAL = 180 * 1000;\n\nexport const DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\",\n  },\n} as AddressPreferences;\n\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\nexport abstract class BasePreferencesController<\n  P extends AddressPreferences,\n  C extends PreferencesConfig,\n  S extends PreferencesState<P>,\n> extends BaseController<C, S> {\n  /**\n   * Name of this controller used during composition\n   */\n  name = \"PreferencesController\";\n\n  public iframeOrigin: string;\n\n  private signAuthMessage: BaseKeyringController<BaseConfig, KeyringControllerState>[\"signAuthMessage\"];\n\n  private defaultPreferences: Partial<P>;\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor({\n    config,\n    state,\n    defaultPreferences,\n    signAuthMessage,\n  }: {\n    config?: Partial<C> & Pick<C, \"api\" | \"commonApiHost\" | \"signInPrefix\">;\n    state?: Partial<S>;\n    defaultPreferences?: Partial<P>;\n    signAuthMessage: BaseKeyringController<BaseConfig, KeyringControllerState>[\"signAuthMessage\"];\n  }) {\n    super({ config, state });\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n    this.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\",\n    } as S;\n    this.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL,\n    } as C;\n    this.initialize();\n    this.defaultPreferences = {\n      ...DEFAULT_PREFERENCES,\n      ...defaultPreferences,\n    };\n    this.signAuthMessage = signAuthMessage;\n  }\n\n  public setIframeOrigin(origin: string): void {\n    this.iframeOrigin = origin;\n  }\n\n  getAddressState(address?: string): P | undefined {\n    const selectedAddress = address || this.state.selectedAddress;\n    return this.state.identities[selectedAddress];\n  }\n\n  /**\n   * Sets selected address\n   *\n   * @param selectedAddress - casper account hash\n   */\n  setSelectedAddress(selectedAddress: string): void {\n    this.update({ selectedAddress } as Partial<S>);\n  }\n\n  async getUser<U>(address: string): Promise<U> {\n    const user = await get<{ success: boolean; error?: string; data?: U }>(`${this.config.api}/user?fetchTx=false`, this.headers(address), {\n      useAPIKey: true,\n    });\n    return user.data;\n  }\n\n  async createUser(params: {\n    selectedCurrency: string;\n    theme: THEME;\n    verifier: string;\n    verifierId: string;\n    locale: string;\n    address: string;\n    idToken?: string;\n  }): Promise<void> {\n    const { selectedCurrency, theme, verifier, verifierId, locale, address, idToken } = params;\n    const userPayload: UserPayload = {\n      default_currency: selectedCurrency,\n      theme,\n      verifier,\n      verifier_id: verifierId,\n      locale,\n      idToken,\n    };\n    await post(`${this.config.api}/user`, userPayload, this.headers(address), { useAPIKey: true });\n    this.updateState(\n      {\n        theme,\n        defaultPublicAddress: address,\n        selectedCurrency,\n        locale,\n      } as Partial<P>,\n      address\n    );\n  }\n\n  public async storeUserLogin(params: {\n    verifier: string;\n    verifierId: string;\n    address: string;\n    options: { calledFromEmbed: boolean; rehydrate: boolean };\n    idToken?: string;\n  }): Promise<void> {\n    const { verifierId, verifier, options, address, idToken } = params;\n    if (!options.rehydrate) {\n      const browser = bowser.getParser(window.navigator.userAgent);\n      const specialBrowser = getCustomDeviceInfo();\n      const recordLoginPayload: RecordLoginPayload = {\n        os: browser.getOSName(),\n        os_version: browser.getOSVersion() || \"unidentified\",\n        browser: specialBrowser?.browser || browser.getBrowserName() || \"unidentified\",\n        browser_version: browser.getBrowserVersion() || \"unidentified\",\n        platform: browser.getPlatform().type || \"desktop\",\n        hostname: this.iframeOrigin,\n        verifier,\n        verifier_id: verifierId,\n        idToken,\n      };\n      await post<{ success: boolean }>(`${this.config.api}/user/recordLogin`, recordLoginPayload, this.headers(address), { useAPIKey: true });\n    }\n  }\n\n  async setCrashReport(isEnabled: boolean): Promise<boolean> {\n    if (isEnabled === this.getAddressState()?.crashReport) return true;\n    try {\n      await patch(`${this.config.api}/user`, { enable_crash_reporter: isEnabled }, this.headers(), { useAPIKey: true });\n      this.updateState({ crashReport: isEnabled } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserTheme(theme: THEME): Promise<boolean> {\n    if (theme === this.getAddressState()?.theme) return true;\n    try {\n      await patch(`${this.config.api}/user`, { theme }, this.headers(), { useAPIKey: true });\n      this.updateState({ theme } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserLocale(locale: string): Promise<boolean> {\n    if (locale === this.getAddressState()?.locale) return;\n    try {\n      await patch(`${this.config.api}/user`, { locale }, this.headers(), { useAPIKey: true });\n      this.updateState({ locale } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to set locale\", error);\n      return false;\n    }\n  }\n\n  async setSelectedCurrency(payload: { selectedCurrency: string }): Promise<boolean> {\n    if (payload.selectedCurrency === this.getAddressState()?.selectedCurrency) return true;\n    try {\n      await patch(`${this.config.api}/user`, { default_currency: payload.selectedCurrency }, this.headers(), { useAPIKey: true });\n      this.updateState({ selectedCurrency: payload.selectedCurrency } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async addContact(contact: ContactPayload): Promise<boolean> {\n    try {\n      const response = await post<{ success: boolean; data: Contact }>(`${this.config.api}/contact`, contact, this.headers(), { useAPIKey: true });\n      this.updateState({ contacts: [...(this.getAddressState()?.contacts || []), response.data] } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to add contact\", error);\n      return false;\n    }\n  }\n\n  async deleteContact(contactId: number): Promise<boolean> {\n    try {\n      const response = await remove<{ success: boolean; data: { id: number } }>(`${this.config.api}/contact/${contactId}`, {}, this.headers(), {\n        useAPIKey: true,\n      });\n      const finalContacts = this.getAddressState()?.contacts.filter((contact) => contact.id !== response.data.id);\n      if (finalContacts) this.updateState({ contacts: [...finalContacts] } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to delete contact\", error);\n      return false;\n    }\n  }\n\n  async revokeDiscord(idToken: string): Promise<void> {\n    try {\n      const resp = await post(`${this.config.api}/revoke/discord`, { token: idToken }, this.headers(), { useAPIKey: true });\n      log.info(resp);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async patchPastTx(body: { id: string; status: TransactionStatus; updated_at: string }, address: string): Promise<void> {\n    try {\n      const response = await patch(`${this.config.api}/transaction`, body, this.headers(address), { useAPIKey: true });\n      log.info(\"successfully patched\", response);\n    } catch (error) {\n      log.error(\"unable to patch tx\", error);\n    }\n  }\n\n  async postPastTx<T>(tx: T, address: string): Promise<{ success: boolean; response: number[] }> {\n    try {\n      const response = await post(`${this.config.api}/transaction`, tx, this.headers(address), {\n        useAPIKey: true,\n      });\n      log.info(\"successfully posted tx\", response);\n      return response as { success: boolean; response: number[] };\n    } catch (error) {\n      log.error(error, \"unable to insert transaction\");\n    }\n  }\n\n  async getWalletOrders<T>(address: string): Promise<T[]> {\n    try {\n      const response = await get<{ success: boolean; data: T[] | null }>(`${this.config.api}/transaction`, this.headers(address), {\n        useAPIKey: true,\n      });\n      return response.success ? (response.data ? response.data : []) : [];\n    } catch (error) {\n      log.error(\"unable to get wallet orders tx\", error);\n      return [];\n    }\n  }\n\n  async getTopUpOrders<T>(address: string): Promise<T[]> {\n    try {\n      const response = await get<{ success: boolean; data: T[] }>(`${this.config.commonApiHost}/transaction`, this.headers(address), {\n        useAPIKey: true,\n      });\n      return response.data || [];\n    } catch (error) {\n      log.error(\"unable to fetch past Top up orders\", error);\n    }\n  }\n\n  async getBillBoardData(): Promise<BillboardEvent[]> {\n    try {\n      const response = await get<{ success: boolean; data: BillboardEvent[] | null }>(`${this.config.api}/billboard`, this.headers(), {\n        useAPIKey: true,\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async getMessageForSigning(publicAddress: string): Promise<string> {\n    const response = await post<{ success: boolean; message: string }>(\n      `${this.config.api}/auth/message`,\n      {\n        public_address: publicAddress,\n      },\n      {},\n      { useAPIKey: true }\n    );\n    return response.message;\n  }\n\n  async getTwitterId(payload: { nick: string; typeOfLogin: string }): Promise<string> {\n    const res = await get<{ success: boolean; data: string }>(`${this.config.api}/twitter?screen_name=${payload.nick}`, this.headers(), {\n      useAPIKey: true,\n    });\n    return `${payload.typeOfLogin.toLowerCase()}|${res.data.toString()}`;\n  }\n\n  async sendEmail(payload: { emailObject: EmailObject }): Promise<void> {\n    return post(`${this.config.api}/transaction/sendemail`, payload.emailObject, this.headers(), { useAPIKey: true });\n  }\n\n  async refreshJwt(): Promise<void> {\n    const address = this.state.selectedAddress;\n    const messageToSign = await this.getMessageForSigning(address);\n    if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n    const signedMessage = await this.signAuthMessage(address, messageToSign);\n    const response: { token: string } = await post(\n      `${this.config.api}/auth/verify`,\n      {\n        public_address: address,\n        signed_message: signedMessage,\n      },\n      {},\n      { useAPIKey: true }\n    );\n    this.updateState({ jwtToken: response.token } as Partial<P>, address);\n  }\n\n  async getDappList(): Promise<DiscoverDapp[]> {\n    try {\n      const response = await get<{ success: boolean; error?: string; data?: DiscoverDapp[] }>(`${this.config.api}/dapps`, this.headers(), {\n        useAPIKey: true,\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  protected async init(\n    address: string,\n    userInfo: UserInfo,\n    jwtToken?: string,\n    metadata: Record<string, unknown> = {},\n    type?: ACCOUNT_TYPE\n  ): Promise<void> {\n    let response = { token: jwtToken };\n    if (this.getAddressState(address)) return;\n    if (!jwtToken) {\n      const messageToSign = await this.getMessageForSigning(address);\n      if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n      const signedMessage = await this.signAuthMessage(address, messageToSign);\n      response = await post(\n        `${this.config.api}/auth/verify`,\n        {\n          public_address: address,\n          signed_message: signedMessage,\n          ...metadata,\n        },\n        {},\n        { useAPIKey: true }\n      );\n    }\n    this.updateState({ jwtToken: response.token, userInfo, accountType: type ?? this.defaultPreferences.accountType } as Partial<P>, address);\n  }\n\n  protected updateState(preferences?: Partial<P>, address?: string): P {\n    const selectedAddress = address || this.state.selectedAddress;\n    const currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n    const mergedState = { ...currentState, ...preferences } as P;\n    this.update({\n      identities: {\n        ...this.state.identities,\n        [selectedAddress]: mergedState,\n      },\n    } as S);\n    return mergedState;\n  }\n\n  protected headers(address?: string): { headers: { Authorization: string; \"Content-Type\": string } } {\n    const selectedAddress = address || this.state.selectedAddress;\n    return getHeaders(this.getAddressState(selectedAddress)?.jwtToken || \"\");\n  }\n\n  abstract sync(address: string): Promise<boolean>;\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { BaseConfig, BaseController, BaseState, createEventEmitterProxy } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCResponse, SendCallBack } from \"@toruslabs/openlogin-jrpc\";\nimport {\n  CustomChainConfig,\n  IBaseProvider,\n  Maybe,\n  RequestArguments,\n  SafeEventEmitterProvider,\n  WalletInitializationError,\n  WalletProviderError,\n} from \"@web3auth/base\";\n\nexport interface BaseProviderState extends BaseState {\n  chainId: string;\n}\n\nexport interface BaseProviderConfig extends BaseConfig {\n  chainConfig: Partial<CustomChainConfig>;\n  networks?: Record<string, CustomChainConfig>;\n  skipLookupNetwork?: boolean;\n}\n\nexport abstract class BaseProvider<C extends BaseProviderConfig, S extends BaseProviderState, P>\n  extends BaseController<C, S>\n  implements IBaseProvider<P>\n{\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  constructor({ config, state }: { config: C; state?: S }) {\n    super({ config, state });\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\",\n    } as S;\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: { [config.chainConfig.chainId]: config.chainConfig },\n    } as C;\n    super.initialize();\n  }\n\n  get currentChainConfig(): Partial<CustomChainConfig> {\n    return this.config.chainConfig;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  get chainId(): string {\n    return this.state.chainId;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  async request<T, R>(args: RequestArguments<T>): Promise<Maybe<R>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: WalletProviderError.invalidRequestArgs().message,\n        data: { ...(args || {}), cause: WalletProviderError.invalidRequestArgs().message },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: WalletProviderError.invalidRequestMethod().message,\n        data: { ...(args || {}), cause: WalletProviderError.invalidRequestMethod().message },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: WalletProviderError.invalidRequestParams().message,\n        data: { ...(args || {}), cause: WalletProviderError.invalidRequestParams().message },\n      });\n    }\n\n    return this.provider?.request(args);\n  }\n\n  sendAsync<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n  sendAsync<T, U>(req: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  sendAsync<T, U>(req: JRPCRequest<T>, callback?: SendCallBack<JRPCResponse<U>>): void | Promise<JRPCResponse<U>> {\n    if (callback) return this.send(req, callback);\n    return this.request(req);\n  }\n\n  send<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void {\n    this.request(req)\n      .then((res) => callback(null, { result: res } as JRPCResponse<U>))\n      .catch((err) => callback(err, null));\n  }\n\n  public addChain(chainConfig: CustomChainConfig): void {\n    if (!chainConfig.chainId) throw rpcErrors.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw rpcErrors.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: { ...this.config.networks, [chainConfig.chainId]: chainConfig },\n    } as C);\n  }\n\n  public getChainConfig(chainId: string): CustomChainConfig | null {\n    const chainConfig = this.config.networks?.[chainId];\n    if (!chainConfig) throw rpcErrors.invalidRequest(`Chain ${chainId} is not supported, please add chainConfig for it`);\n    return chainConfig;\n  }\n\n  public updateProviderEngineProxy(provider: SafeEventEmitterProvider): void {\n    if (this._providerEngineProxy) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this._providerEngineProxy as any).setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(provider);\n    }\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  abstract setupProvider(provider: P): Promise<void>;\n\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n\n  protected abstract lookupNetwork(provider?: P): Promise<string | void>;\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  Block,\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, string> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, CustomChainConfig> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<string[], Block>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([\n    createChainIdMiddleware(chainId) as JRPCMiddleware<unknown, unknown>,\n    createProviderConfigMiddleware(providerConfig) as JRPCMiddleware<unknown, unknown>,\n    fetchMiddleware as JRPCMiddleware<unknown, unknown>,\n  ]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { providerErrors } from \"@metamask/rpc-errors\";\nimport { createEventEmitterProxy } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"./baseProvider\";\nimport { createJsonRpcClient } from \"./jrpcClient\";\n\nexport type CommonJRPCProviderConfig = BaseProviderConfig;\n\nexport type CommonJRPCProviderState = BaseProviderState;\n\nexport class CommonJRPCProvider extends BaseProvider<CommonJRPCProviderConfig, CommonJRPCProviderState, never> {\n  constructor({ config, state }: { config: CommonJRPCProviderConfig; state?: CommonJRPCProviderState }) {\n    super({ config, state });\n  }\n\n  public static getProviderInstance = async (params: { chainConfig: CustomChainConfig }): Promise<CommonJRPCProvider> => {\n    const providerFactory = new CommonJRPCProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider();\n    return providerFactory;\n  };\n\n  public async setupProvider(): Promise<void> {\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    const engine = new JRPCEngine();\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    const newChainId = this.config.chainConfig.chainId;\n    if (this.state.chainId !== newChainId) {\n      this.emit(\"chainChanged\", newChainId);\n      this.emit(\"connect\", { chainId: newChainId });\n    }\n    this.update({ chainId: this.config.chainConfig.chainId });\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    await this.setupProvider();\n  }\n\n  public updateProviderEngineProxy(provider: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this._providerEngineProxy as any).setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(provider);\n    }\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected lookupNetwork(): Promise<string | void> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","import { createEventEmitterProxy } from \"@toruslabs/base-controllers\";\nimport {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCEngine,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  providerFromEngine,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, IBaseProvider, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"./baseProvider\";\n\nexport interface CommonPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface CommonPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\n\nexport class CommonPrivateKeyProvider extends BaseProvider<BaseProviderConfig, CommonPrivKeyProviderState, string> implements IBaseProvider<string> {\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  constructor({ config, state }: { config: CommonPrivKeyProviderConfig; state?: CommonPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.OTHER } }, state });\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<CommonPrivateKeyProvider> => {\n    const providerFactory = new CommonPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  addChain(_: CustomChainConfig): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  public updateProviderEngineProxy(provider: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this._providerEngineProxy as any).setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(provider);\n    }\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    return Promise.resolve(\"\");\n  }\n\n  private getPrivKeyMiddleware(privKey: string): JRPCMiddleware<unknown, unknown> {\n    const middleware = {\n      getPrivatekey: async (): Promise<string> => {\n        return privKey;\n      },\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n\n  private createPrivKeyMiddleware({ getPrivatekey }: { getPrivatekey: () => Promise<string> }): JRPCMiddleware<unknown, unknown> {\n    async function getPrivatekeyHandler(_: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n      res.result = await getPrivatekey();\n    }\n\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler) as JRPCMiddleware<unknown, unknown>,\n    });\n  }\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  Block,\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, string> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(\n  providerConfig: Omit<CustomChainConfig, \"chainNamespace\">\n): JRPCMiddleware<unknown, Omit<CustomChainConfig, \"chainNamespace\">> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([\n    createChainIdMiddleware(chainId) as JRPCMiddleware<unknown, unknown>,\n    createProviderConfigMiddleware(providerConfig) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<string[], Block>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware as JRPCMiddleware<unknown, unknown>]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { TransactionOrVersionedTransaction } from \"../interface\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>) => Promise<TransactionOrVersionedTransaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>) => Promise<TransactionOrVersionedTransaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(targetMethod: string, handler: (req: JRPCRequest<T>) => Promise<U>): JRPCMiddleware<T, U> {\n  return createAsyncMiddleware<T, U>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: TransactionOrVersionedTransaction }, TransactionOrVersionedTransaction>(\n      \"signTransaction\",\n      signTransaction\n    ) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ message: TransactionOrVersionedTransaction }, { signature: string }>(\n      \"signAndSendTransaction\",\n      signAndSendTransaction\n    ) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ message: TransactionOrVersionedTransaction[] }, TransactionOrVersionedTransaction[]>(\n      \"signAllTransactions\",\n      signAllTransactions\n    ) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<void, string>(\"private_key\", getPrivateKey) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig) as JRPCMiddleware<unknown, unknown>,\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey) as JRPCMiddleware<unknown, unknown>,\n  ]);\n}\n","import { JRPCEngine, JRPCMiddleware, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    throw WalletLoginError.unsupportedOperation(\"Chain switching is not supported by this adapter\");\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\n\nimport { IBaseWalletProvider, TransactionOrVersionedTransaction } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<TransactionOrVersionedTransaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: string }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display as \"utf8\" | \"hex\");\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>): Promise<TransactionOrVersionedTransaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request(req);\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport { ITorusWalletProvider, TransactionOrVersionedTransaction } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<unknown, string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<unknown, string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<TransactionOrVersionedTransaction> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>): Promise<TransactionOrVersionedTransaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerErrors } from \"@metamask/rpc-errors\";\nimport { JRPCEngine, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    // overrides the base provider implementation\n    await this.provider.request({\n      method: \"switchSolanaChain\",\n      params: [{ chainId: params.chainId }],\n    });\n  }\n\n  public async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    super.addChain(chainConfig);\n    await this.provider.request({\n      method: \"addNewChainConfig\",\n      params: [\n        {\n          chainId: chainConfig.chainId,\n          chainName: chainConfig.displayName,\n          rpcUrls: [chainConfig.rpcTarget],\n          blockExplorerUrls: [chainConfig.blockExplorer],\n          nativeCurrency: {\n            name: chainConfig.tickerName,\n            symbol: chainConfig.ticker,\n            decimals: chainConfig.decimals || 18,\n          },\n        },\n      ],\n    });\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw providerErrors.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<never, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.emit(\"connect\", { chainId: this.state.chainId });\n    this.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { Keypair, VersionedTransaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nimport { TransactionOrVersionedTransaction } from \"../../interface\";\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<TransactionOrVersionedTransaction> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      if ((transaction as VersionedTransaction).version !== undefined || transaction instanceof VersionedTransaction) {\n        (transaction as VersionedTransaction).sign([keyPair]);\n      } else {\n        transaction.partialSign(keyPair);\n      }\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      if ((transaction as VersionedTransaction).version !== undefined || transaction instanceof VersionedTransaction) {\n        (transaction as VersionedTransaction).sign([keyPair]);\n      } else {\n        transaction.partialSign(keyPair);\n      }\n      const sig = await _providerEngineProxy.request<[string, { encoding: string; preflightCommitment: string }], string>({\n        method: \"sendTransaction\",\n        params: [Buffer.from(transaction.serialize()).toString(\"base64\"), { encoding: \"base64\", preflightCommitment: \"confirmed\" }],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: TransactionOrVersionedTransaction[] }>): Promise<TransactionOrVersionedTransaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw rpcErrors.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        if ((transaction as VersionedTransaction).version !== undefined || transaction instanceof VersionedTransaction) {\n          (transaction as VersionedTransaction).sign([keyPair]);\n        } else {\n          transaction.partialSign(keyPair);\n        }\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { getED25519Key } from \"@toruslabs/openlogin-ed25519\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw providerErrors.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<never, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public getEd25519Key(privateKey: string): string {\n    return getED25519Key(privateKey).sk.toString(\"hex\").padStart(128, \"0\");\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<never, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<never, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<never, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<[], string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.emit(\"chainChanged\", this.state.chainId);\n      this.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw rpcErrors.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw rpcErrors.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw rpcErrors.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw rpcErrors.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 9,\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw rpcErrors.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw rpcErrors.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw rpcErrors.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw rpcErrors.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nconst { AbortError, codes } = require('../../ours/errors')\nconst { isNodeStream, isWebStream, kControllerErrorFunction } = require('./utils')\nconst eos = require('./end-of-stream')\nconst { ERR_INVALID_ARG_TYPE } = codes\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n  const onAbort = isNodeStream(stream)\n    ? () => {\n        stream.destroy(\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n    : () => {\n        stream[kControllerErrorFunction](\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    signal.addEventListener('abort', onAbort)\n    eos(stream, () => signal.removeEventListener('abort', onAbort))\n  }\n  return stream\n}\n","'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n","'use strict'\n\nconst { pipeline } = require('./pipeline')\nconst Duplex = require('./duplex')\nconst { destroyer } = require('./destroy')\nconst {\n  isNodeStream,\n  isReadable,\n  isWritable,\n  isWebStream,\n  isTransformStream,\n  isWritableStream,\n  isReadableStream\n} = require('./utils')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\nconst eos = require('./end-of-stream')\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n  const orgStreams = [...streams]\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n    if (\n      n < streams.length - 1 &&\n      !(isReadable(streams[n]) || isReadableStream(streams[n]) || isTransformStream(streams[n]))\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n    if (n > 0 && !(isWritable(streams[n]) || isWritableStream(streams[n]) || isTransformStream(streams[n]))) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!(isWritable(head) || isWritableStream(head) || isTransformStream(head))\n  const readable = !!(isReadable(tail) || isReadableStream(tail) || isTransformStream(tail))\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.writableObjectMode),\n    writable,\n    readable\n  })\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function (chunk, encoding, callback) {\n        if (head.write(chunk, encoding)) {\n          callback()\n        } else {\n          ondrain = callback\n        }\n      }\n      d._final = function (callback) {\n        head.end()\n        onfinish = callback\n      }\n      head.on('drain', function () {\n        if (ondrain) {\n          const cb = ondrain\n          ondrain = null\n          cb()\n        }\n      })\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head\n      const writer = writable.getWriter()\n      d._write = async function (chunk, encoding, callback) {\n        try {\n          await writer.ready\n          writer.write(chunk).catch(() => {})\n          callback()\n        } catch (err) {\n          callback(err)\n        }\n      }\n      d._final = async function (callback) {\n        try {\n          await writer.ready\n          writer.close().catch(() => {})\n          onfinish = callback\n        } catch (err) {\n          callback(err)\n        }\n      }\n    }\n    const toRead = isTransformStream(tail) ? tail.readable : tail\n    eos(toRead, () => {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable', function () {\n        if (onreadable) {\n          const cb = onreadable\n          onreadable = null\n          cb()\n        }\n      })\n      tail.on('end', function () {\n        d.push(null)\n      })\n      d._read = function () {\n        while (true) {\n          const buf = tail.read()\n          if (buf === null) {\n            onreadable = d._read\n            return\n          }\n          if (!d.push(buf)) {\n            return\n          }\n        }\n      }\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail\n      const reader = readable.getReader()\n      d._read = async function () {\n        while (true) {\n          try {\n            const { value, done } = await reader.read()\n            if (!d.push(value)) {\n              return\n            }\n            if (done) {\n              d.push(null)\n              return\n            }\n          } catch {\n            return\n          }\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      if (isNodeStream(tail)) {\n        destroyer(tail, err)\n      }\n    }\n  }\n  return d\n}\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w !== null && w !== undefined && w.emitClose) || (r !== null && r !== undefined && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w !== null && w !== undefined && w.errorEmitted) || (r !== null && r !== undefined && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    return this\n  }\n  if ((r !== null && r !== undefined && r.autoDestroy) || (w !== null && w !== undefined && w.autoDestroy))\n    stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct, err)\n    })\n  } catch (err) {\n    process.nextTick(onConstruct, err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return (stream === null || stream === undefined ? undefined : stream.setHeader) && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\nmodule.exports = Duplex\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype)\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\nlet duplexify\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n  return duplexify(body, 'body')\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\n;('use strict')\nconst bufferModule = require('buffer')\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream\n} = require('./utils')\nconst eos = require('./end-of-stream')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\nconst { destroyer } = require('./destroy')\nconst Duplex = require('./duplex')\nconst Readable = require('./readable')\nconst { createDeferredPromise } = require('../../ours/util')\nconst from = require('./from')\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst { FunctionPrototypeCall } = require('../../ours/primordials')\n\n// This is needed for pre node 17.\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options)\n\n    // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  }\n\n  // TODO: Webstreams\n  // if (isReadableStream(body)) {\n  //   return _duplexify({ readable: Readable.fromWeb(body) });\n  // }\n\n  // TODO: Webstreams\n  // if (isWritableStream(body)) {\n  //   return _duplexify({ writable: Writable.fromWeb(body) });\n  // }\n\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n    const then = value === null || value === undefined ? undefined : value.then\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n        destroy\n      }))\n    }\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  }\n\n  // TODO: Webstreams.\n  // if (\n  //   isReadableStream(body?.readable) &&\n  //   isWritableStream(body?.writable)\n  // ) {\n  //   return Duplexify.fromWeb(body);\n  // }\n\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n  const then = body === null || body === undefined ? undefined : body.then\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n      read() {}\n    }))\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    }\n  }\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n  return d\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\nconst { kEmptyObject, once } = require('../../ours/util')\nconst { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require('../validators')\nconst { Promise, PromisePrototypeThen } = require('../../ours/primordials')\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose,\n  kIsClosedPromise\n} = require('./utils')\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\nconst nop = () => {}\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream, options, callback)\n  }\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  }\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n  const onfinish = () => {\n    writableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n  let readableFinished = isReadableFinished(stream, false)\n  const onend = () => {\n    readableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n  let closed = isClosed(stream)\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    callback.call(stream)\n  }\n  const onclosed = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    callback.call(stream)\n  }\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n  stream.on('close', onclose)\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclosed)\n  }\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  return cleanup\n}\nfunction eosWeb(stream, options, callback) {\n  let isAborted = false\n  let abort = nop\n  if (options.signal) {\n    abort = () => {\n      isAborted = true\n      callback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream, args))\n    }\n  }\n  PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn)\n  return nop\n}\nfunction finished(stream, opts) {\n  var _opts\n  let autoCleanup = false\n  if (opts === null) {\n    opts = kEmptyObject\n  }\n  if ((_opts = opts) !== null && _opts !== undefined && _opts.cleanup) {\n    validateBoolean(opts.cleanup, 'cleanup')\n    autoCleanup = opts.cleanup\n  }\n  return new Promise((resolve, reject) => {\n    const cleanup = eos(stream, opts, (err) => {\n      if (autoCleanup) {\n        cleanup()\n      }\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\nmodule.exports = eos\nmodule.exports.finished = finished\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n","'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\nconst { EventEmitter: EE } = require('events')\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n  source.on('data', ondata)\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n  dest.on('drain', ondrain)\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n  let didOnEnd = false\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup()\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror)\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source)\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest\n}\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn)\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\nmodule.exports = {\n  Stream,\n  prependListener\n}\n","'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst {\n  codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\nconst { finished } = require('./end-of-stream')\nconst staticCompose = require('./compose')\nconst { addAbortSignalNoValidate } = require('./add-abort-signal')\nconst { isWritable, isNodeStream } = require('./utils')\nconst {\n  ArrayPrototypePush,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\nfunction compose(stream, options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream', stream, 'must be writable')\n  }\n  const composedStream = staticCompose(this, stream)\n  if (options !== null && options !== undefined && options.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(options.signal, composedStream)\n  }\n  return composedStream\n}\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let concurrency = 1\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n  validateInteger(concurrency, 'concurrency', 1)\n  return async function* map() {\n    var _options$signal, _options$signal2\n    const ac = new AbortController()\n    const stream = this\n    const queue = []\n    const signal = ac.signal\n    const signalOpt = {\n      signal\n    }\n    const abort = () => ac.abort()\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal = options.signal) !== null &&\n      _options$signal !== undefined &&\n      _options$signal.aborted\n    ) {\n      abort()\n    }\n    options === null || options === undefined\n      ? undefined\n      : (_options$signal2 = options.signal) === null || _options$signal2 === undefined\n      ? undefined\n      : _options$signal2.addEventListener('abort', abort)\n    let next\n    let resume\n    let done = false\n    function onDone() {\n      done = true\n    }\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          var _val\n          if (done) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          try {\n            val = fn(val, signalOpt)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n          if (val === kEmpty) {\n            continue\n          }\n          if (typeof ((_val = val) === null || _val === undefined ? undefined : _val.catch) === 'function') {\n            val.catch(onDone)\n          }\n          queue.push(val)\n          if (next) {\n            next()\n            next = null\n          }\n          if (!done && queue.length && queue.length >= concurrency) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, undefined, onDone)\n        queue.push(val)\n      } finally {\n        var _options$signal3\n        done = true\n        if (next) {\n          next()\n          next = null\n        }\n        options === null || options === undefined\n          ? undefined\n          : (_options$signal3 = options.signal) === null || _options$signal3 === undefined\n          ? undefined\n          : _options$signal3.removeEventListener('abort', abort)\n      }\n    }\n    pump()\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n          if (val === kEof) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          if (val !== kEmpty) {\n            yield val\n          }\n          queue.shift()\n          if (resume) {\n            resume()\n            resume = null\n          }\n        }\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      ac.abort()\n      done = true\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  return async function* asIndexedPairs() {\n    let index = 0\n    for await (const val of this) {\n      var _options$signal4\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal4 = options.signal) !== null &&\n        _options$signal4 !== undefined &&\n        _options$signal4.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n      yield [index++, val]\n    }\n  }.call(this)\n}\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n  return false\n}\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n  return undefined\n}\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this, forEachFn, options));\n}\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n    return kEmpty\n  }\n  return map.call(this, filterFn, options)\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal5\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let hasInitialValue = arguments.length > 1\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal5 = options.signal) !== null &&\n    _options$signal5 !== undefined &&\n    _options$signal5.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n    await finished(this.destroy(err))\n    throw err\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n  let gotAnyItemFromStream = false\n  try {\n    for await (const value of this) {\n      var _options$signal6\n      gotAnyItemFromStream = true\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n  return initialValue\n}\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  const result = []\n  for await (const val of this) {\n    var _options$signal7\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n    ArrayPrototypePush(result, val)\n  }\n  return result\n}\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n  return number\n}\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal8\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal8 = options.signal) !== null &&\n      _options$signal8 !== undefined &&\n      _options$signal8.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal9\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal9 = options.signal) !== null &&\n        _options$signal9 !== undefined &&\n        _options$signal9.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal10\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal10 = options.signal) !== null &&\n      _options$signal10 !== undefined &&\n      _options$signal10.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal11\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal11 = options.signal) !== null &&\n        _options$signal11 !== undefined &&\n        _options$signal11.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- > 0) {\n        yield val\n      } else {\n        return\n      }\n    }\n  }.call(this)\n}\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs,\n  drop,\n  filter,\n  flatMap,\n  map,\n  take,\n  compose\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\nmodule.exports = PassThrough\nconst Transform = require('./transform')\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { ArrayIsArray, Promise, SymbolAsyncIterator } = require('../../ours/primordials')\nconst eos = require('./end-of-stream')\nconst { once } = require('../../ours/util')\nconst destroyImpl = require('./destroy')\nconst Duplex = require('./duplex')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateFunction, validateAbortSignal } = require('../validators')\nconst {\n  isIterable,\n  isReadable,\n  isReadableNodeStream,\n  isNodeStream,\n  isTransformStream,\n  isWebStream,\n  isReadableStream,\n  isReadableEnded\n} = require('./utils')\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nlet PassThrough\nlet Readable\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\nasync function pumpToNode(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n    if (end) {\n      writable.end()\n    }\n    await wait()\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\nasync function pumpToWeb(readable, writable, finish, { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter()\n  try {\n    for await (const chunk of readable) {\n      await writer.ready\n      writer.write(chunk).catch(() => {})\n    }\n    await writer.ready\n    if (end) {\n      await writer.close()\n    }\n    finish()\n  } catch (err) {\n    try {\n      await writer.abort(err)\n      finish(err)\n    } catch (err) {\n      finish(err)\n    }\n  }\n}\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n  function abort() {\n    finishImpl(new AbortError())\n  }\n  outerSignal === null || outerSignal === undefined ? undefined : outerSignal.addEventListener('abort', abort)\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n  function finishImpl(err, final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n    if (!error && !final) {\n      return\n    }\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n    outerSignal === null || outerSignal === undefined ? undefined : outerSignal.removeEventListener('abort', abort)\n    ac.abort()\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n      process.nextTick(callback, error, value)\n    }\n  }\n  let ret\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n      stream.on('error', onError)\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        var _ret\n        ret = makeAsyncIterable((_ret = ret) === null || _ret === undefined ? undefined : _ret.readable)\n      } else {\n        ret = makeAsyncIterable(ret)\n      }\n      ret = stream(ret, {\n        signal\n      })\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret2\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        })\n\n        // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n        const then = (_ret2 = ret) === null || _ret2 === undefined ? undefined : _ret2.then\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n              if (val != null) {\n                pt.write(val)\n              }\n              if (end) {\n                pt.end()\n              }\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pumpToNode(ret, pt, finish, {\n            end\n          })\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret\n          finishCount++\n          pumpToNode(toRead, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret\n        finishCount++\n        pumpToNode(toRead, stream, finish, {\n          end\n        })\n      } else if (isIterable(ret)) {\n        finishCount++\n        pumpToNode(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++\n        pumpToWeb(makeAsyncIterable(ret), stream, finish, {\n          end\n        })\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++\n        pumpToWeb(ret, stream, finish, {\n          end\n        })\n      } else if (isTransformStream(ret)) {\n        finishCount++\n        pumpToWeb(ret.readable, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n  return ret\n}\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end: false\n  }) // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n\n    function endFn() {\n      ended = true\n      dst.end()\n    }\n    if (isReadableEnded(src)) {\n      // End the destination if the source has already ended.\n      process.nextTick(endFn)\n    } else {\n      src.once('end', endFn)\n    }\n  } else {\n    finish()\n  }\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\nconst { EventEmitter: EE } = require('events')\nconst { Stream, prependListener } = require('./legacy')\nconst { Buffer } = require('buffer')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst eos = require('./end-of-stream')\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\nconst BufferList = require('./buffer_list')\nconst destroyImpl = require('./destroy')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  }\n} = require('../../ours/errors')\nconst { validateObject } = require('../validators')\nconst kPaused = Symbol('kPaused')\nconst { StringDecoder } = require('string_decoder')\nconst from = require('./from')\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\nconst nop = () => {}\nconst { errorOrDestroy } = destroyImpl\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.readableObjectMode)\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this.ended = false\n  this.endEmitted = false\n  this.reading = false\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true\n\n  // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false\n  this.emittedReadable = false\n  this.readableListening = false\n  this.resumeScheduled = false\n  this[kPaused] = null\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Has it been destroyed.\n  this.destroyed = false\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null\n  this.multiAwaitDrain = false\n\n  // If true, a maybeReadMore has been scheduled.\n  this.readingMore = false\n  this.dataEmitted = false\n  this.decoder = null\n  this.encoding = null\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options)\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  this._readableState = new ReadableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n}\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.reading = false\n    onEofChunk(stream, state)\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.reading = false\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false\n    maybeReadMore(stream, state)\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if (state.needReadable) emitReadable(stream)\n  }\n  maybeReadMore(stream, state)\n}\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n}\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder\n  // If setEncoding(null), decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = ''\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n}\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n  return n\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if (state.objectMode) return 1\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n}\n\n// You can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n)\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n  const state = this._readableState\n  const nOrig = n\n\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.emittedReadable = false\n\n  // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n  n = howMuchToRead(n, state)\n\n  // If we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  let doRead = state.needReadable\n  debug('need readable', doRead)\n\n  // If we currently have less than the highWaterMark, then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  }\n\n  // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.reading = true\n    state.sync = true\n    // If the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n    state.sync = false\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n  return ret\n}\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n  state.ended = true\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream)\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n}\n\n// At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n  state.readingMore = false\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n  let ondrain\n  let cleanedUp = false\n  function cleanup() {\n    debug('cleanup')\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true\n\n    // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n      src.pause()\n    }\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n  src.on('data', ondata)\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n    if (ret === false) {\n      pause()\n    }\n  }\n\n  // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror)\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n  dest.once('close', onclose)\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n  dest.once('finish', onfinish)\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe', src)\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause()\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n  return dest\n}\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState\n\n    // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  }\n\n  // If we're not piping anywhere, then do nothing.\n  if (state.pipes.length === 0) return this\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n    return this\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n}\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n  return res\n}\nReadable.prototype.addListener = Readable.prototype.on\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nReadable.prototype.off = Readable.prototype.removeListener\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  const state = this._readableState\n  if (!state.flowing) {\n    debug('resume')\n    // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n  state[kPaused] = false\n  return this\n}\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n  if (!state.reading) {\n    stream.read(0)\n  }\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n  this._readableState[kPaused] = true\n  return this\n}\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  let paused = false\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream)\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n  return this\n}\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n  return streamToAsyncIterator(this, options)\n}\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n    get() {\n      const r = this._readableState\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      }\n\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n    get() {\n      return this[kPaused] !== false\n    },\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n})\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length)\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy &&\n          // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n  if (writable) {\n    stream.end()\n  }\n}\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n","'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n    return MathFloor(hwm)\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode)\n}\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\nmodule.exports = Transform\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\nconst Duplex = require('./duplex')\nconst { getHighWaterMark } = require('./state')\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options)\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n  Duplex.call(this, options)\n\n  // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false\n  this[kCallback] = null\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish', prefinish)\n}\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n        return\n      }\n      if (data != null) {\n        this.push(data)\n      }\n      this.push(null)\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n    if (cb) {\n      cb()\n    }\n  }\n}\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\nTransform.prototype._final = final\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n    if (val != null) {\n      this.push(val)\n    }\n    if (\n      wState.ended ||\n      // Backwards compat.\n      length === rState.length ||\n      // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n","'use strict'\n\nconst { Symbol, SymbolAsyncIterator, SymbolIterator, SymbolFor } = require('../../ours/primordials')\nconst kDestroyed = Symbol('kDestroyed')\nconst kIsErrored = Symbol('kIsErrored')\nconst kIsReadable = Symbol('kIsReadable')\nconst kIsDisturbed = Symbol('kIsDisturbed')\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise')\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction')\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) &&\n      // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\nfunction isReadableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.pipeThrough === 'function' &&\n    typeof obj.getReader === 'function' &&\n    typeof obj.cancel === 'function'\n  )\n}\nfunction isWritableStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === 'function' && typeof obj.abort === 'function')\n}\nfunction isTransformStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.readable === 'object' && typeof obj.writable === 'object')\n}\nfunction isWebStream(obj) {\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj)\n}\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kDestroyed] || (state !== null && state !== undefined && state.destroyed))\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\nfunction isWritable(stream) {\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (isDestroyed(stream)) {\n    return true\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n  return true\n}\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n  return null\n}\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\nfunction isServerRequest(stream) {\n  var _stream$req\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\nmodule.exports = {\n  kDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  kIsClosedPromise,\n  kControllerErrorFunction,\n  isClosed,\n  isDestroyed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWebStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose,\n  isTransformStream\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\nmodule.exports = Writable\nWritable.WritableState = WritableState\nconst { EventEmitter: EE } = require('events')\nconst Stream = require('./legacy').Stream\nconst { Buffer } = require('buffer')\nconst destroyImpl = require('./destroy')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\nfunction nop() {}\nconst kOnFinished = Symbol('kOnFinished')\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode)\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // if _final has been called.\n  this.finalCalled = false\n\n  // drain event flag.\n  this.needDrain = false\n  // At the start of calling end()\n  this.ending = false\n  // When end() has been called, and returned.\n  this.ended = false\n  // When 'finish' is emitted.\n  this.finished = false\n\n  // Has it been destroyed\n  this.destroyed = false\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0\n\n  // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true\n\n  // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false\n\n  // The callback that's passed to _write(chunk, cb).\n  this.onwrite = onwrite.bind(undefined, stream)\n\n  // The callback that the user supplies to write(chunk, encoding, cb).\n  this.writecb = null\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null\n  resetBuffer(this)\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n    finishMaybe(this, state)\n  })\n}\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n})\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  let err\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n}\n\n// If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n    stream._write(chunk, encoding, state.onwrite)\n    state.sync = false\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er)\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n  errorBuffer(state)\n  // This can emit error, but error must always follow cb.\n  errorOrDestroy(stream, er)\n}\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n  finishMaybe(stream, state)\n}\n\n// If there's something in the buffer waiting, then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n  resetBuffer(state)\n}\n\n// If there's something in the buffer waiting, then process it.\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n  if (!bufferedLength) {\n    return\n  }\n  let i = bufferedIndex\n  state.bufferProcessing = true\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        }\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n  state.bufferProcessing = false\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\nWritable.prototype._writev = null\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n  let err\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n    if (ret instanceof Error) {\n      err = ret\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n  return this\n}\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\nfunction callFinal(stream, state) {\n  let called = false\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    state.pendingcb--\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish')\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n  state.sync = true\n  state.pendingcb++\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n  state.sync = false\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n  stream.emit('finish')\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy &&\n        // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n    get() {\n      const w = this._writableState\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState\n\n  // Invoke pending callbacks.\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n  destroy.call(this, err, cb)\n  return this\n}\nWritable.prototype._undestroy = destroyImpl.undestroy\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n","/* eslint jsdoc/require-jsdoc: \"error\" */\n\n'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\nconst { normalizeEncoding } = require('../ours/util')\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\nconst signals = {}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === value >>> 0\n}\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n    value = NumberParseInt(value, 8)\n  }\n  validateUint32(value, name)\n  return value\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  const min = positive ? 1 : 0\n  // 2 ** 32 === 4294967296\n  const max = 4294967295\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\n\n/**\n * @param {any} options\n * @param {string} key\n * @param {boolean} defaultValue\n * @returns {boolean}\n */\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of \"dictionary\" here, which means any value\n *                                whose Type is either Undefined, Null, or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames((value, name) => {\n  if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'a dictionary', value)\n  }\n})\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nfunction validateStringArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateString(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nfunction validateBooleanArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateBoolean(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n  return port | 0\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;\"\\s]+(?:=(\")?[^;\"\\s]*\\1)?)*$/\n\n/**\n * @param {any} value\n * @param {string} name\n */\nfunction validateLinkHeaderFormat(value, name) {\n  if (typeof value === 'undefined' || !RegExpPrototypeExec(linkValueRegExp, value)) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name,\n      value,\n      'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n    )\n  }\n}\n\n/**\n * @param {any} hints\n * @return {string}\n */\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat(hints, 'hints')\n    return hints\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length\n    let result = ''\n    if (hintsLength === 0) {\n      return result\n    }\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i]\n      validateLinkHeaderFormat(link, 'hints')\n      result += link\n      if (i !== hintsLength - 1) {\n        result += ', '\n      }\n    }\n    return result\n  }\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints',\n    hints,\n    'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n  )\n}\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateStringArray,\n  validateBooleanArray,\n  validateBoolean,\n  validateBuffer,\n  validateDictionary,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal,\n  validateLinkHeaderValue\n}\n","'use strict'\n\nconst CustomStream = require('../stream')\nconst promises = require('../stream/promises')\nconst originalDestroy = CustomStream.Readable.destroy\nmodule.exports = CustomStream.Readable\n\n// Explicit export naming is needed for ESM\nmodule.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\nmodule.exports._isUint8Array = CustomStream._isUint8Array\nmodule.exports.isDisturbed = CustomStream.isDisturbed\nmodule.exports.isErrored = CustomStream.isErrored\nmodule.exports.isReadable = CustomStream.isReadable\nmodule.exports.Readable = CustomStream.Readable\nmodule.exports.Writable = CustomStream.Writable\nmodule.exports.Duplex = CustomStream.Duplex\nmodule.exports.Transform = CustomStream.Transform\nmodule.exports.PassThrough = CustomStream.PassThrough\nmodule.exports.addAbortSignal = CustomStream.addAbortSignal\nmodule.exports.finished = CustomStream.finished\nmodule.exports.destroy = CustomStream.destroy\nmodule.exports.destroy = originalDestroy\nmodule.exports.pipeline = CustomStream.pipeline\nmodule.exports.compose = CustomStream.compose\nObject.defineProperty(CustomStream, 'promises', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nmodule.exports.Stream = CustomStream.Stream\n\n// Allow default importing\nmodule.exports.default = module.exports\n","'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n","'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  Error,\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n  Promise,\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n  ReflectApply: Reflect.apply,\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n  SafeSet: Set,\n  String,\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n  Symbol,\n  SymbolFor: Symbol.for,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n  Uint8Array\n}\n","'use strict'\n\nconst bufferModule = require('buffer')\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n","/* replacement start */\n\nconst { Buffer } = require('buffer')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\nconst compose = require('./internal/streams/compose')\nconst { pipeline } = require('./internal/streams/pipeline')\nconst { destroyer } = require('./internal/streams/destroy')\nconst eos = require('./internal/streams/end-of-stream')\nconst internalBuffer = {}\nconst promises = require('./stream/promises')\nconst utils = require('./internal/streams/utils')\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.Readable = require('./internal/streams/readable')\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return ReflectApply(op, this, args)\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished\n  }\n})\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n","'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream, isWebStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nrequire('../../lib/stream.js')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (\n      lastArg &&\n      typeof lastArg === 'object' &&\n      !isNodeStream(lastArg) &&\n      !isIterable(lastArg) &&\n      !isWebStream(lastArg)\n    ) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["require","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","bindConstructorLayout","Class","layout","hasOwnProperty","call","Error","layout_","boundConstructor_","defineProperty","value","encode","writable","decode","ExternalLayout","isCount","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","number","n","isSafeInteger","bytes","lengths","includes","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","crypto","globalThis","u8a","a","u32","arr","Uint32Array","byteLength","createView","DataView","rotr","isLE","utf8ToBytes","str","TextEncoder","toBytes","data","concatBytes","arrays","r","pad","forEach","set","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","randomBytes","bytesLength","setBigUint64","view","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","pos","len","take","subarray","process","dataView","roundClean","digestInto","fill","oview","outLen","state","get","res","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_1n","_2n","hexes","_","padStart","bytesToHex","hex","hexToNumber","hexToBytes","array","j","hexByte","byte","parseInt","isNaN","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","entries","_0n","_3n","_4n","_5n","_8n","mod","result","num","power","modulo","pow2","x","invert","y","u","q","m","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","root","eql","sqr","Q1div2","neg","ONE","g","mul","ZERO","t2","ge","FpSqrt","c1","n2","nv","sub","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","FpPow","f","p","d","FpInvertBatch","nums","lastMultiplied","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","bitLen","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","c","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","key","fieldLen","minLen","reduced","wNAF","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","max","in0MaskRange","assertInRange","assertGE0","CURVE_ORDER","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","toInv","fromAffine","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","equals","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","normalizeZ","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","normed","lastByte","y2","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","point","toRawBytes","toHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","sign","options","R","verifyOpts","verify","sig","publicKey","SB","fromHex","error","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","StructError","failure","failures","cached","message","rest","path","join","super","this","_cached","isIterable","isObject","Symbol","iterator","print","JSON","stringify","shiftIterator","input","done","next","toFailure","struct","branch","refinement","toFailures","run","coerce","coercer","schema","valid","validator","ts","t","Set","refiner","Struct","props","assert","is","validate","tuples","tuple","define","any","Element","literal","constant","description","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","first","unknown","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","finish","writeInto","bufferOut","xofInto","xof","keccak_256","HMAC","_key","assertHash","iHash","oHash","buf","assertExists","assertBytes","getPrototypeOf","hmac","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","b3","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","cat","isYOdd","isHeadOdd","numToNByteStr","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","fromPrivateKey","isProbPub","getSharedSecret","privateA","publicB","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","signature","_Point$BASE$multiplyA","sg","_sig","fromDER","derError","fromCompact","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","a1","b1","a2","POW_2_128","c2","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","properties","serialize","SOLANA_SCHEMA","static","deserialize","deserializeUnchecked","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","decoded","bs58","BN","eq","toBase58","toJSON","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","concat","err","findProgramAddressSync","pubkeyData","pubkey","_class","default","kind","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","alloc","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","size","elem","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","_compile","every","pair","serializeMessage","async","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","encodeDecode","bigInt","blob","bigIntLayout","toBigIntLE","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","authorizedPubkey","nonceInitialize","instructionData","newAuthorizedPubkey","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","SendTransactionError","logs","SolanaJSONRPCError","code","customMessage","fetch","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetRecentPrioritizationFeesResult","epoch","effectiveSlot","amount","postBalance","commission","prioritizationFee","GetInflationRateResult","total","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","rentEpoch","unitsConsumed","returnData","byIdentity","range","firstSlot","lastSlot","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","PerfSampleResult","previousBlockhash","parentSlot","rewards","feeCalculator","lamportsPerSignature","numTransactions","numSlots","samplePeriodSecs","LogsResult","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","lookupTableAddress","bumpSeed","authority","recentSlot","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","_class2","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","VoteProgram","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","nacl","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D2","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","core_salsa20","o","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_hsalsa20","crypto_core_salsa20","inp","crypto_core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b7","b8","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","crypto_box","crypto_box_open","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","Int32Array","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","crypto_sign","sm","smlen","unpackneg","chk","den","den2","den4","den6","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","checkLengths","checkBoxLengths","checkArrayTypes","arguments","cleanup","lowlevel","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","after","keyPair","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","self","msCrypto","getRandomValues","QUOTA","module","safeApply","handler","Reflect","apply","arrayClone","SafeEventEmitter","EventEmitter","emit","doError","events","_events","_len","er","listeners","SerializableError","_ref","_defineProperty","stack","createScaffoldMiddleware","handlers","req","end","method","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","middlewareStack","returnHandlers","isComplete","middleware","_runMiddleware","serializeError","returnHandler","reject","_req","handle","cb","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","_runAllMiddleware","_runReturnHandlers","handlerCallback","reqs","responses","_err","callerReq","_objectSpread","_processRequest","_error","_checkForCompletion","mergeMiddleware","engine","providerFromEngine","provider","sendAsync","_res$error","_res$error2","fallbackError","rpcErrors","send","callback","on","request","random","storageAvailable","storage","storageExists","storageLength","setItem","removeItem","MemoryStore","getItem","store","BrowserStorage","storeKey","_storeKey","resetStore","storageKey","localStorage","sessionStorage","currStore","getStore","parse","TORUS_SAPPHIRE_NETWORK","TORUS_LEGACY_NETWORK","log","logLevel","setLevel","levels","CHAIN_NAMESPACES","EIP155","SOLANA","OTHER","Web3AuthError","CustomError","WalletInitializationError","extraMessage","messages","fromCode","WalletLoginError","WalletOperationsError","WalletProviderError","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V2","SOLANA_ADAPTERS","TORUS_SOLANA","PHANTOM","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_DATA_UPDATED","CACHE_CLEAR","loglevel","isHexStrict","test","padToEven","substring","byteLen","KECCAK256_NULL_S","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_S","_v","KeyEncoding","ValueEncoding","TypeOutput","BaseController","defaultConfig","defaultState","initialState","initialConfig","internalConfig","internalState","configure","overwrite","fullUpdate","filterNoop","internalEvents","externalEventFilter","getRawListeners","eventEmitter","rawListeners","createEventEmitterProxy","initialTarget","finalOpts","eventFilter","target","setTarget","newTarget","oldTarget","eventNames","removeAllListeners","proxy","Proxy","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","UserError","RETRIABLE_ERRORS","checkForHttpErrors","fetchRes","timeout","duration","parseResponse","body","createFetchConfigFromReq","rpcTarget","originHttpHeaderKey","parsedUrl","URL","payload","originDomain","origin","serializedPayload","fetchParams","headers","Accept","fetchUrl","href","createFetchMiddleware","_ref2","_next","maxAttempts","retryInterval","attempt","fetchBody","json","errMsg","isRetriable","phrase","ACCOUNT_CATEGORY","NORMAL","THRESHOLD","IMPORTED","BaseProvider","chainConfig","invalidProviderConfigError","chainId","networks","currentChainConfig","_providerEngineProxy","_this$provider","invalidRequestArgs","cause","invalidRequestMethod","invalidRequestParams","then","catch","addChain","getChainConfig","_this$config$networks","updateProviderEngineProxy","getProviderEngineProxy","createChainIdMiddleware","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","fetchMiddleware","networkMiddleware","CommonJRPCProvider","newChainId","providerErrors","setupProvider","lookupNetwork","_class$1","providerFactory","CommonPrivateKeyProvider","chainNamespace","privKeyMiddleware","getPrivKeyMiddleware","getPrivatekey","createPrivKeyMiddleware","getPrivatekeyHandler","private_key","getCreateRandomId","getED25519Key","createConfigMiddleware","createGetAccountsMiddleware","getAccounts","response","createRequestAccountsMiddleware","requestAccounts","createGenericJRPCMiddleware","targetMethod","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createChainSwitchMiddleware","_ref3","addNewChainConfig","switchSolanaChain","createAccountMiddleware","_ref4","updatePrivatekey","BaseInjectedProvider","unsupportedOperation","injectedProvider","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","getBaseProviderHandlers","sigData","display","_req$params","_req$params2","txRes","createInjectedProviderProxyMiddleware","PhantomInjectedProvider","getTorusHandlers","txMessage","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","chainName","displayName","rpcUrls","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","rpcConnectionError","keyPairGenerator","invalidParams","encoding","_req$params6","txns","SolanaPrivateKeyProvider","getEd25519Key","getChainSwitchMiddleware","getAccountMiddleware","existingKey","health","chainSwitchHandlers","switchChain","chainSwitchMiddleware","accountHandlers","updateAccount","ALPHABET","BASE_MAP","charAt","xc","charCodeAt","LEADER","FACTOR","iFACTOR","ArrayBuffer","isView","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","basex","AbortError","codes","isNodeStream","isWebStream","kControllerErrorFunction","eos","ERR_INVALID_ARG_TYPE","validateAbortSignal","signal","addAbortSignal","stream","addAbortSignalNoValidate","onAbort","reason","aborted","addEventListener","removeEventListener","StringPrototypeSlice","SymbolIterator","TypedArrayPrototypeSet","inspect","ret","clear","allocUnsafe","consume","hasStrings","_getString","_getBuffer","retLen","for","depth","customInspect","pipeline","Duplex","destroyer","isReadable","isTransformStream","isWritableStream","isReadableStream","ERR_INVALID_ARG_VALUE","ERR_MISSING_ARGS","streams","orgStreams","ondrain","onfinish","onreadable","onclose","onfinished","readable","writableObjectMode","readableObjectMode","_write","chunk","_final","writer","getWriter","ready","close","toRead","_read","read","reader","getReader","_destroy","aggregateTwoErrors","ERR_MULTIPLE_CALLBACK","kDestroyed","isDestroyed","isFinished","isServerRequest","kDestroy","kConstruct","checkError","w","errored","_readableState","_writableState","constructed","once","called","onDestroy","closed","nextTick","emitErrorCloseNT","emitCloseNT","emitErrorNT","closeEmitted","emitClose","errorEmitted","undestroy","reading","ended","endEmitted","finalCalled","prefinished","ending","errorOrDestroy","sync","autoDestroy","construct","_construct","listenerCount","constructNT","onConstruct","emitConstructNT","isRequest","setHeader","abort","emitCloseLegacy","emitErrorCloseLegacy","socket","ObjectDefineProperties","ObjectGetOwnPropertyDescriptor","ObjectKeys","ObjectSetPrototypeOf","Readable","Writable","allowHalfOpen","webStreamsAdapters","duplexify","lazyWebStreams","__proto__","writableHighWaterMark","writableBuffer","writableLength","writableFinished","writableCorked","writableEnded","writableNeedDrain","fromWeb","newStreamDuplexFromReadableWritablePair","toWeb","duplex","newReadableWritablePairFromDuplex","bufferModule","isReadableNodeStream","isWritableNodeStream","isDuplexNodeStream","ERR_INVALID_RETURN_VALUE","createDeferredPromise","isBlob","AbortController","FunctionPrototypeCall","Duplexify","fromAsyncGen","promise","ac","_promise","_resolve","final","_duplexify","wrap","objectMode","arrayBuffer","ERR_STREAM_PREMATURE_CLOSE","kEmptyObject","validateFunction","validateBoolean","PromisePrototypeThen","isClosed","isReadableFinished","isReadableErrored","isWritableFinished","isWritableErrored","willEmitClose","_willEmitClose","kIsClosedPromise","nop","_options$readable","_options$writable","eosWeb","wState","rState","onlegacyfinish","readableFinished","onend","onerror","onclosed","onrequest","removeListener","endCallback","originalCallback","isAborted","resolverFn","_opts","autoCleanup","SymbolAsyncIterator","ERR_STREAM_NULL_VALUES","iterable","isAsync","highWaterMark","hadError","hasThrow","throw","return","ArrayIsArray","EE","Stream","prependListener","emitter","event","pipe","ondata","pause","resume","_isStdio","didOnEnd","ERR_OUT_OF_RANGE","validateInteger","kWeakHandler","staticCompose","ArrayPrototypePush","MathFloor","NumberIsNaN","PromiseReject","kEmpty","kEof","compose","composedStream","concurrency","_options$signal","_options$signal2","queue","signalOpt","onDone","pump","_val","_options$signal3","asIndexedPairs","_options$signal4","unused","forEachFn","filterFn","ReduceAwareErrMissingArgs","reducer","initialValue","_options$signal5","hasInitialValue","gotAnyItemFromStream","_options$signal6","toArray","_options$signal7","flatMap","toIntegerOrInfinity","drop","_options$signal8","_options$signal9","_options$signal10","_options$signal11","streamReturningOperators","promiseReturningOperators","PassThrough","Transform","_transform","destroyImpl","ERR_STREAM_DESTROYED","isReadableEnded","writing","popCallback","pop","makeAsyncIterable","fromReadable","pumpToNode","onresolve","wait","off","pumpToWeb","pipelineImpl","outerSignal","lastStreamCleanup","finishImpl","destroys","finishCount","isLastStream","onError","_ret","_ret2","pt","dst","endFn","ArrayPrototypeIndexOf","NumberIsInteger","NumberParseInt","SafeSet","ReadableState","debug","BufferList","getHighWaterMark","getDefaultHighWaterMark","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kPaused","StringDecoder","isDuplex","pipes","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrainWriters","multiAwaitDrain","readingMore","dataEmitted","decoder","maybeReadMore","readableAddChunk","addToFront","_isUint8Array","_uint8ArrayToBuffer","onEofChunk","addChunk","emitReadable","_undestroy","captureRejectionSymbol","isPaused","setEncoding","enc","content","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","updateReadableListening","nReadingNextTick","resume_","streamToAsyncIterator","iter","createAsyncIterator","destroyOnReturn","fromList","endReadable","endReadableNT","endWritableNT","NaN","nOrig","doRead","pipeOpts","doEnd","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanedUp","needDrain","dests","ev","addListener","paused","streamKeys","readableDidRead","enumerable","readableAborted","readableHighWaterMark","readableBuffer","readableFlowing","readableLength","readableEncoding","readableEnded","pipesCount","_fromList","readableStream","newStreamReadableFromReadableStream","streamReadable","newReadableStreamFromStreamReadable","_src$readableObjectMo","highWaterMarkFrom","duplexKey","hwm","kCallback","flush","_flush","prefinish","SymbolFor","kIsErrored","kIsReadable","kIsDisturbed","obj","strict","_obj$_readableState","_obj$_writableState","pipeThrough","cancel","isWritableEnded","_stream$_writableStat","_stream$_writableStat2","writableErrored","_stream$_readableStat","_stream$_readableStat2","readableErrored","_closed","isOutgoingMessage","_defaultKeepAlive","_removedConnection","_removedContLen","isServerResponse","_sent100","_stream$req","_consuming","_dumped","upgradeOrConnect","isDisturbed","_stream$kIsDisturbed","isErrored","_ref5","_stream$kIsErrored","_stream$_readableStat3","_stream$_writableStat3","_stream$_readableStat4","_stream$_writableStat4","ArrayPrototypeSlice","FunctionPrototypeSymbolHasInstance","ObjectDefineProperty","StringPrototypeToLowerCase","SymbolHasInstance","WritableState","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_ALREADY_FINISHED","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","kOnFinished","noDecode","decodeStrings","corked","bufferProcessing","onwrite","writecb","writelen","afterWriteTickInfo","resetBuffer","pendingcb","buffered","bufferedIndex","allBuffers","allNoop","writev","_writev","clearBuffer","finishMaybe","isEncoding","writeOrBuffer","doWrite","onwriteError","errorBuffer","afterWriteTick","afterWrite","_state$errored","onfinishCallbacks","_state$errored2","bufferedLength","chunks","needFinish","callFinal","onFinish","getBuffer","cork","uncork","setDefaultEncoding","writableAborted","writableStream","newStreamWritableFromWritableStream","streamWritable","newWritableStreamFromStreamWritable","ArrayPrototypeIncludes","ArrayPrototypeJoin","ArrayPrototypeMap","NumberMAX_SAFE_INTEGER","NumberMIN_SAFE_INTEGER","ObjectPrototypeHasOwnProperty","RegExpPrototypeExec","StringPrototypeToUpperCase","StringPrototypeTrim","hideStackFrames","ERR_SOCKET_BAD_PORT","ERR_UNKNOWN_SIGNAL","normalizeEncoding","isAsyncFunction","isArrayBufferView","signals","isInt32","isUint32","octalReg","modeDesc","parseFileMode","def","validateUint32","validateInt32","positive","validateString","validateNumber","validateOneOf","oneOf","allowed","getOwnPropertyValueOrDefault","defaultValue","allowArray","allowFunction","validateDictionary","validateArray","minLength","validateStringArray","validateBooleanArray","validateSignalName","validateBuffer","validateEncoding","normalizedEncoding","validatePort","port","allowZero","validatePlainFunction","validateUndefined","validateUnion","linkValueRegExp","validateLinkHeaderFormat","validateLinkHeaderValue","hints","hintsLength","link","CustomStream","promises","originalDestroy","configurable","format","AggregateError","CustomAggregateError","kIsNodeError","kTypes","classRegExp","nodeInternalPrefix","ERR_INTERNAL_ASSERTION","addNumericalSeparator","getMessage","match","Base","NodeError","defineProperties","hidden","innerError","outerError","errors","expected","actual","endsWith","types","instances","toLowerCase","last","_actual$constructor","inspected","colors","_value$constructor","received","el","sep","ArrayPrototypePop","thisArgs","Function","hasInstance","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","prop","getOwnPropertyDescriptor","proto","setPrototypeOf","PromisePrototypeCatch","thenFn","catchFn","ReflectApply","RegExpPrototypeTest","toUpperCase","trim","asyncIterator","AsyncFunction","rej","promisify","debuglog","replace","_unused","replacement","ctor","custom","customPromisify","ERR_ILLEGAL_CONSTRUCTOR","op","pl","lastArg","__createBinding","__setModuleDefault","__decorate","decorators","desc","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","ResolvedTextDecoder","TextDecoder","textDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","maybeResize","writeU8","writeUInt8","writeU16","writeUInt16LE","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readUInt8","readU16","readUInt16LE","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","serializeField","fieldType","serializeStruct","borshSerialize","structSchema","Writer","deserializeField","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","isRaw","hasCallback","_parseResponse","responseText","isError","isNotError","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","sham","valueOf","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","rpc_id","reconnect_timer_id","current_reconnects","_connect","ws_opts","_this2","_login","mark","_callee","resp","_context","prev","sent","abrupt","stop","login","_x","_listMethods","_callee2","_context2","listMethods","_this3","_subscribe","_callee3","_context3","subscribe","_x2","_unsubscribe","_callee4","_context4","unsubscribe","_x3","_this4","clearTimeout","notification","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","optionsOrCallback","listener","_default","_assertThisInitialized","ReferenceError","asyncGeneratorStep","_throw","arg","info","_asyncToGenerator","_classCallCheck","Constructor","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","_inherits","subClass","superClass","_typeof","assertThisInitialized","_possibleConstructorReturn","_regeneratorRuntime","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isGeneratorFunction","awrap","rval","complete","delegateYield","_setPrototypeOf","_toPrimitive","hint","prim","toPrimitive","_toPropertyKey","runtime","regeneratorRuntime","accidentalStrictMode","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","fromCharCode","end_of_stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","Decoder","Encoder","bite","code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","UTF8Encoder","temp","input_stream","opt_string"],"sourceRoot":""}