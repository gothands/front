{"version":3,"file":"js/app.c6cc5d56.js","mappings":"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","sources":["webpack://Handsy.io/./src/App.vue?34be","webpack://Handsy.io/./src/components/Game.vue","webpack://Handsy.io/./src/web3RPC.ts","webpack://Handsy.io/./src/types/index.ts","webpack://Handsy.io/./src/assets/Rock.js","webpack://Handsy.io/./src/assets/Paper.js","webpack://Handsy.io/./src/assets/Scissors.js","webpack://Handsy.io/./src/components/GameMove.vue","webpack://Handsy.io/./src/components/GameMove.vue?ea68","webpack://Handsy.io/./src/components/GameList.vue","webpack://Handsy.io/./src/components/ProfileItem.vue","webpack://Handsy.io/./src/components/ProfileItem.vue?8b3b","webpack://Handsy.io/./src/components/GameList.vue?d7e9","webpack://Handsy.io/./src/components/Modal.vue","webpack://Handsy.io/./src/components/Modal.vue?db1b","webpack://Handsy.io/./src/store/index.ts","webpack://Handsy.io/./src/utils/burner.ts","webpack://Handsy.io/./src/components/ProfileItemBurner.vue","webpack://Handsy.io/./src/components/ProfileItemBurner.vue?69fb","webpack://Handsy.io/./src/components/Game.vue?5bab","webpack://Handsy.io/./src/components/Staking.vue","webpack://Handsy.io/./src/components/Staking.vue?5423","webpack://Handsy.io/./src/App.vue?847a","webpack://Handsy.io/./src/App.vue","webpack://Handsy.io/./src/views/Home.vue?8c23","webpack://Handsy.io/./src/views/Home.vue?a164","webpack://Handsy.io/./src/views/Home.vue","webpack://Handsy.io/./src/views/Profile.vue","webpack://Handsy.io/./src/components/ProfileGameList.vue","webpack://Handsy.io/./src/components/ProfileGameList.vue?46f9","webpack://Handsy.io/./src/views/Profile.vue?24e8","webpack://Handsy.io/./src/views/Staking.vue","webpack://Handsy.io/./src/components/ModalStake.vue","webpack://Handsy.io/./src/components/ModalStake.vue?3209","webpack://Handsy.io/./src/components/ListStaking.vue","webpack://Handsy.io/./src/components/ListStaking.vue?bb61","webpack://Handsy.io/./src/views/Staking.vue?30ad","webpack://Handsy.io/./src/views/Affiliate.vue","webpack://Handsy.io/./src/components/ListAffiliate.vue","webpack://Handsy.io/./src/components/ListAffiliate.vue?dd54","webpack://Handsy.io/./src/views/Affiliate.vue?428e","webpack://Handsy.io/./src/router/index.ts","webpack://Handsy.io/./src/main.ts","webpack://Handsy.io/webpack/bootstrap","webpack://Handsy.io/webpack/runtime/amd options","webpack://Handsy.io/webpack/runtime/chunk loaded","webpack://Handsy.io/webpack/runtime/compat get default export","webpack://Handsy.io/webpack/runtime/define property getters","webpack://Handsy.io/webpack/runtime/ensure chunk","webpack://Handsy.io/webpack/runtime/get javascript chunk filename","webpack://Handsy.io/webpack/runtime/get mini-css chunk filename","webpack://Handsy.io/webpack/runtime/global","webpack://Handsy.io/webpack/runtime/hasOwnProperty shorthand","webpack://Handsy.io/webpack/runtime/load script","webpack://Handsy.io/webpack/runtime/make namespace object","webpack://Handsy.io/webpack/runtime/node module decorator","webpack://Handsy.io/webpack/runtime/publicPath","webpack://Handsy.io/webpack/runtime/jsonp chunk loading","webpack://Handsy.io/webpack/startup"],"sourcesContent":["import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"title\" }, \" Handsy.io \", -1)\nconst _hoisted_2 = { style: {\"display\":\"flex\",\"justify-content\":\"end\",\"align-items\":\"center\",\"gap\":\"40px\"} }\nconst _hoisted_3 = {\n  key: 3,\n  class: \"profile\"\n}\nconst _hoisted_4 = { key: 0 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"nav\", null, [\n      _hoisted_1,\n      _createElementVNode(\"div\", _hoisted_2, [\n        (!_ctx.isInGame && _ctx.loggedin)\n          ? (_openBlock(), _createBlock(_component_router_link, {\n              key: 0,\n              to: \"/affiliate\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Affiliate\")\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (!_ctx.isInGame && _ctx.loggedin)\n          ? (_openBlock(), _createBlock(_component_router_link, {\n              key: 1,\n              to: \"/staking\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Staking\")\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (_ctx.isInGame)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 2,\n              class: \"button-light\",\n              onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.leaveGame && $options.leaveGame(...args)))\n            }, \" Leave \"))\n          : _createCommentVNode(\"\", true),\n        (_ctx.loggedin)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (_ctx.joiningPassword)\n      ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" Joining match: \" + _toDisplayString(_ctx.joiningPassword) + \" ... \", 1))\n      : _createCommentVNode(\"\", true),\n    _createVNode(_component_router_view)\n  ], 64))\n}","<template>\n  <Modal \n    v-model:show=\"showModal\"\n    v-model:winnerPoints=\"winnerPoints\"\n    v-model:loserPoints=\"loserPoints\"\n    v-model:win=\"winModal\"\n    v-model:bet=\"selectedBet\"\n  >\n    Hello world\n  </Modal>\n  <div class=\"content\">\n    <!-- <button\n      class=\"button-dark\"\n      @click=\"emptyBurnerWallet\"\n      >emptyBurnerWallet</button>\n      <button\n            class=\"button-dark\"\n            @click=\"cancelGame\"\n          >\n            Cancel\n          </button> -->\n    <div v-if=\"!isInGame && !isWaiting\">\n      <p style=\"margin:0; margin-bottom:6px;\">Your balance</p>\n      <h1 style=\"margin:0; margin-bottom:22px;\">\n        \n        {{this.balance?.toString().split(\".\")[0]}}\n        <span\n          class=\"decimals\">\n          .{{ this.balance?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n\n        </span>\n        <span\n          class=\"currency-symbol decimals\"\n          style=\"margin:0; margin-left:10px;\"\n        >ETH</span>\n      </h1>\n      <div class=\"address-container\">\n        <profile-item :address=\"this.activeAccount\" />\n        &nbsp;\n        <profile-item-burner v-if=\"isBurner\" :address=\"this.burnerAddress\" :balance=\"burnerBalance\" />\n\n      </div>\n      \n    </div>\n    \n    <!-- <button\n      class=\"button-dark\"\n      @click=\"copyAffiliateLink\"\n    >\n      Copy affiliate link\n    </button> -->\n    <!-- If in game-->\n    <div v-if=\"isInGame\">\n      <!-- <button\n        class=\"button-dark\"\n        @click=\"leaveGame\"\n      >\n        Leave game\n      </button> -->\n      <!-- Round Id-->\n      <div style=\"justify-content: center;\">\n        Round {{ currentRound }} for <a>{{ currentWager }} ETH</a>\n      </div>\n      <div> {{ roundStateString }}</div>\n      <!-- Game view -->\n      <div style=\"display:grid; grid-template-columns: 1fr 1fr 1fr;\">\n          <!-- Selected move-->\n          <div \n          style=\"display: flex; flex-direction:column; gap: 35px; align-items: center;\"\n\n            v-if=\"shouldMove\"\n            >\n            <div style=\"display:flex; gap:20px\">\n              <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 1 }\"></div>\n              <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 2 }\"></div>\n              <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 3 }\"></div>\n            </div>\n            <GameMove v-if=\"bothRevealed\" :move=\"selectedMove\"/>\n            <GameMove v-else :move=\"4\"/>\n            <div class=\"address-container\">\n              <div class=\"profile-mini\"></div>\n                <p class=\"address\">{{ truncateAddress(yourAddress) }}</p>\n            </div>\n            <div class=\"player-balance\">\n              ${{ balance }}\n            </div>\n            <div \n                  style=\"display: flex; flex-direction:column; gap: 10px; align-items: center;\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"selectedMove\"></GameMove>\n                  <p>{{selectedMove == 1 ? \"Rock\" : selectedMove == 2 ? \"Paper\" : \"Scissors\"}}</p>\n              </div>\n            \n          </div>\n          <!-- Choose move-->\n          <div\n            style=\"display: flex; flex-direction:column; gap: 35px; align-items: center;\"\n            v-else\n          >\n          <div style=\"display:flex; gap:20px\">\n            <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 1 }\"></div>\n            <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 2 }\"></div>\n            <div :class=\"{ 'point': true, 'point-active': yourCurrentPoints >= 3 }\"></div>\n          </div>\n          <GameMove v-if=\"bothRevealed\" :move=\"selectedMove\"/>\n            <GameMove v-else :move=\"4\"/>\n          <div class=\"address-container\">\n            <div class=\"profile-mini\"></div>\n              <p class=\"address\">{{ truncateAddress(yourAddress) }}</p>\n          </div>\n          <div class=\"player-balance\">\n            ${{ balance }}\n          </div>\n            <div \n              style=\"display: flex; justify-content: center; gap: 10px;\"\n            >\n              <div \n                  style=\"display: flex; flex-direction:column; gap: 10px; align-items: center;\"\n                  :style=\"{ 'border-color': isRock ? 'yellow' : 'inherit' }\" \n                  @click=\"onRock\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"1\"/>\n                  <p>Rock</p>\n              </div>\n              <div \n                style=\"display: flex; flex-direction:column; gap: 10px; align-items: center;\"\n                  :style=\"{ 'border-color': isPaper ? 'yellow' : 'inherit' }\" \n                  @click=\"onPaper\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"2\"/>\n                  <p>Paper</p>\n              </div>\n              <div \n              style=\"display: flex; flex-direction:column; gap: 10px; align-items: center;\"\n                  :style=\"{ 'border-color': isScissors ? 'yellow' : 'inherit' }\" \n                  @click=\"onScissors\"\n              >\n                  <GameMove :isNormal=\"true\" :move=\"3\"/>\n                  <p>Scissors</p>\n              </div>\n            </div>\n\n            <!-- red button\n            <button\n              class=\"button-dark\"\n              @click=\"sendMove\"\n            >   \n              Submit\n            </button> -->\n\n          </div>\n\n          <div style=\"display:flex; flex-direction:column; height: 100%; align-items: center; gap:35px\">\n            <p>Your bet is</p>\n            <h1 style=\"margin:0; margin-bottom:22px;\">\n              <span\n                class=\"currency-symbol\"\n              >$</span>\n              {{this.selectedBet?.toString().split(\".\")[0]}}\n              <span\n                class=\"decimals\">\n                .{{ this.selectedBet?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n      \n              </span>\n            </h1>\n          </div>\n\n          <!-- Opponent move-->\n          <div \n          >\n              <div class=\"flex flex-column\"\n                  style=\"display: flex; flex-direction:column; gap: 35px; align-items: center;\"\n              >\n                <div style=\"display:flex; gap:20px\">\n                  <div :class=\"{ 'point': true, 'point-active': opponentCurrentPoints >= 1 }\"></div>\n                  <div :class=\"{ 'point': true, 'point-active': opponentCurrentPoints >= 2 }\"></div>\n                  <div :class=\"{ 'point': true, 'point-active': opponentCurrentPoints >= 3 }\"></div>\n                </div>\n                <GameMove v-if=\"bothRevealed\" class=\"flip\" :move=\"opponentMove\"/>\n                  <GameMove class=\"flip\" v-else-if=\"isOpponentMoveSent\" :move=\"5\"/>\n                  <GameMove class=\"flip\" v-else :move=\"4\"/>\n                <div class=\"address-container\">\n                  <div class=\"profile-mini\"></div>\n                   <p class=\"address\">{{ truncateAddress(opponentAddress) }}</p>\n                </div>\n                <div class=\"player-balance\">\n                  ${{ opponentBalance }}\n                </div>\n\n                <div v-if=\"!isOpponentMoveSent\"\n                 class=\"loading\"></div>\n                <div v-else\n                  class=\"checkmark\"\n                >\n\n                </div>\n                  \n                  \n              </div>\n              \n          </div>\n      </div>\n\n    </div>\n\n    <!-- Should find game-->\n    <div class=\"content\" v-else>\n        <!-- Previous Game Result -->\n        <!-- <div v-if=\"previousGame\">\n          <h1 v-if=\"wonLastGame\">You won {{ previousGameWager }} ETH against {{ previousGameOpponent }}</h1>\n          <h1 v-else>You lost {{ previousGameWager }} ETH against {{ previousGameOpponent }}</h1>\n          <h1> {{ previousGamePoints }} : {{ previousGameOpponentPoints }} </h1>\n        </div> -->\n        \n        <!-- Game buttons -->\n        <!-- <div v-if=\"!isRegistering && !isWaiting\">\n          <div>\n            <button v-for=\"(step, index) in wagerSteps\"\n                    class=\"select\"\n                    :key=\"step\"\n                    :class=\"{ 'highlight-select': index === sliderIndex }\"\n                    @click=\"buttonClicked(index)\">\n              {{ step }} ETH\n            </button>\n          </div>\n        </div> -->\n\n        \n        <div style=\"display:flex; align-items:start;\">\n          <button v-if=\"!isRegistering && !isWaiting\" class=\"button-light\" @click=\"buyEth\">\n             <div class=\"plus-symbol\"></div><div>Add Funds</div>\n            </button>\n            <div>\n              \n        <button\n          class=\"button-dark\"\n          v-if=\"!isWaiting\"\n          @click=\"registerGame\"\n        >   \n          <div>\n            {{ isRegistering ? \"Registering...\" : playWithFriend ? \"Play With Friend\" : \"Play with random\" }}\n            &nbsp; \n          </div>\n          <!-- <a>{{ this.wagerSteps[this.sliderIndex] }} ETH</a> -->\n          <select \n          class=\"selector\" \n          style=\"margin-right:-25px;\"\n          :value=\"this.selectedBet\"\n          @input=\"event => selectedBet = event.target.value\"\n          @click.stop\n          >\n            <option v-for=\"step in wagerSteps\" :key=\"step\" :value=\"step\">\n              <span class=\"currency-symbol\">$</span>\n              {{ step }} &nbsp;\n            </option>\n          </select>\n        </button>\n        <p \n          v-if=\"!isRegistering && !isWaiting\"\n          @click=\"togglePlayWithFriend\"\n          class=\"toggle-text\"\n          style=\"margin-top: 30px;\"\n          >\n          {{ playWithFriend ? \"Play with random instead?\": \"Play with friend instead?\" }}\n          <span style=\"color:#E19885; font-weight:bold; text-decoration:underline;\">Switch</span>\n        </p>\n            </div>\n          \n        <div v-if=\"isWaiting\" style=\"display:flex; flex-direction:column; align-items:center; margin-top:-70px;\">\n          <p>You wager is</p>\n          <h1 style=\"margin:0;\"> <span class=\"currency-symbol\">$</span>{{ this.selectedBet }} <span class=\"decimals\">.00</span> </h1>\n          <p style=\"opacity:0.5;\">Waiting for opponent ...</p>\n          <div class=\"searching\"></div>\n          <button\n            class=\"button-dark\"\n            @click=\"cancelGame\"\n          >\n            Cancel\n          </button>\n        </div>\n        \n        </div>\n        \n        <button\n          v-if=\"isWaiting && playWithFriend\"\n          class=\"button-dark\"\n          @click=\"copyPasswordGameLink\"\n        >\n          Copy game link\n        </button>\n    </div>\n\n\n    \n\n\n    \n    \n\n    <!-- <div v-if=\"isUserConnected\">\n\n      <div v-if=\"pastGames && pastGames.length\">\n        <h2>Past games</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Game ID</th>\n              <th>Player A</th>\n              <th>Player B</th>\n              <th>Outcome</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"game in pastGames\" :key=\"game.gameId\">\n              <td>{{ game.gameId }}</td>\n              <td>{{ game.playerA }} played {{ game.moveA }}</td>\n              <td>{{ game.playerB }} played {{ game.moveB }}</td>\n              <td>{{ game.outcome }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div> -->\n  </div>\n  <game-list\n   v-if=\"!isInGame\"\n   :activeData=\"activeGames\"\n   :completedData=\"completedGames\"\n   :pendingData=\"pendingGames\"\n   ></game-list>\n\n</template>\n\n<style>\n\n</style>\n\n<script>\nimport mainContracts from \"../../../contracts/local-contracts.json\"\n\nfunction gameStateToString(state) {\n    if(state == GameStates.Waiting)\n        return \"Waiting\"\n    if(state == GameStates.Sending)\n        return \"Sending move\"\n    if(state == GameStates.Revealing)\n        return \"Revealing move\"\n    if(state == GameStates.Revealed)\n        return \"Revealed move\"\n    if(state == GameStates.Matched)\n        return \"Matched with opponent\"\n    if(state == GameStates.Initial)\n        return \"\"\n    if(state == GameStates.Finished)\n        return \"Game complete\"\n    \n    return \"\"\n    \n}\n\nfunction opponentGameStateToString(state) {\n  if(state == GameStates.Waiting)\n        return \"Waiting\"\n    if(state == GameStates.Sending)\n        return \"Sending move\"\n    if(state == GameStates.Revealing)\n        return \"Revealing move\"\n    if(state == GameStates.Revealed)\n        return \"Revealed move\"\n    if(state == GameStates.Matched)\n        return \"Matched with opponent\"\n    if(state == GameStates.Initial)\n        return \"initial\"\n    if(state == GameStates.Finished)\n        return \"Game complete\"\n    \n    return \"\"\n}\nimport RPC from \"../web3RPC\";\n\nimport GameMove from \"./GameMove.vue\";\nimport GameList from \"./GameList.vue\";\nimport Modal from \"./Modal.vue\";\nimport ProfileItem from \"./ProfileItem.vue\";\nimport { Moves, Outcomes, GameStates } from \"../types\";\nimport Web3 from \"web3\";\nimport { sha256 } from \"js-sha256\";\nimport RampInstantSDK from \"@ramp-network/ramp-instant-sdk\";\nimport { ethers } from 'ethers'\nimport GameListVue from './GameList.vue'\nimport store from '@/store'\nimport { getBurnerWallet, privateKeyToAccount } from '@/utils/burner'\nimport ProfileItemBurner from './ProfileItemBurner.vue'\n\nconst CONTRACT_ADDRESS = mainContracts.deployedContracts.Hands\nconst CONTRACT_ABI = mainContracts.deployedAbis.Hands\n\n//EXAMPLE Game.\n// {\n//   gameId: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n//   playerA: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n//   playerB: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n//   states: {}\n\n//   betAmount: 1,\n//   moveA: 1,\n//   moveB: 2,\n//   outcome: 2, // 0 = draw, 1 = playerA wins, 2 = playerB wins\n// }\n\n\nfunction generateRandomString() {\n  return Math.random().toString(36).substring(2, 15);\n}\n\nfunction calcWinner(moveA, moveB) {\n  if (moveA == moveB) {\n    return Outcomes.Draw;\n  }\n\n  if (moveA == Moves.Rock) {\n    if (moveB == Moves.Paper) {\n      return Outcomes.PlayerB;\n    } else {\n      return Outcomes.PlayerA;\n    }\n  }\n\n  if (moveA == Moves.Paper) {\n    if (moveB == Moves.Scissors) {\n      return Outcomes.PlayerB;\n    } else {\n      return Outcomes.PlayerA;\n    }\n  }\n\n  if (moveA == Moves.Scissors) {\n    if (moveB == Moves.Rock) {\n      return Outcomes.PlayerB;\n    } else {\n      return Outcomes.PlayerA;\n    }\n  }\n}\n\nexport default {\n  components: {\n      GameMove,\n      GameList,\n      Modal,\n      ProfileItem,\n    ProfileItemBurner,\n  },\n  props: {\n    provider: {\n      type: String,\n      default: null,\n    },\n    balance: {\n      type: Number,\n      default: null,  \n    },\n  },\n  data() {\n    return {\n      stripeClientSecret: null,\n      initialized: false,\n      games: {},\n      lastBlockSearched: 0,\n\n      selectedMove: \"\",\n      selectedBet: \"\",\n      randomString: \"\",\n\n      contractInstance: null,\n      contractReadInstance: null,\n      pastGames: [],\n\n      playerRegisteredEvents: [],\n      playerWaitingEvents: [],\n      playersMatchedEvents: [],\n      moveCommittedEvents: [],\n      moveRevealedEvents: [],\n      newRoundEvents: [],\n      gameOutcomeEvents: [],\n      playerCancelledEvents: [],\n\n      wagerSteps: [\"0.01\", \"0.1\", \"1\", \"5\", \"10\"],\n      sliderIndex: 0,\n\n      _lastGameId: -1,\n      activeAccount: null,\n\n      rampSdk: null,\n\n      affiliateContract: null,\n      affiliateOfUser: null,\n\n      playWithFriend: null,\n\n      showModal: false,\n      winnerPoints: 0,\n      loserPoints: 0,\n      winModal: false,\n\n      handledEventIds: new Set(),\n\n      burnerTopUpAmount: 0.001,\n      burnerAddress: null,\n      burnerPrivateKey: null,\n      burnerContractInstance: null,\n      burnerNonce: 0,\n\n      isJoiningPasswordMatch: false,\n      joiningPassword: null,\n\n    };\n  },\n  computed: {\n    isMetamask(){ return this.$store.state.isMetamask },\n    isBurner(){ return this.burnerAddress != null && this.burnerPrivateKey != null && this.burnerContractInstance != null },\n    //Game state\n    getActiveAccount() {        \n      return this.activeAccount?.toLowerCase()\n    },\n    getWeb3() {return new Web3(this.provider);},\n    getWeb3Read() { return new Web3(new Web3.providers.WebsocketProvider(\"wss://maximum-shy-meme.arbitrum-goerli.discover.quiknode.pro/9e608d37bed73e216df881fc52b358d41236b29e/\")) },\n    balance() {\n      const value =  this.$store.state.balance;\n      return (Math.round(value * 100) / 100).toFixed(2);\n    },\n    opponentBalance() {\n      const value =  this.$store.state.balances[this.opponentAddress.toLowerCase()];\n      return (Math.round(value * 100) / 100).toFixed(2);\n    },\n    burnerBalance() {\n      const value =  this.$store.state.balances[this.burnerAddress?.toLowerCase()];\n      return (Math.round(value * 100) / 100).toFixed(2);\n    },\n    //Game state\n    isRock() { return this.selectedMove === Moves.Rock },\n    isPaper() { return this.selectedMove === Moves.Paper },\n    isScissors() { return this.selectedMove === Moves.Scissors;},\n    gameState() {\n      console.log(\"gameState\", this.currentGameId, this.games);\n      if (!this.games[this.currentGameId ?? \"0\"]) {\n        return GameStates.Initial;\n      }\n      if(this.games[this.currentGameId ?? \"0\"].outcome != Outcomes.None) {\n        return GameStates.Initial;\n      }\n      const currentRound = this.games[this.currentGameId ?? \"0\"].round;\n      return this.games[this.currentGameId ?? \"0\"].states[currentRound][this.getActiveAccount.toLowerCase()] ?? GameStates.Matched\n    },\n    yourGameStateToString() { \n      switch(this.gameState) {\n        case GameStates.Initial:\n          return \"Initial\"\n        case GameStates.Waiting:\n          return \"Waiting for opponent\"\n        case GameStates.Sending:\n          return \"Sending move\"\n        case GameStates.Sent:\n          return \"Sent move\"\n        case GameStates.Revealing:\n          return \"Revealing move\"\n        case GameStates.Revealed:\n          return \"Revealed move\"\n        case GameStates.Matched:\n          return \"Matched\"\n        case GameStates.Finished:\n          return \"Game complete\"\n        default:\n          return \"\"\n      }\n    },\n    isRegistering() { return this.gameState == GameStates.Registering },\n    isWaiting() { return this.gameState == GameStates.Waiting },\n    isRevealing() { return this.gameState == GameStates.Revealing },\n    isRevealed() { return this.gameState == GameStates.Revealed },\n    \n    roundStateString() {\n      if(this.bothRevealed){\n        if(this.isWinner){\n          return \"You won!\"\n        } else if(this.isLoser){\n          return \"You lost!\"\n        } else {\n          return \"Draw!\"\n        }\n      } \n      return null\n      \n    },\n    isOpponentMoveRevealed() { return this.opponentState == GameStates.Revealed },\n    bothRevealed() { return this.isRevealed && this.isOpponentMoveRevealed },\n    isInGame() {\n\n       return this.currentGameId !=\"0\" && this.gameState != GameStates.Initial && this.gameState != GameStates.Registering && this.gameState != GameStates.Waiting \n    },\n    isMoveSent() { return this.gameState == GameStates.Sent || this.gameState == GameStates.Revealing || this.gameState == GameStates.Revealed},\n    isOpponentMoveSent() { return this.opponentState == GameStates.Sent || this.opponentState == GameStates.Revealing || this.opponentState == GameStates.Revealed},\n    isGameFinished() { return this.gameState == GameStates.Finished},\n    currentRound() { return this.games[this.currentGameId ?? \"0\"].round },\n    opponentMove() { return this.games[this.currentGameId ?? \"0\"].moves[this.currentRound][this.getOpponentAccount] },\n    isWinner() {\n      //just compare opponentMove to selectedMove\n      return calcWinner(this.selectedMove, this.opponentMove) == Outcomes.PlayerA\n    },\n    isLoser() {\n      //just compare opponentMove to selectedMove\n      return calcWinner(this.selectedMove, this.opponentMove) == Outcomes.PlayerB\n    },\n\n    //get current game id by checking list of games for the last game that is not finished that the current player is a part of\n    currentGameId() {\n      const games = Object.values(this.games).sort((a, b) => b.gameId - a.gameId)\n      console.log(\"currentGameId\", games)\n      const currentGame = games.find(game => \n        game.outcome == Outcomes.None && \n        (game.playerA.toLowerCase() == this.activeAccount.toLowerCase() || \n        game.playerB == this.getActiveAccount)\n      )\n\n\n      console.log(\"games ordered by gameId\", games)\n      console.log(\"currentGameId\", currentGame)\n      return currentGame?.gameId ?? \"0\"\n    },\n\n    previousGame() { \n      //get previous game by searching for the last game that is not the current game\n      //that has a state of finished\n      //that the current player is a part of\n      //search through all of the games by order of greatest gameId to least\n      //find the first game that is not the current game and has a state of finished\n      //that the current player is a part of\n      const games = Object.values(this.games).sort((a, b) => b.gameId - a.gameId)\n      const previousGame = games.find(game => game.gameId !== this.currentGameId && game.outcome != Outcomes.None)\n      console.log(\"games ordered by gameId\", games)\n      console.log(\"previous game\", previousGame)\n      return previousGame\n    },\n    previousGameWager() { return this.previousGame?.bet ?? 0},\n    currentWager() { return this.games[this.currentGameId]?.bet ?? 0},\n    previousGamePoints() { \n      console.log(\"previousGamePoints\", this.previousGame?.points[this.getActiveAccount.toLowerCase()])\n      return this.previousGame?.points[this.getActiveAccount.toLowerCase()] ?? 0\n    },\n    previousGameOpponent() { \n      const playerA = this.previousGame?.playerA?.toLowerCase()\n      const playerB = this.previousGame?.playerB?.toLowerCase()\n      return playerA === this?.getActiveAccount?.toLowerCase() ? playerB : playerA\n    },\n    yourCurrentPoints() { return this.games[this.currentGameId]?.points[this.getActiveAccount?.toLowerCase()] ?? 0},\n    opponentCurrentPoints() { return this.games[this.currentGameId]?.points[this.opponentAddress?.toLowerCase()] ?? 0},\n    previousGameOpponentPoints() { return this.previousGame?.points[this.previousGameOpponent?.toLowerCase()] ?? 0},\n    wonLastGame() { return this.previousGamePoints > this.previousGameOpponentPoints},\n    yourAddress() { return this.getActiveAccount},\n    yourMove() { return this.selectedMove },\n    opponentAddress(){\n      const playerA = this.games[this.currentGameId]?.playerA?.toLowerCase()\n      const playerB = this.games[this.currentGameId]?.playerB?.toLowerCase()\n      return playerA === this?.getActiveAccount?.toLowerCase() ? playerB : playerA\n    },\n    opponentMove() {\n      const opponentAddress = this.opponentAddress?.toLowerCase()\n      const currentGameId = this.currentGameId\n      return this.games[currentGameId?.toLowerCase()]?.moves[this.currentRound]?.[opponentAddress?.toLowerCase()] ?? Moves.None\n    },\n    opponentState() {\n      const opponentAddress = this.opponentAddress?.toLowerCase()\n      const currentGameId = this?.currentGameId\n      const currentRound = this.games[this.currentGameId ?? \"0\"]?.round ?? 0\n      console.log(\"opponentState\", this.games[currentGameId?.toLowerCase()]?.states[currentRound][opponentAddress?.toLowerCase()])\n      return this.games[currentGameId?.toLowerCase()]?.states[currentRound][opponentAddress?.toLowerCase()] ?? GameStates.Initial\n    },\n\n    opponentStateToString() { \n      switch(this.opponentState) {\n        case GameStates.Initial:\n          return \"Choosing move\"\n        case GameStates.Registering:\n          return \"Registering\"\n        case GameStates.Waiting:\n          return \"Waiting\"\n        case GameStates.Matched:\n          return \"Choosing move\"\n        case GameStates.Sending:\n          return \"Sending\"\n        case GameStates.Sent:\n          return \"Sent\"\n        case GameStates.Revealing:\n          return \"Revealing\"\n        case GameStates.Revealed:\n          return \"Revealed\"\n        case GameStates.Finished:\n          return \"Finished\"\n        default:\n          return \"Unknown\"\n      }\n    },\n    isMoveSending() { return this.gameState == GameStates.Sending },\n\n\n    //Seamless transaction handler\n    //Reveal move when both players have successfully sent their move\n    //And not revealing move yet\n    shouldReveal(){\n      console.log(\"shouldReveal\", this.isMoveSent, this.isOpponentMoveSent, this.isGameFinished, this.isRevealing)\n      return this.isMoveSent && this.isOpponentMoveSent && !this.isGameFinished && !this.isRevealing && this.initialized && !this.isRevealed\n    },\n    //should move when in a game and has not sent move yet\n    shouldMove(){\n      return (this.isMoveSent || this.isMoveSending) && this.isInGame\n    },\n    shouldSetAffiliateCode() {\n      //get affiliate code from local storage\n      const affiliateCode = localStorage.getItem(\"affiliateCode\")\n      \n      return affiliateCode && this.affiliateOfUser == ethers.constants.AddressZero\n    },\n\n    //Return array of games that are pending. Where a user is waiting for someone to join\n    pendingGames(){\n      const games = Object.values(this.games)\n      return games.filter(game => game.outcome == Outcomes.None && game.playerB == \"\" && game.gameId != \"0\")\n    },\n    //Return array of games that are ongoing. Where a users are playing a game\n    activeGames(){\n      const games = Object.values(this.games)\n      return games.filter(game => game.outcome == Outcomes.None && game.playerB != \"\" && game.gameId != \"0\")\n    },\n\n    completedGames(){\n      const games = Object.values(this.games)\n      return games.filter(game => game.outcome != Outcomes.None && game.gameId != \"0\")\n    },\n\n    \n  },\n\n  \n\n  async mounted() {\n    console.log(\"provider\", this.provider)\n    this.initialized = false\n    this.fetchPastGames();\n    this.subscribeToEvents();\n\n    console.log(\"ramp sdk\", RampInstantSDK)\n\n    // Load the last sentMove and betAmount from the localStorage\n    const lastSentMove = localStorage.getItem(\"lastSentMove\");\n    const lastRandomString = localStorage.getItem(\"lastRandomString\");\n    const lastBetAmount = localStorage.getItem(\"lastBetAmount\");\n    const playWithFriend = localStorage.getItem(\"playWithFriend\");\n\n    if (lastSentMove) {\n      this.selectedMove = lastSentMove;\n    }\n\n    if (lastBetAmount) {\n      this.selectedBet = lastBetAmount;\n      this.sliderIndex = this.wagerSteps.indexOf(parseFloat(lastBetAmount));\n    }\n\n    if (lastRandomString) {\n      this.randomString = lastRandomString;\n    }\n\n    this.playWithFriend = playWithFriend === \"true\" ? true : false;\n    console.log(\"playWithFriend\", this.playWithFriend);\n    console.log(\"playWithFriend localStorage\", localStorage.getItem(\"playWithFriend\"));\n\n    this.initialized = true\n\n    //set active account\n    await this.getAccount()\n\n    //check affiliate code\n    await this.checkAffililiateCode()\n\n    //check if joining password match\n    await this.checkJoiningPassword()\n    \n  },\n  watch:{\n    games: {\n      handler(newValue, oldValue) {\n        console.log(\"yourGameState\", gameStateToString(this.gameState));\n        console.log(\"games changed\", this.games[this.currentGameId]);\n        store.dispatch(\"setGames\", this.games);\n\n        console.log(\"store games\", store.state.games);\n      },\n      deep: true\n    },\n    isInGame: {\n      handler(newValue, oldValue) {\n        if (newValue) {\n          //fetch oppoennt balance\n          this.$store.dispatch(\"setBalanceOf\",this.opponentAddress)\n\n          console.log(\"isInGame\", newValue);\n        }\n        this.$store.dispatch(\"setIsInGame\",newValue)\n        this.$store.dispatch(\"setLeaveGame\", this.leaveGame)\n      },\n      deep: true,\n      immediate: true,\n    },\n    shouldReveal: {\n      handler(newValue, oldValue) {\n        if (newValue) {\n          console.log(\"is calling revealMove\");\n          this.revealMove();\n        }\n      },\n      deep: true,\n    },\n    isMetamask: {\n      handler(newValue, oldValue) {\n        if (newValue) {\n          this.burnerPrivateKey = getBurnerWallet().value\n          const account = this.getWeb3.eth.accounts.privateKeyToAccount(this.burnerPrivateKey);\n          this.getWeb3.eth.accounts.wallet.add(account); // Add the account to web3.js's wallet\n          this.burnerAddress = account.address;\n          \n          this.burnerContractInstance = new this.getWeb3.eth.Contract(\n            CONTRACT_ABI,\n            CONTRACT_ADDRESS,\n            { from: this.burnerAddress }\n          );\n\n          this.$store.dispatch(\"setBalanceOf\", this.burnerAddress)\n        } \n      },\n      immediate: true,\n    },\n  },\n  methods: {\n    truncateAddress(address) {\n      return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n    },\n    onRock() {\n      this.selectedMove = Moves.Rock;\n      this.sendMove();\n    },\n    onPaper() {\n      this.selectedMove = Moves.Paper;\n      this.sendMove();\n    },\n    onScissors() {\n      this.selectedMove = Moves.Scissors;\n      this.sendMove();\n    },\n    buttonClicked(index) {\n      this.sliderIndex = index;\n      this.sliderValueChanged();\n    },\n    sliderValueChanged() {\n      this.selectedBet = this.wagerSteps[this.sliderIndex];\n    },\n    togglePlayWithFriend() {\n      const localStoragePlayWithFriend = localStorage.getItem(\"playWithFriend\");\n      if (localStoragePlayWithFriend == \"true\") {\n        console.log(\"setting playWithFriend to false\");\n        localStorage.setItem(\"playWithFriend\", false);\n        this.playWithFriend = false;\n      } else {\n        console.log(\"setting playWithFriend to true\");\n        localStorage.setItem(\"playWithFriend\", true);\n        this.playWithFriend = true;\n      }\n      \n    },\n    async getStripeClientSecret(){\n      if(this.activeAccount){\n        fetch(\"/api/stripe_intent\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            address,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setClientSecret(data.client_secret);\n          });\n      }\n    },\n    async getAccount() {\n      const accounts = await this.getWeb3.eth.getAccounts();\n      console.log(\"accounts\", accounts);\n      this.activeAccount = accounts[0];\n      return accounts[0];\n    },\n    async setContract() {\n      //create websockets provider\n\n      this.contractInstance = new this.getWeb3.eth.Contract(\n        CONTRACT_ABI,\n        CONTRACT_ADDRESS,\n      );\n\n      this.contractReadInstance = new this.getWeb3Read.eth.Contract(\n        CONTRACT_ABI,\n        CONTRACT_ADDRESS,\n      );\n\n      console.log(\"contractInstance\", this.contractInstance);\n\n      //Set Affiliate contract\n      this.affiliateContract = new this.getWeb3.eth.Contract(\n          mainContracts.deployedAbis.Affiliate,\n          mainContracts.deployedContracts.Affiliate\n      );\n    },\n\n    async getBlockNumber() {\n      const blockNumber = await this.getWeb3.eth.getBlockNumber();\n      //console.log(\"blockNumber\", blockNumber);\n      return blockNumber;\n    },\n    async getContract() {\n      if (!this.contractInstance) {\n        await this.setContract();\n      }\n      return this.contractInstance;\n    },\n\n    async getReadContract() {\n      if (!this.contractReadInstance) {\n        await this.setContract();\n      }\n      return this.contractReadInstance;\n    },\n\n    createGame(gameId, playerA=\"\"){\n      this.games[gameId] = {\n        gameId,\n        playerA: playerA.toLowerCase(),\n        playerB: \"\",\n        states: {\n            [0]: {\n                [playerA.toLowerCase()]: GameStates.Initial,\n            }\n        },\n        bet: 0,\n        moves: {\n          [0]: {\n            [playerA.toLowerCase()]: Moves.None,\n          },\n        },\n        outcome: Outcomes.None,\n        points: {\n          [playerA.toLowerCase()]: 0,\n        },\n        round: 0,\n      };\n    },\n\n    setLastGameId(gameId) {\n      console.log(\"setting last game\", gameId);\n      this._lastGameId = parseInt(gameId);\n    },\n\n    isNewestGameId(gameId) {\n      return parseInt(gameId) >= this._lastGameId && gameId >= this.currentGameId;\n    },\n\n    getGame(gameId) {\n      return this.games[gameId]\n    },\n\n    getGameCurrentRound(gameId) {\n      return this.games[gameId].length - 1;\n    },\n\n    convertTimestampToTime(timestamp) {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds by multiplying by 1000\n    let hours = date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    const strTime = hours + ':' + minutes.substr(-2) + ' ' + ampm;\n    return strTime;\n},\n\n//send funds from burner wallet to user wallet\n//use burnerWallet private/ burner wallet instance\n//get balance, send the entire balance to this.activeWallet\n  async emptyBurnerWallet() {\n    console.log(\"Initiating process to empty burner wallet.\")\n\n    // Get balance\n    const balance = await this.getWeb3.eth.getBalance(this.burnerAddress);\n    console.log(\"Current balance\", balance);\n\n    // Calculate and assign gas price\n    const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n    const gasLimit = 3000000;\n\n    // Calculate total gas cost\n    const totalGasCost = gasPrice * gasLimit;\n\n    // Calculate amount that can be transferred considering the gas cost\n    const transferableAmount = balance - totalGasCost;\n\n    // Create a transaction\n    const transaction = {\n        from: this.burnerAddress,\n        to: this.activeAccount,\n        value: transferableAmount,\n        gasPrice,\n        gasLimit\n    };\n\n    // Sign the transaction\n    const signedTransaction = await this.getWeb3.eth.accounts.signTransaction(transaction, this.burnerPrivateKey);\n\n    // Send the signed transaction\n    this.getWeb3.eth.sendSignedTransaction(signedTransaction.rawTransaction)\n    .on('transactionHash', (transactionHash) => {\n        console.log(\"Transaction Hash\", transactionHash)\n    })\n    .on('error', (err) => {\n        console.log(\"An error occurred during transaction\", err);\n    });\n},\n\n\n\n\n    \n    //Whenever a new game is registered\n    async handleRegisterEvent(event, userAddress) {\n      console.log(\"PlayerRegistered event:\", event.returnValues);\n      const { gameId, playerAddress } = event.returnValues;\n      \n      //check if gameId is in games\n      if (!this.getGame(gameId, 0)) \n        this.createGame(gameId, playerAddress);\n\n      //set playerA\n      //this.getGame(gameId).playerA = playerAddress.toLowerCase()\n      \n      //set players state to waiting if hasnt already\n      this.getGame(gameId).states[0][playerAddress.toLowerCase()] = GameStates.Waiting;  \n      \n      const block = await this.getWeb3Read.eth.getBlock(event.blockNumber);\n      const timestamp = block.timestamp;\n      this.getGame(gameId).time = this.convertTimestampToTime(timestamp)\n      \n      //set currentGameId if user is in game\n    },\n\n    //Whenever has created a match and is waiting for another player to join\n    //We set the bet value and the state to waiting\n    handleWaitingEvent(event) {\n      console.log(\"PlayerWaiting event:\", event.returnValues);\n      const { gameId, bet, playerAddress, first } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.getGame(gameId, 0))\n        this.createGame(gameId);\n      \n      // //set players state to waiting\n      // const playerA = this.getGame(gameId).playerA.toLowerCase()\n      // const playerB = this.getGame(gameId).playerB.toLowerCase()\n\n      //set player state to waiting if only one player is available\n      const matchedAlready = this.getGame(gameId).states[0][playerAddress.toLowerCase()] == GameStates.Matched;\n      if(!matchedAlready){\n        this.getGame(gameId).states[0][playerAddress.toLowerCase()] = GameStates.Waiting;\n        if(first){\n          this.getGame(gameId).playerA = playerAddress.toLowerCase()\n        } else {\n          this.getGame(gameId).playerB = playerAddress.toLowerCase()\n        }\n      }\n\n      //set bet amount\n      this.getGame(gameId).bet = bet * 10 ** -18;\n    },\n\n\n    handlePlayersMatchedEvent(event) {\n      console.log(\"PlayersMatched event:\", event.returnValues);\n      const { gameId, playerA, playerB } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.getGame(gameId))\n        this.createGame(gameId, playerA);\n      \n      //set player values\n      this.getGame(gameId).playerA = playerA.toLowerCase()\n      this.getGame(gameId).playerB = playerB.toLowerCase()\n\n      //set player states\n      this.getGame(gameId).states[0][playerA.toLowerCase()] = GameStates.Matched;\n      this.getGame(gameId).states[0][playerB.toLowerCase()] = GameStates.Matched;\n\n      //Check if player is in game\n      console.log(\"setting game to matched\");\n    },\n\n    handleMoveSentEvent(event) {\n      console.log(\"MoveSent event:\", event.returnValues);\n      const { gameId, round, playerAddress } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.getGame(gameId))\n        this.createGame(gameId, playerAddress);\n\n      //Check if round is in moves\n      if (!this.getGame(gameId).moves[round])\n        this.getGame(gameId).moves[round] = {};\n      \n      //Check if round is in states\n      if (!this.getGame(gameId).states[round])\n        this.getGame(gameId).states[round] = {};\n\n      //set player state\n      this.getGame(gameId).states[round][playerAddress.toLowerCase()] = GameStates.Sent;\n    },\n\n    handleRevealedEvent(event) {\n      console.log(\"MoveRevealed event:\", event.returnValues);\n      const { gameId, round, playerAddress, move } = event.returnValues;\n      \n      //check if gameId is in games\n      if (!this.getGame(gameId))\n        this.createGame(gameId, playerAddress);\n      \n      //Check if round is in moves\n      if (!this.getGame(gameId).moves[round])\n        this.getGame(gameId).moves[round] = {};\n\n      //Check if round is in states\n      if (!this.getGame(gameId).states[round])\n        this.getGame(gameId).states[round] = {};\n\n      //set player move\n      this.games[gameId].moves[round][playerAddress.toLowerCase()] = move;\n\n      //set player state\n      this.games[gameId].states[round][playerAddress.toLowerCase()] = GameStates.Revealed;\n    },\n\n    //Handle new round event\n    handleNewRoundEvent(event) {\n      console.log(\"NewRound event:\", event.returnValues);\n      const { gameId, round, pointsA, pointsB } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.games[gameId])\n        this.createGame(gameId);\n\n      //Check if round is in states\n      if (!this.games[gameId].states[round])\n        this.games[gameId].states[round] = {};\n\n      //Check if round is in moves\n      if (!this.games[gameId].moves[round])\n        this.games[gameId].moves[round] = {};\n\n      //set round\n      this.games[gameId].round = round;\n\n      //set points\n      this.games[gameId].points[this.games[gameId].playerA.toLowerCase()] = pointsA;\n      this.games[gameId].points[this.games[gameId].playerB.toLowerCase()] = pointsB;\n\n      console.log(\"setting new points for gameId\", gameId, pointsA, pointsB);\n\n      //reset game state to matched if not revealed or sent\n      // this.games[gameId].states[round][this.games[gameId].playerA.toLowerCase()] = GameStates.Matched;\n      \n      // this.games[gameId].states[round][this.games[gameId].playerB.toLowerCase()] = GameStates.Matched;\n      \n      \n    },\n    \n    handleOutcomeEvent(event, isSubscription = false) {\n      console.log(\"GameOutcome event:\", event.returnValues);\n      const { gameId, outcome } = event.returnValues;\n\n      //if subscription then set modal and make sure isSubscription is a boolean\n      if (isSubscription === true && typeof isSubscription === \"boolean\" && (this.games[gameId]?.playerA?.toLowerCase() == this.activeAccount?.toLowerCase() || this.games[gameId]?.playerB?.toLowerCase() == this.activeAccount.toLowerCase())) { \n        console.log(\"setting modal\");\n        //get winner and loser points from yourCurrentPoints and opponentCurrentPoints\n        this.winnerPoints = this.yourCurrentPoints > this.opponentCurrentPoints ? this.yourCurrentPoints : this.opponentCurrentPoints;\n        this.loserPoints = this.yourCurrentPoints < this.opponentCurrentPoints ? this.yourCurrentPoints : this.opponentCurrentPoints;\n        this.winModal = this.yourCurrentPoints > this.opponentCurrentPoints;\n        this.showModal = true;\n        //empty burner wallet\n        this.emptyBurnerWallet()\n      }\n\n      //check if gameId is in games\n      if (!this.games[gameId])\n        this.createGame(gameId);\n\n      //set outcome\n      this.games[gameId].outcome = outcome;\n\n      //check if user is in game, if so reset game \"0\"\n      if (this.games[gameId].playerA.toLowerCase() == this.activeAccount.toLowerCase() || this.games[gameId].playerB.toLowerCase() == this.activeAccount.toLowerCase()) {\n        this.createGame(\"0\");\n      }\n    },\n\n    //If the game id that was cancelled was yours then reset the current game id and remove the game\n    handlePlayerCancelledEvent(event, isSubscription = false) {\n      console.log(\"PlayerCancelled event:\", event.returnValues);\n      const { gameId, playerAddress } = event.returnValues;\n\n      //check if gameId is in games\n      if (!this.games[gameId])\n        this.createGame(gameId, playerAddress);\n\n      //set game outcome\n      this.games[gameId].outcome = Outcomes.Cancelled;\n\n      if (this.games[gameId].playerA.toLowerCase() == this.activeAccount.toLowerCase() || this.games[gameId].playerB.toLowerCase() == this.activeAccount.toLowerCase()) {\n        this.createGame(\"0\");\n      }\n\n      //if subscription then set modal and make sure isSubscription is a boolean\n      if (isSubscription === true && typeof isSubscription === \"boolean\" && playerAddress == this.activeAccount.toLowerCase()) {\n        //empty burner wallet\n        this.emptyBurnerWallet()\n      }\n    },\n\n    async subscribeToEvents() {\n    const contract = await this.getReadContract();\n    const userAddress = await this.getAccount();\n\n    console.log(\"Subscribing to events...\");\n    console.log(\"contract:\", contract);\n\n    const eventNames = [\n        \"PlayerRegistered\",\n        \"PlayerWaiting\",\n        \"PlayersMatched\",\n        \"MoveCommitted\",\n        \"MoveRevealed\",\n        \"NewRound\",\n        \"GameOutcome\",\n        \"PlayerCancelled\",\n    ];\n\n    const eventHandlers = {\n        PlayerRegistered: this.handleRegisterEvent,\n        PlayerWaiting: this.handleWaitingEvent,\n        PlayersMatched: this.handlePlayersMatchedEvent,\n        MoveCommitted: this.handleMoveSentEvent,\n        MoveRevealed: this.handleRevealedEvent,\n        NewRound: this.handleNewRoundEvent,\n        GameOutcome: this.handleOutcomeEvent,\n        PlayerCancelled: this.handlePlayerCancelledEvent,\n    };\n\n    // Create a new set for keeping track of handled event ids\n    const handledEventIds = new Set();\n\n    for (const eventName of eventNames) {\n        contract.events[eventName]()\n        .on('data', (event) => {\n            const eventId = `${event.transactionHash}-${eventName}-${event.logIndex}`;\n\n            if (handledEventIds.has(eventId)) {\n                return;\n            }\n\n            console.log(`New ${eventName} event detected:`, event);\n            if(eventName == \"GameOutcome\" || eventName == \"PlayerCancelled\"){\n                eventHandlers[eventName].call(this, event, true);\n            }\n            if (eventName === \"NewRound\") {\n                setTimeout(() => {\n                    eventHandlers[eventName].call(this, event, userAddress);\n                }, 1000); // Add a 1-second delay before handling the NewRound event\n            } else {\n                eventHandlers[eventName].call(this, event, userAddress);\n            }\n\n            handledEventIds.add(eventId);\n        })\n        .on('error', (error) => {\n            console.error(`Error on event ${eventName}:`, error);\n        });\n    }\n}\n,\n\n\n\n    async setPassword() {\n      const password = await generateRandomString();\n      const passwordHash = \"0x\" + sha256(password);\n      //store in local storage\n      localStorage.setItem(\"passwordHash\", passwordHash);\n      localStorage.setItem(\"password\", password);\n    },   \n    \n    getPassword() {\n      const password = localStorage.getItem(\"password\");\n      return password;\n    },\n\n    getPasswordHash() {\n      const passwordHash = localStorage.getItem(\"passwordHash\");\n      return passwordHash;\n    },\n\n    async getActiveGameId() {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n        return gameId;\n      } catch (error) {\n        //console.error(\"Error getting active gameId:\", error);\n      }\n    },\n\n    //copy affiliate link to clipboard\n    //affiliate link is the current url with the user's address appended to the end as a query string\n    copyAffiliateLink() {\n      const url = new URL(window.location.href);\n      url.searchParams.set(\"ref\", this.getActiveAccount);\n      navigator.clipboard.writeText(url.href);\n      alert(\"Copied to clipboard!\");\n    },\n\n    copyPasswordGameLink(){\n      const url = new URL(window.location.href);\n      const password = this.getPassword();\n      url.searchParams.set(\"game\", password);\n      const bet = this.selectedBet;\n      url.searchParams.set(\"bet\", bet);\n      navigator.clipboard.writeText(url.href);\n    },\n\n    //calls the affiliate contract this.affiliateContract\n    async registerAsConsumer(){\n      console.log(\"Registering as consumer...\")\n      alert(\"Registering as consumer...\")\n      if (this.affiliateContract){\n        try {\n          const accounts = await this.getWeb3.eth.getAccounts();\n          const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n          const gasLimit = 3000000;\n\n          //get affilaite address from local storage \n          const affiliateAddress = localStorage.getItem(\"affiliateCode\");\n          console.log(\"affiliateAddress:\", affiliateAddress);\n\n\n          const result = await this.affiliateContract.methods.registerAsConsumer(affiliateAddress).send({\n            from: this.activeAccount,\n            gasPrice,\n            gasLimit,\n          });\n          console.log(\"registerAsConsumer result:\", result);\n        } catch (error) {\n          console.error(\"Error registering as consumer:\", error);\n        }\n      }\n\n    },\n\n\n    //Join or create a new game\n    async registerGame() {\n      if(this.playWithFriend){\n        await this.createPasswordGame();\n        return;\n      }\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      if(this.shouldSetAffiliateCode){\n        //await this.registerAsConsumer();\n      }else{\n        console.log(\"Not registering as consumer...\")\n      }\n\n      try {\n        console.log(\"Registering game...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Registering;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const betInWei = this.getWeb3.utils.toWei(this.selectedBet.toString(), \"ether\");\n\n        //get playerGame mapping\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n        console.log(\"gameId:\", gameId);\n\n        //check if burner\n        if(this.isBurner){\n          const totalValue = this.getWeb3.utils.toWei((this.burnerTopUpAmount + parseFloat(this.selectedBet)).toString(), \"ether\");\n          console.log(\"totalValue:\", totalValue);\n          const result = await this.burnerContractInstance.methods\n          .registerWithBurner(this.burnerAddress, betInWei)\n          .send({ from: accounts[0], value: totalValue, gasPrice, gasLimit });\n          this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n\n        }else{\n          const result = await this.contractInstance.methods\n          .register()\n          .send({ from: accounts[0], value: betInWei, gasPrice, gasLimit });\n        }\n                \n\n        localStorage.setItem(\"lastBetAmount\", this.selectedBet);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Initial;\n\n        //revert selected move\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    //Create password game\n    async createPasswordGame() {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      try {\n        console.log(\"Creating password game...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Registering;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const betInWei = this.getWeb3.utils.toWei(this.selectedBet.toString(), \"ether\");\n\n        //get playerGame mapping\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n\n        //set password\n        await this.setPassword();\n        const passwordHash = this.getPasswordHash();\n        console.log(\"gameId:\", gameId);\n        if(this.isBurner){\n          const totalValue = this.getWeb3.utils.toWei((this.burnerTopUpAmount + parseFloat(this.selectedBet)).toString(), \"ether\");\n          const result = await this.burnerContractInstance.methods\n          .createPasswordMatchWithBurner(this.burnerAddress, betInWei, passwordHash)\n          .send({ from: accounts[0], value: totalValue, gasPrice, gasLimit });\n          this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n\n        }else {\n          const result = await this.contractInstance.methods\n          .createPasswordMatch(passwordHash)\n          .send({ from: accounts[0], value: betInWei, gasPrice, gasLimit });\n\n        }\n                \n\n        localStorage.setItem(\"lastBetAmount\", this.selectedBet);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Initial;\n\n        //revert selected move\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    //Join password match\n    async joinPasswordMatch(password, betAmount) {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n      this.selectedBet = betAmount;\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      if(this.shouldSetAffiliateCode){\n        await this.registerAsConsumer();\n      }else{\n        console.log(\"Not registering as consumer...\")\n      }\n\n      try {\n        console.log(\"Joining password match...\", this.currentGameId);\n        this.$store.dispatch(\"setIsJoiningPasswordMatch\", true);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Registering;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        const betInWei = this.getWeb3.utils.toWei(this.selectedBet.toString(), \"ether\");\n\n        //get playerGamje mapping\n        const gameId = await this.contractInstance.methods\n          .playerGame(accounts[0])\n          .call({ from: accounts[0] });\n\n        //set password\n        console.log(\"gameId:\", gameId);\n        if(this.isBurner){\n          const totalValue = this.getWeb3.utils.toWei((this.burnerTopUpAmount + parseFloat(this.selectedBet)).toString(), \"ether\");\n          const result = await this.burnerContractInstance.methods\n          .joinPasswordMatchWithBurner(this.burnerAddress, betInWei, password)\n          .send({ from: accounts[0], value: totalValue, gasPrice, gasLimit });\n          this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n\n        }else{\n          const result = await this.contractInstance.methods\n          .joinPasswordMatch(password)\n          .send({ from: accounts[0], value: betInWei, gasPrice, gasLimit });\n        }        \n\n        localStorage.setItem(\"lastBetAmount\", this.selectedBet);\n\n        this.$store.dispatch(\"setIsJoiningPasswordMatch\", false);\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[0][this.getActiveAccount] = GameStates.Initial;\n\n        //revert selected move\n        console.error(\"Error registering game:\", error);\n\n        this.$store.dispatch(\"setIsJoiningPasswordMatch\", false);\n      }\n    },\n\n    //Send move to the contract\n    async sendMove(){\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      if (!this.selectedBet) {\n        alert(\"Please select a bet amount.\");\n        return;\n      }\n\n      try {\n        console.log(\"Sending game...\", this.currentGameId);\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\")\n        this.games[this.currentGameId ?? \"0\"].states[this.currentRound][this.getActiveAccount] = GameStates.Sending;\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n        this.randomString = generateRandomString(); // Save randomString\n        const encryptedMove =\n          \"0x\" + sha256(this.selectedMove + this.randomString);\n        console.log(\"clearMove:\", this.selectedMove + this.randomString);\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        if(this.isBurner){\n          this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n          const result = await this.burnerContractInstance.methods\n          .commit(parseInt(this.currentGameId), encryptedMove)\n          .send({ from: this.burnerAddress, gasPrice, gasLimit, nonce: this.burnerNonce++ });\n        }else{\n          const result = await this.contractInstance.methods\n          .commit(parseInt(this.currentGameId), encryptedMove)\n          .send({ from: accounts[0], gasPrice, gasLimit });\n          console.log(\"Game registered:\", result);\n        }\n        \n        // Store the last sentMove and betAmount in the localStorage\n        localStorage.setItem(\"lastSentMove\", this.selectedMove);\n        localStorage.setItem(\"lastRandomString\", this.randomString);\n        \n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        if (!this.games[this.currentGameId ?? \"0\"]) \n          this.createGame(this.currentGameId ?? \"0\");\n        this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = prevState\n\n        //revert selected move\n        this.selectedMove = \"\";\n        console.error(\"Error registering game:\", error);\n      }\n    },\n\n    async cancelGame(){\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        console.log(\"Cancelling game...\", this.currentGameId);\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\")\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = GameStates.Cancelling;\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        // if(this.isBurner){\n        //   this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n        //   const result = await this.burnerContractInstance.methods\n        //   .cancel(parseInt(this.currentGameId))\n        //   .send({ from: this.burnerAddress, gasPrice, gasLimit, nonce: this.burnerNonce++ });\n        // }else{\n          const result = await this.contractInstance.methods\n            .cancel(parseInt(this.currentGameId))\n            .send({ from: accounts[0], gasPrice, gasLimit });\n          console.log(\"Game cancelled:\", result);\n        //}\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\");\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = prevState\n\n        // //revert selected move\n        // this.selectedMove = \"\";\n        console.error(\"Error cancelling game:\", error);\n      }\n    },\n\n    async leaveGame(){\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        console.log(\"Leaving game...\", this.currentGameId);\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\")\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = GameStates.Cancelling;\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        if(this.isBurner){\n          this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n          const result = await this.burnerContractInstance.methods\n          .leave(parseInt(this.currentGameId))\n          .send({ from: this.burnerAddress, gasPrice, gasLimit, nonce: this.burnerNonce++ });\n        } else {\n        const result = await this.contractInstance.methods\n          .leave(parseInt(this.currentGameId))\n          .send({ from: accounts[0], gasPrice, gasLimit });\n        console.log(\"Game left:\", result);\n        }\n\n        // Update the gameState to Waiting\n        //console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //set back to initial state\n        // if (!this.games[this.currentGameId ?? \"0\"]) \n        //   this.createGame(this.currentGameId ?? \"0\");\n        // this.games[this.currentGameId ?? \"0\"].states[this.getActiveAccount] = prevState\n\n        // //revert selected move\n        // this.selectedMove = \"\";\n        console.error(\"Error cancelling game:\", error);\n      }\n    },\n\n    async revealMove() {\n      const prevState = this.gameState;\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        // Update the gameState to Revealing\n        if (!this.games[this.currentGameId]) \n          this.createGame(this.currentGameId)\n        this.games[this.currentGameId].states[this.getActiveAccount] = GameStates.Revealing;\n\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const clearMove = `${this.selectedMove}${this.randomString}`; // Use saved randomString\n        const gasPrice = this.getWeb3.utils.toWei(\"0.3\", \"gwei\");\n        const gasLimit = 3000000;\n\n        if(this.isBurner){\n          this.burnerNonce = await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress, 'pending');\n          const result = await this.burnerContractInstance.methods\n          .reveal(parseInt(this.currentGameId), clearMove)\n          .send({ from: this.burnerAddress, gasPrice, gasLimit, nonce: this.burnerNonce++ });\n        }else{\n        const result = await this.contractInstance.methods\n          .reveal(this.currentGameId, clearMove)\n          .send({ from: accounts[0], gasPrice, gasLimit });\n        }\n\n        //console.log(\"Move revealed:\", result);\n\n        // Automatically update the gameId to get the outcome\n\n        \n        console.log(\"Current gameState:\", this.games[this.currentGameId].states[this.getActiveAccount]);\n      } catch (error) {\n        //Update the gameState to Matched\n        if (!this.games[this.currentGameId]) \n          this.createGame(this.currentGameId)\n        this.games[this.currentGameId].states[this.getActiveAccount] = GameStates.Sent\n        console.error(\"Error revealing move:\", error);\n      }\n    },\n    \n    async getGameOutcome() {\n      if (!this.contractInstance) {\n        this.contractInstance = new this.getWeb3.eth.Contract(\n          CONTRACT_ABI,\n          CONTRACT_ADDRESS\n        );\n      }\n\n      try {\n        const accounts = await this.getWeb3.eth.getAccounts();\n        const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n        const gasLimit = 3000000;\n        const result = await this.contractInstance.methods\n          .getOutcome(this.currentGameId)\n          .call({ from: accounts[0], gasPrice, gasLimit });\n        console.log(\"Game outcome:\", result);\n        //this.gameInfo.outcome = result;\n      } catch (error) {\n        console.error(\"Error getting game outcome:\", error);\n      }\n    },\n\n    async fetchPlayerRegisteredEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.playerRegisteredEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"PlayerRegistered\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.playerRegisteredEvents.push(...events);\n\n          // Log the events\n          console.log(\"playerRegisteredEvents:\", this.playerRegisteredEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchPlayerWaitingEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.playerWaitingEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"PlayerWaiting\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.playerWaitingEvents.push(...events);\n\n          // Log the events\n          console.log(\"playerWaitingEvents:\", this.playerWaitingEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchPlayersMatchedEvents(startBlock, endBlock){\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.playersMatchedEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"PlayersMatched\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.playersMatchedEvents.push(...events);\n\n          // Log the events\n          console.log(\"playersMatchedEvents:\", this.playersMatchedEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchPlayersMoveCommittedEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.moveCommittedEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"MoveCommitted\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.moveCommittedEvents.push(...events);\n\n          // Log the events\n          console.log(\"moveCommittedEvents:\", this.moveCommittedEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchMoveRevealedEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.moveRevealedEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"MoveRevealed\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.moveRevealedEvents.push(...events);\n\n          // Log the events\n          console.log(\"moveRevealedEvents:\", this.moveRevealedEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchNewRoundEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.newRoundEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"NewRound\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.newRoundEvents.push(...events);\n\n          // Log the events\n          console.log(\"newRoundEvents:\", this.newRoundEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchGameOutcomeEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.gameOutcomeEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"GameOutcome\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.gameOutcomeEvents.push(...events);\n\n          // Log the events\n          console.log(\"gameOutcomeEvents:\", this.gameOutcomeEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n    \n    async fetchPlayerCancelledEvents(startBlock, endBlock) {\n      const blockLimit = 50000; // Maximum blocks that can be fetched in one request\n      const contract = await this.getContract();\n\n      // Initialize events array\n      this.playerCancelledEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n          const events = await contract.getPastEvents(\"PlayerCancelled\", {\n              fromBlock: fromBlock,\n              toBlock: toBlock\n          });\n\n          // Add the fetched events to the existing array\n          this.playerCancelledEvents.push(...events);\n\n          // Log the events\n          console.log(\"playerCancelledEvents:\", this.playerCancelledEvents.map(e => e.returnValues));\n\n          // Update blocks for the next iteration\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    addToHandledEvents(event, eventName) {\n      const eventId = `${event.transactionHash}-${eventName}-${event.logIndex}`;\n      this.handledEventIds.add(eventId);\n    },\n    \n    async processEvents() {\n      // Get the current user's address\n      const userAddress = await this.getAccount();\n\n      // Iterate over the playerRegisteredEvents\n      // Call handlePlayerRegisteredEvent for each event\n      for (const event of this.playerRegisteredEvents) {\n        this.handleRegisterEvent(event, userAddress);\n        this.addToHandledEvents(event, \"PlayerRegistered\");\n      }\n\n      // Iterate over the playerWaitingEvents\n      // Call handlePlayerWaitingEvent for each event\n      for (const event of this.playerWaitingEvents) {\n        this.handleWaitingEvent(event)\n        this.addToHandledEvents(event, \"PlayerWaiting\");\n\n      }\n\n      // Iterate over the playerCancelledEvents\n      // Call handlePlayerCancelledEvent for each event\n      for (const event of this.playerCancelledEvents) {\n        this.handlePlayerCancelledEvent(event)\n        this.addToHandledEvents(event, \"PlayerCancelled\");\n      }\n\n      // Iterate over the playersMatchedEvents\n      // Call handlePlayersMatchedEvent for each event\n      for (const event of this.playersMatchedEvents) {\n        this.handlePlayersMatchedEvent(event)\n        this.addToHandledEvents(event, \"PlayersMatched\");\n      }\n\n      // Iterate over the moveCommittedEvents\n      // Call handleMoveSentEvent for each event\n      for (const event of this.moveCommittedEvents) {\n        this.handleMoveSentEvent(event)\n        this.addToHandledEvents(event, \"MoveCommitted\");\n      }\n\n      // Iterate over the moveRevealedEvents\n      // Call handleMoveRevealedEvent for each event\n      for (const event of this.moveRevealedEvents) {\n        this.handleRevealedEvent(event)\n        this.addToHandledEvents(event, \"MoveRevealed\");\n      }\n\n      // Iterate over the newRoundEvents\n      // Call handleNewRoundEvent for each event\n      for (const event of this.newRoundEvents) {\n        this.handleNewRoundEvent(event)\n        this.addToHandledEvents(event, \"NewRound\");\n      }\n\n      // Iterate over the gameOutcomeEvents\n      // Call handleGameOutcomeEvent for each event\n      for (const event of this.gameOutcomeEvents) {\n        this.handleOutcomeEvent(event)\n        this.addToHandledEvents(event, \"GameOutcome\");\n      }\n\n      \n    },\n\n    //checkAffiliateCode in ref query string\n    async checkAffililiateCode() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const affiliateCode = urlParams.get('ref');\n      if (affiliateCode) {\n        //set local storage affiliate code\n        //if there is no affiliate code in local storage\n        localStorage.setItem(\"affiliateCode\", affiliateCode)\n\n        \n      }\n      //set the affiliate address defined in the affiliate contract\n      this.affiliateOfUser = await this.affiliateContract.methods.getAffiliateOfConsumer(this.activeAccount).call();\n\n      console.log(\"affiliate of user\", this.affiliateOfUser)\n\n    },\n\n    async checkJoiningPassword() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const joiningPassword = urlParams.get('game');\n      const betAmount = urlParams.get('bet');\n\n      \n\n      if(joiningPassword && !this.isInGame && !this.isJoiningGame && betAmount) {\n        this.$store.dispatch(\"setJoiningPassword\", joiningPassword);\n        await this.joinPasswordMatch(joiningPassword, betAmount);\n\n        //clear query string from url\n        var url = new URL(window.location.toString());\n        url.search = '';\n        window.history.replaceState({}, document.title, url.toString());\n        this.$store.dispatch(\"setJoiningPassword\", \"\");\n        this.$store.dispatch(\"setIsJoiningPasswordMatch\", false);\n\n      }\n      \n    },\n\n    async fetchPastGames() {\n      const fromBlock = 32000576;\n      const toBlock = await this.getWeb3.eth.getBlockNumber();\n\n      await this.fetchPlayerRegisteredEvents(fromBlock, toBlock);\n      await this.fetchPlayerWaitingEvents(fromBlock, toBlock);\n      await this.fetchPlayersMatchedEvents(fromBlock, toBlock);\n      await this.fetchPlayersMoveCommittedEvents(fromBlock, toBlock);\n      await this.fetchMoveRevealedEvents(fromBlock, toBlock);\n      await this.fetchNewRoundEvents(fromBlock, toBlock);\n      await this.fetchGameOutcomeEvents(fromBlock, toBlock);\n      await this.fetchPlayerCancelledEvents(fromBlock, toBlock);\n\n\n      this.processEvents();\n    },\n  },\n};\n</script>\n","import type { SafeEventEmitterProvider } from \"@web3auth/base\";\nimport Web3 from \"web3\";\n\nexport default class EthereumRpc {\n  private provider: SafeEventEmitterProvider;\n\n  constructor(provider: any) {\n    this.provider = provider;\n  }\n\n  async getChainId(): Promise<string> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get the connected Chain's ID\n      const chainId = await web3.eth.getChainId();\n\n      return chainId.toString();\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async getAccounts(): Promise<any> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const address = await web3.eth.getAccounts();\n\n      return address;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async getBalance(): Promise<string> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const address = (await web3.eth.getAccounts())[0];\n\n      // Get user's balance in ether\n      const balance = web3.utils.fromWei(\n        await web3.eth.getBalance(address) // Balance is in wei\n      );\n\n      return balance;\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async getBalanceOf(address: string): Promise<string> {\n    try {\n      console.log(\"getting balance of\", address)\n      console.log(\"getting balance of with provider\", this.provider)\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's balance in ether\n      const balance = web3.utils.fromWei(\n        await web3.eth.getBalance(address) // Balance is in wei\n      );\n\n      return balance;\n    } catch (error) {\n      console.log(\"error getting balance of\", error)  \n      return \"0\";\n    }\n  }\n\n  async sendTransaction(): Promise<any> {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const fromAddress = (await web3.eth.getAccounts())[0];\n\n      const destination = fromAddress;\n\n      const amount = web3.utils.toWei(\"0.001\"); // Convert 1 ether to wei\n\n      // Submit transaction to the blockchain and wait for it to be mined\n      const receipt = await web3.eth.sendTransaction({\n        from: fromAddress,\n        to: destination,\n        value: amount,\n        maxPriorityFeePerGas: \"5000000\", // Max priority fee per gas\n        maxFeePerGas: \"6000000\", // Max fee per gas\n      });\n\n      return receipt;\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async signMessage() {\n    try {\n      const web3 = new Web3(this.provider as any);\n\n      // Get user's Ethereum public address\n      const fromAddress = (await web3.eth.getAccounts())[0];\n\n      const originalMessage = \"YOUR_MESSAGE\";\n\n      // Sign the message\n      const signedMessage = await web3.eth.personal.sign(\n        originalMessage,\n        fromAddress,\n        \"test password!\" // configure your own password here.\n      );\n\n      return signedMessage;\n    } catch (error) {\n      return error as string;\n    }\n  }\n\n  async getPrivateKey(): Promise<any> {\n    try {\n      const privateKey = await this.provider.request({\n        method: \"eth_private_key\",\n      });\n\n      return privateKey;\n    } catch (error) {\n      return error as string;\n    }\n  }\n}\n","export const Moves = {\n    None: 0,\n    Rock: 1,\n    Paper: 2,\n    Scissors: 3,\n    LoadingMark: 4,\n    CheckMark: 5,\n};\n  \nexport const Outcomes = {\n    None: 0,\n    PlayerA: 1,\n    PlayerB: 2,\n    Draw: 3,\n    Cancelled: 4,\n};\n  \nexport const GameStates = {\n    Initial: 0, //\n    Registering: 1, //Searching for a match\n    Waiting: 2, //Waiting to be matched\n    Matched: 3, //Matched with another player\n    Sending: 4, //Sending move\n    Sent: 5, //Sent move\n    Revealing: 6, //Revealing move to opponent\n    Revealed: 7, //Revealed move to opponent\n    Finished: 8, //Both players have revealed their moves. Game over\n};","export default `\n<svg fill=\"#000000\" width=\"100%\" height=\"100%\" viewBox=\"0 0 256 256\" id=\"Flat\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M200,76H188V64a35.9767,35.9767,0,0,0-60-26.804A35.96779,35.96779,0,0,0,69.26855,54.54492,35.97777,35.97777,0,0,0,20,88v40a108,108,0,0,0,216,0V112A36.04061,36.04061,0,0,0,200,76ZM152,52a12.01343,12.01343,0,0,1,12,12V76H140V64A12.01343,12.01343,0,0,1,152,52ZM92,64a12,12,0,0,1,24,0v40a12,12,0,0,1-24,0V64ZM44,88a12,12,0,0,1,24,0v16a12,12,0,0,1-24,0Zm168,40A84.003,84.003,0,0,1,44.61035,138.15381,35.95752,35.95752,0,0,0,80,130.804a35.90058,35.90058,0,0,0,43.6499,3.33715,36.31106,36.31106,0,0,0,6.3833,6.36231A51.8053,51.8053,0,0,0,116,176a12,12,0,0,0,24,0,28.03146,28.03146,0,0,1,28-28,12,12,0,0,0,0-24H152a12.01343,12.01343,0,0,1-12-12V100h60a12.01343,12.01343,0,0,1,12,12Z\"/>\n</svg>`","export default `\n<svg fill=\"#000000\" width=\"100%\" height=\"100%\" viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 25.1289 53.5117 C 33.3789 53.5117 39.1680 49.0352 42.2851 40.2461 L 46.4102 28.6445 C 47.4414 25.7149 46.5039 23.3008 44.0664 22.4102 C 41.8867 21.6133 39.7305 22.5508 38.6992 24.9649 L 37.1758 28.7149 C 37.1289 28.8086 37.0586 28.8789 36.9649 28.8789 C 36.8476 28.8789 36.8008 28.7852 36.8008 28.6680 L 36.8008 9.8711 C 36.8008 7.1289 35.0898 5.4180 32.4649 5.4180 C 31.5039 5.4180 30.6367 5.7461 29.9805 6.3555 C 29.6758 3.9649 28.1289 2.4883 25.8086 2.4883 C 23.5351 2.4883 21.9414 4.0117 21.5898 6.3086 C 21.0039 5.7227 20.1602 5.4180 19.3164 5.4180 C 16.8789 5.4180 15.2617 7.1055 15.2617 9.7071 L 15.2617 12.3086 C 14.6289 11.6524 13.6914 11.3008 12.6836 11.3008 C 10.2461 11.3008 8.5586 13.1055 8.5586 15.7305 L 8.5586 35.8633 C 8.5586 46.8320 15.2149 53.5117 25.1289 53.5117 Z M 25.0117 50.2539 C 16.7149 50.2539 11.6524 44.9336 11.6524 35.4883 L 11.6524 16.0586 C 11.6524 15.0742 12.2851 14.3711 13.2695 14.3711 C 14.2305 14.3711 14.9336 15.0742 14.9336 16.0586 L 14.9336 28.0352 C 14.9336 28.9024 15.6367 29.4883 16.3867 29.4883 C 17.1836 29.4883 17.9102 28.9024 17.9102 28.0352 L 17.9102 10.1289 C 17.9102 9.1211 18.5430 8.4414 19.5039 8.4414 C 20.4883 8.4414 21.1680 9.1211 21.1680 10.1289 L 21.1680 26.8398 C 21.1680 27.7071 21.8711 28.2930 22.6445 28.2930 C 23.4414 28.2930 24.1680 27.7071 24.1680 26.8398 L 24.1680 7.2227 C 24.1680 6.2383 24.8242 5.5117 25.8086 5.5117 C 26.7461 5.5117 27.4258 6.2383 27.4258 7.2227 L 27.4258 26.8398 C 27.4258 27.6602 28.0820 28.2930 28.9024 28.2930 C 29.6992 28.2930 30.4024 27.6602 30.4024 26.8398 L 30.4024 10.1289 C 30.4024 9.1211 31.0820 8.4414 32.0430 8.4414 C 33.0273 8.4414 33.6836 9.1211 33.6836 10.1289 L 33.6836 33.1914 C 33.6836 34.2695 34.3633 35.0430 35.3476 35.0430 C 36.1914 35.0430 36.8945 34.6680 37.4336 33.4961 L 40.6211 26.3711 C 41.0430 25.3633 41.8867 24.8476 42.7539 25.1758 C 43.6914 25.5508 44.0195 26.4414 43.5742 27.6602 L 39.4258 39.2383 C 36.5664 47.2305 31.5508 50.2539 25.0117 50.2539 Z\"/></svg>\n`","export default `\n<svg fill=\"#000000\" width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 15 2 C 13.355469 2 12 3.355469 12 5 L 12 6.53125 L 11.875 6.125 C 11.398438 4.550781 9.699219 3.648438 8.125 4.125 C 6.550781 4.601563 5.648438 6.300781 6.125 7.875 L 8.71875 16.3125 C 8.53125 16.386719 8.328125 16.472656 8.125 16.59375 C 7.289063 17.09375 6.34375 18.105469 6.0625 19.71875 C 5.851563 20.914063 6.082031 21.964844 6.25 22.53125 C 6.25 22.542969 6.25 22.550781 6.25 22.5625 L 7.03125 25.0625 C 7.933594 27.996094 10.652344 30 13.71875 30 L 19 30 C 22.855469 30 26 26.855469 26 23 L 26 13.09375 C 26 13.050781 26 13.011719 26 12.96875 C 26 12.949219 26 12.925781 26 12.90625 C 26 12.894531 26 12.886719 26 12.875 C 25.992188 12.84375 25.980469 12.8125 25.96875 12.78125 C 25.878906 11.679688 25.210938 10.652344 24.125 10.21875 C 23.371094 9.917969 22.578125 9.960938 21.875 10.25 C 21.550781 9.636719 21.027344 9.117188 20.34375 8.84375 C 19.558594 8.53125 18.722656 8.582031 18 8.90625 L 18 5 C 18 3.355469 16.644531 2 15 2 Z M 15 4 C 15.566406 4 16 4.433594 16 5 L 16 11.59375 L 14.96875 14.21875 C 14.820313 14.589844 14.75 14.992188 14.75 15.375 L 10.65625 15.90625 L 8.0625 7.28125 C 7.898438 6.742188 8.179688 6.195313 8.71875 6.03125 C 9.257813 5.867188 9.804688 6.179688 9.96875 6.71875 L 12.03125 13.5625 L 13.15625 13.21875 L 14 13.21875 L 14 5 C 14 4.433594 14.433594 4 15 4 Z M 19.1875 10.625 C 19.316406 10.621094 19.464844 10.636719 19.59375 10.6875 C 20.117188 10.898438 20.367188 11.476563 20.15625 12 L 19.09375 14.65625 L 19.09375 14.6875 L 18.6875 15.71875 C 18.667969 15.773438 18.621094 15.796875 18.59375 15.84375 C 18.085938 15.449219 17.445313 15.195313 16.78125 15.1875 C 16.792969 15.113281 16.78125 15.042969 16.8125 14.96875 L 18.3125 11.25 C 18.46875 10.855469 18.800781 10.632813 19.1875 10.625 Z M 22.96875 12 C 23.101563 12 23.242188 12.011719 23.375 12.0625 C 23.769531 12.21875 23.992188 12.574219 24 12.96875 C 24 12.980469 24 12.988281 24 13 C 24 13.121094 23.984375 13.253906 23.9375 13.375 L 22.8125 16.15625 C 22.601563 16.679688 22.023438 16.929688 21.5 16.71875 C 20.976563 16.507813 20.757813 15.929688 20.96875 15.40625 L 22.03125 12.75 C 22.046875 12.710938 22.046875 12.664063 22.0625 12.625 C 22.167969 12.363281 22.359375 12.164063 22.59375 12.0625 C 22.710938 12.011719 22.835938 12 22.96875 12 Z M 16.5 17.15625 C 17.027344 17.03125 17.53125 17.347656 17.65625 17.875 C 17.734375 18.199219 17.691406 18.363281 17.59375 18.53125 C 17.496094 18.699219 17.289063 18.90625 16.84375 19.0625 L 12 20.3125 C 11.703125 20.390625 11.460938 20.601563 11.339844 20.878906 C 11.21875 21.160156 11.230469 21.480469 11.375 21.75 L 12.28125 23.40625 C 12.546875 23.890625 13.15625 24.066406 13.640625 23.796875 C 14.125 23.53125 14.300781 22.921875 14.03125 22.4375 L 13.75 21.9375 L 17.4375 20.96875 C 17.46875 20.960938 17.5 20.949219 17.53125 20.9375 C 18.304688 20.667969 18.925781 20.207031 19.3125 19.5625 C 19.628906 19.035156 19.75 18.421875 19.6875 17.8125 C 19.980469 18.128906 20.355469 18.390625 20.78125 18.5625 C 21.925781 19.019531 23.183594 18.730469 24 17.90625 L 24 23 C 24 25.773438 21.773438 28 19 28 L 13.71875 28 C 11.519531 28 9.585938 26.570313 8.9375 24.46875 L 8.1875 21.96875 C 8.105469 21.699219 7.941406 20.753906 8.0625 20.0625 C 8.25 18.988281 8.71875 18.574219 9.15625 18.3125 C 9.59375 18.050781 9.90625 18.03125 9.90625 18.03125 C 9.925781 18.03125 9.949219 18.03125 9.96875 18.03125 L 16.40625 17.1875 C 16.4375 17.179688 16.46875 17.167969 16.5 17.15625 Z\"/></svg>\n`","<script setup>\nimport { Moves } from '../types';\n</script>\n<template>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-if=\"move == Moves.Rock\" class=\"Rock\"></div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.Paper\" class=\"Paper\"></div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.Scissors\" class=\"Scissors\"></div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.LoadingMark\" class=\"Rock\" >\n  </div>\n  <div :class= \"isSmall ? 'small' : isNormal ? 'normal' : 'large'\" v-else-if=\"move == Moves.CheckMark\" class=\"Rock\" >\n  </div>\n</template>\n\n<style>\n  svg  {\n    width: inherit;\n    height: inherit;\n  }\n\n  .small {\n    width: 32px;\n    height: 32px;\n    border: 1px solid #00000010;\n    border-radius: 100px;\n    box-shadow: 0px 0px 1px 0px #00000014;\n  }\n\n  .normal {\n    cursor: pointer;\n    width: 160px;\n    height: 160px;\n  }\n\n  .normal:hover {\n    cursor: pointer;\n    width: 200px;\n    height: 200px;\n  }\n\n  .large {\n    width: 240px;\n    height: 240px;\n  }\n</style>\n\n<script>\nimport Rock from '../assets/Rock.js'\nimport Paper from '../assets/Paper.js'\nimport Scissors from '../assets/Scissors.js'\nimport { onMounted } from 'vue';\n\nexport default {\n  data() {\n    return {\n      Rock,\n      Paper,\n      Scissors\n    }\n  },\n  props: {\n    move: Number,\n    isSmall: {\n      default: false\n    },\n    isNormal: {\n      default: false\n    },\n  },\n\n  //output the value of move\n  created(){\n    console.log(this.move)\n  }\n}\n</script>\n\n  ","import script from \"./GameMove.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GameMove.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GameMove.vue?vue&type=style&index=0&id=69851176&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div style=\"margin: 120px 80px;\">\n      <table>\n        <thead>\n        \n          <tr>\n            <th><div class=\"table-header-item\"><div class=\"star-symbol-table\"></div><p>Score</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"clock-symbol-table\"></div><p>Time</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user1-symbol-table\"></div><p>Player 1</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user2-symbol-table\"></div><p>Player 2</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"prize-symbol-table\"></div><p>Prize</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"rounds-symbol-table\"></div><p>Rounds</p></div></th>\n            <th>\n                <div class=\"tabs-container\">\n                    <div class=\"tabs\">\n                        <button \n                          v-for=\"(tab, index) in tabs\" \n                          :key=\"index\"\n                          @click=\"selectedTab = tab\"\n                          :class=\"{ active: selectedTab === tab }\"\n                        >\n                          {{ tab }}\n                        </button>\n                      </div>\n                    </div>\n            </th>\n                \n            \n            \n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in selectedData\" :key=\"index\">\n            <td class=\"score\">{{ item.points[item.playerA] }} : {{ item.points[item.playerB] ?? 0 }}</td>\n            <td class=\"time\">{{ item.time }}</td>\n            <td class=\"player\">\n                <profile-item :address=\"item.playerA\"></profile-item>\n            </td>\n\n            <td class=\"player\">\n              <profile-item :address=\"item.playerB\"></profile-item>\n            </td>\n            <td class=\"prize\">${{ item.bet }}</td>\n            <td class=\"round\" colspan=\"2\">\n              <ul class=\"rounds-container\">\n                <div v-for=\"(round, roundIndex) in item.moves\" :key=\"roundIndex\" class=\"rounds-list\">\n                  <game-move :isSmall=\"true\" :move=\"round[item.playerA]\"></game-move> : <game-move :isSmall=\"true\" :move=\"round[item.playerB]\"></game-move>\n                </div>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\nimport GameMove from './GameMove.vue'\nimport ProfileItem from './ProfileItem.vue'\n  export default {\n    components: {\n        GameMove,\n        ProfileItem\n    },\n    data() {\n      return {\n        tabs: ['Completed', 'Active', 'Pending'],\n        selectedTab: 'Completed',\n      }\n    },\n    props: {\n        activeData: {\n      type: Array,\n      default: () => Array(10).fill({\n        score: 'Score',\n        time: new Date().toLocaleString(),\n        player1: 'Player 1',\n        player2: 'Player 2',\n        prize: 'Prize',\n        rounds: ['Round 1', 'Round 2']\n      })\n    },\n    completedData: {\n      type: Array,\n      default: () => Array(10).fill({\n        score: 'Score',\n        time: new Date().toLocaleString(),\n        player1: 'Player 1',\n        player2: 'Player 2',\n        prize: 'Completed',\n        rounds: ['Round 1', 'Round 2']\n      })\n    },\n    pendingData: {\n      type: Array,\n      default: () => Array(10).fill({\n        score: 'Score',\n        time: new Date().toLocaleString(),\n        player1: 'Player 1',\n        player2: 'Player 2',\n        prize: 'Pending',\n        rounds: ['Round 1', 'Round 2']\n      })\n    }\n    },\n    computed: {\n      selectedData() {\n        console.log(\"selected tab\", this.selectedTab)\n        switch(this.selectedTab) {\n          case 'Active':\n          console.log(\"active data\", this.activeData)\n            return this.activeData;\n          case 'Completed':\n            console.log(\"completed data\", this.completedData)\n            return this.completedData;\n          case 'Pending':\n            console.log(\"pending data\", this.pendingData)\n            return this.pendingData;\n          default:\n            return [];\n        }\n      }\n    },\n    methods:{\n        truncateAddress(address) {\n      return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n    },\n    }\n  }\n  </script>\n  \n  <style scoped>\n \n  \n  \n\n  \n  .tabs {\n\n  }\n  \n  .tabs button {\n\n  }\n  \n  .tabs .active {\n    font-weight: bold;\n  }\n  </style>\n  ","<template>\n    <div>\n        <router-link class=\"player-item\" :to=\"'/profile/' + address\">\n            <div class=\"profile-mini\"></div>\n            <p>{{ truncateAddress(address) }}</p>\n          </router-link>\n    </div>\n    \n</template>\n\n<style>\n.player-item {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    color: #353535;\n    text-decoration: underline;\n    font-weight: bolder;\n}\n</style>\n\n<script>\nimport { Outcomes } from '@/types'\nexport default {\n    props: {\n        address: {\n            type: String,\n            required: true\n        }\n    },\n    methods: {\n        truncateAddress(address) {\n            return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n        }\n    }\n}\n</script>\n  \n  ","import { render } from \"./ProfileItem.vue?vue&type=template&id=2fce4da3\"\nimport script from \"./ProfileItem.vue?vue&type=script&lang=js\"\nexport * from \"./ProfileItem.vue?vue&type=script&lang=js\"\n\nimport \"./ProfileItem.vue?vue&type=style&index=0&id=2fce4da3&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GameList.vue?vue&type=template&id=14241507&scoped=true\"\nimport script from \"./GameList.vue?vue&type=script&lang=js\"\nexport * from \"./GameList.vue?vue&type=script&lang=js\"\n\nimport \"./GameList.vue?vue&type=style&index=0&id=14241507&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-14241507\"]])\n\nexport default __exports__","<template>\n    <transition name=\"fade\">\n        <div class=\"modal-container\" v-if=\"show\">\n            <div class=\"modal\">\n                <div class=\"trophy\" v-if=\"win\"></div>\n\n                <!-- Result text-->\n                <h4 v-if=\"win\">You won! <span style=\"color:#E19885; font-weight:bold;\">$ {{bet}}</span> </h4>\n                <h4 style=\"margin-top:60px\" v-else>You lose! <span style=\"color:#E19885; font-weight:bold;\">$ {{bet}}</span> </h4>\n\n                <!-- Points ratio -->\n                <h1 style=\"margin:0; margin-bottom:24px; padding:0;\" v-if=\"win\"><span style=\"color:#E19885\">{{winnerPoints}}</span> : {{loserPoints}}</h1>\n                <h1 style=\"margin:0; margin-bottom:24px; padding:0;\" v-else><span style=\"color:#E19885\">{{loserPoints}}</span> : {{winnerPoints}}</h1>\n\n                <!-- Buttons-->\n                <div class=\"modal-button-holder\">\n                    <button\n                    class=\"button-light\"\n                    @click=\"toggleShow\">\n                        Homepage\n                    </button> \n                    <button\n                    class=\"button-dark\"\n                    @click=\"toggleShow\">\n                        Close\n                    </button>\n                </div>\n                \n            </div>\n        </div>\n    </transition>\n</template>\n<style scoped>  \n  \n  h4 {\n    margin: 0;\n    color: #353535;\ntext-align: center;\nfont-size: 40px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\n  }\n  \n  .modal-container{\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    backdrop-filter: blur(10px);\n    background-color: rgba(255, 255, 255, 0.5);  \n    z-index: 1000000000;\n  }\n  \n  .modal {\n    color: black;\n    padding: 20px;\n    width: auto;\n    position: fixed;\n    align-self: center;\n    border-radius: 48px;\nbackground: #FFF;\nwidth: 678px;\nflex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    gap: 24px;\n  }\n\n  .modal-button-holder {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    width: 100%;\n  }\n  \n  .fade-enter-active, .fade-leave-active {\n    transition: all 0.3s ease-in-out;\n  }\n  \n  .fade-enter, .fade-leave-to {\n    transform: scale(0.9,0.9) translatey(10%);\n    opacity: 0;\n  }\n\n  .modal-container h1 {\ntext-align: center;\nfont-size: 80px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 800;\nline-height: normal;\n  }\n  \n  .bk {\n    \n  }\n  .trophy{\n    margin-top: -100px;\n  }\n  \n  .blur {\n    filter: blur(10px) opacity(50%);\n    transition: all 0.3s ease-in-out;\n\n  }\n</style>\n\n<script>\nexport default {\n    model: {\n        prop: 'show',\n        event: 'update:show'\n    },\n    props: {\n        show: {\n            type: Boolean,\n            default: false\n        },\n        win: {\n            type: Boolean,\n            default: true\n        },\n        winnerPoints: {\n            type: Number,\n            default: 0\n        },\n        loserPoints: {\n            type: Number,\n            default: 0\n        },\n        bet: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        toggleShow() {\n            this.$emit('update:show', !this.show)\n        }\n    },\n\n    //output the value of move\n    created(){\n        console.log(this.move)\n    }\n}\n</script>\n\n  ","import { render } from \"./Modal.vue?vue&type=template&id=53414df8&scoped=true\"\nimport script from \"./Modal.vue?vue&type=script&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&lang=js\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=53414df8&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-53414df8\"]])\n\nexport default __exports__","import { createStore } from 'vuex'\nimport RPC from '../web3RPC'\nimport Web3 from 'web3';\n\nimport mainContracts from \"../../../contracts/local-contracts.json\"\n\n\ninterface Balances {\n  [address: string]: any;\n}\n\nexport default createStore({\n  state() {\n    let games = {};\n    let localGames: string | null = localStorage.getItem('games');\n    if(localGames) {\n      games = JSON.parse(localGames);\n    }\n    return {\n      // Auth\n      loggedin: false,\n      loading: false,\n      loginButtonStatus:\"\",\n      connecting: false,\n      activeAccount: \"\",\n      balance: \"0\",\n      balances: {} as Balances,\n      provider: null as any,\n      web3auth: null as any,\n      isMetamask: false,\n\n      // Game\n      games: games,\n      isInGame: false,\n      isJoiningPasswordMatch: false,\n      joiningPassword: null,\n      leaveGame: () => { console.log(\"leaveGame not set\") },\n\n      // Stake\n      stakeContract: null as any,\n      handsTokenContract: null as any\n\n\n    }\n  },\n  getters: {\n    balance: (state) => (address: any) => {\n      return state.balances[address] || \"0\"\n    }\n  },\n  mutations: {\n    // Auth\n    setLoggedIn(state, payload) { state.loggedin = payload },\n    setLoading(state, payload) { state.loading = payload },\n    setLoginButtonStatus(state, payload) { state.loginButtonStatus = payload },\n    setConnecting(state, payload) { state.connecting = payload },\n    setActiveAccount(state, payload) { state.activeAccount = payload },\n    setBalance(state, payload) { state.balance = payload },\n    setBalances(state, payload) { state.balances = payload },\n    setProvider(state, payload) { state.provider = payload },\n    setWeb3Auth(state, payload) { state.web3auth = payload },\n    setIsMetamask(state, payload) { state.isMetamask = payload },\n\n    // Game\n    setGames(state, payload) { \n      state.games = payload;\n      localStorage.setItem('games', JSON.stringify(state.games));\n    },\n    setIsInGame(state, payload) { state.isInGame = payload },\n    setLeaveGame(state, payload) { state.leaveGame = payload },\n    setIsJoiningPasswordMatch(state, payload) { state.isJoiningPasswordMatch = payload },\n    setJoiningPassword(state, payload) { state.joiningPassword = payload },\n\n    // Stake\n    setHandsTokenContract(state, payload) { state.handsTokenContract = payload },\n    setStakeContract(state, payload) { state.stakeContract = payload }\n\n  },\n  actions: {\n    // Auth\n    setLoggedIn({ commit }, payload) { commit('setLoggedIn', payload) },\n    setLoading({ commit }, payload) { commit('setLoading', payload) },\n    setLoginButtonStatus({ commit }, payload) { commit('setLoginButtonStatus', payload) },\n    setConnecting({ commit }, payload) { commit('setConnecting', payload) },\n    setActiveAccount({ commit }, payload) { commit('setActiveAccount', payload) },\n    setBalance({ commit }, payload) { commit('setBalance', payload) },\n    setProvider({ commit }, payload) {\n       commit('setProvider', payload) \n      console.log(\"setProvider\", payload)\n      },\n    setWeb3Auth({ commit }, payload) { commit('setWeb3Auth', payload) },\n    setIsMetamask({ commit }, payload) { commit('setIsMetamask', payload) },\n    async setBalanceOf({ commit, state }, payload) {\n      const rpc = new RPC(state.provider)\n      const balance = await rpc.getBalanceOf(payload)\n\n      let balances: Balances = {...state.balances}\n      balances[payload.toLowerCase()] = balance\n      console.log(\"balances\", balances)\n      commit('setBalances', balances)\n    },\n    async login ({ commit, state }) {\n      if (!state.web3auth) {\n        return;\n      }\n      state.web3auth.connect();\n      const provider = await state.web3auth.connect();\n      commit(\"setLoading\", true);\n      commit(\"setProvider\", provider);\n      if (state.web3auth.provider) {\n          commit(\"setProvider\", state.web3auth.provider);\n\t\t  console.log(\"setProvider\", state.web3auth.provider);\n          //const initVal = await torusPlugin.initWithProvider(store.state.provider, userInfo);\n          commit(\"setLoggedIn\", true);\n\n        }\n\t  //check if logged in through metamask\n\t\t\tcommit(\"setIsMetamask\", true);\n\n      //await torusPlugin.connect()\n    },\n    // Game\n    setGames({ commit }, payload) { commit('setGames', payload) },\n    setIsInGame({ commit }, payload) { commit('setIsInGame', payload) },\n    setLeaveGame({ commit }, payload) { commit('setLeaveGame', payload) },\n    setIsJoiningPasswordMatch({ commit }, payload) { commit('setIsJoiningPasswordMatch', payload) },\n    setJoiningPassword({ commit }, payload) { commit('setJoiningPassword', payload) },\n\n    //Stake\n    setStakeContract({ commit }, payload) { commit('setStakeContract', payload) },\n    setHandsTokenContract({ commit }, payload) { commit('setHandsTokenContract', payload) },\n    async stake({ commit, state }, amount) {\n      try {\n        const web3 = new Web3(state.provider as any);\n        const gasPrice = web3.utils.toWei(\"0.1\", \"gwei\");\n        const gasLimit = 30000000;\n\n        // give allowance to staking contract\n        const tx1 = await state.handsTokenContract.methods.approve(\n          mainContracts.deployedContracts.Staking,\n          web3.utils.toWei(amount, \"ether\")\n        ).send({ from: state.activeAccount, gasPrice, gasLimit });\n        \n\n        const tx = await state.stakeContract.methods.stake(\n          web3.utils.toWei(amount, \"ether\")\n        ).send({ from: state.activeAccount, gasPrice, gasLimit });\n        \n        // Wait for the transaction to be mined\n        await web3.eth.getTransactionReceipt(tx.transactionHash);\n        \n        // Transaction was successful if we made it here\n        console.log('Staked', tx);\n        return tx;\n      } catch (error) {\n        // Log more detailed information about the error\n        console.error('Error staking. Message:', error);\n        \n        // Log error reason if available. This can be the error message from a require statement in a smart contract\n        if (error) {\n          console.error('Error reason:', error);\n        }\n        \n        // Log the error stack trace for debugging\n        console.error('Error stack trace:', error);\n        \n        return error;\n      }\n    },\n\n    async unstake({ commit, state }, amount) {\n      try {\n        const web3 = new Web3(state.provider as any);\n        const gasPrice = web3.utils.toWei(\"0.1\", \"gwei\");\n        const gasLimit = 30000000;\n\n        const tx = await state.stakeContract.methods.unstake(\n          web3.utils.toWei(amount, \"ether\")\n        ).send({ from: state.activeAccount, gasPrice, gasLimit });\n        \n        // Wait for the transaction to be mined\n        await web3.eth.getTransactionReceipt(tx.transactionHash);\n        \n        // Transaction was successful if we made it here\n        console.log('Unstaked', tx);\n        return tx;\n      } catch (error) {\n        // Log more detailed information about the error\n        console.error('Error unstaking. Message:', error);\n        \n        // Log error reason if available. This can be the error message from a require statement in a smart contract\n        if (error) {\n          console.error('Error reason:', error);\n        }\n        \n        // Log the error stack trace for debugging\n        console.error('Error stack trace:', error);\n        \n        return error;\n      }\n    }\n\n  },\n  modules: {\n  }\n})\n","//import { generatePrivateKey, privateKeyToAccount } from \"viem/accounts\";\nimport { ethers } from \"ethers\";\n//import { isHex, Hex } from \"viem\";\nimport { BehaviorSubject } from \"rxjs\";\n\n// This is a modified version of the burner wallet code from viem\n//\n\ntype Hex = string;\n\nfunction isHex(value: string): value is Hex {\n    return /^0x[0-9a-f]*$/i.test(value);\n}\n\nfunction generatePrivateKey(): Hex {\n    const randomBytes = ethers.utils.randomBytes(32);\n    return ethers.utils.hexlify(randomBytes);\n}\n\nexport function privateKeyToAccount(privateKey: Hex): string {\n    const wallet = new ethers.Wallet(privateKey);\n    return wallet.address;\n}\n\nfunction assertPrivateKey(privateKey: string, cacheKey: string): asserts privateKey is Hex {\n  if (!isHex(privateKey)) {\n    console.error(\"Private key found in cache is not valid hex\", { privateKey, cacheKey });\n    throw new Error(`Private key found in cache (${cacheKey}) is not valid hex`);\n  }\n  // ensure we can extract address from private key\n  // this should throw on bad private keys\n  privateKeyToAccount(privateKey);\n}\n\nexport function getBurnerWallet(cacheKey = \"handsy:burnerWallet\"): BehaviorSubject<Hex> {\n  const cachedPrivateKey = localStorage.getItem(cacheKey);\n\n  if (cachedPrivateKey != null) {\n    assertPrivateKey(cachedPrivateKey, cacheKey);\n  }\n\n  const subject =\n    cachedPrivateKey != null\n      ? new BehaviorSubject(cachedPrivateKey)\n      : (() => {\n          const privateKey = generatePrivateKey();\n          console.log(\"New burner wallet created:\", privateKeyToAccount(privateKey));\n          localStorage.setItem(cacheKey, privateKey);\n          return new BehaviorSubject(privateKey);\n        })();\n\n  window.addEventListener(\"storage\", function listener(event) {\n    // Clean up\n    if (subject.closed) {\n      window.removeEventListener(\"storage\", listener);\n      return;\n    }\n\n    if (event.key !== cacheKey) return;\n    if (event.storageArea !== localStorage) return;\n\n    if (!event.newValue) {\n      // We'll intentionally not create a new burner wallet here to avoid potential infinite\n      // loop issues, and just warn the user. A refresh will go through the logic above to\n      // create a new burner wallet.\n      console.warn(\"Burner wallet removed from cache! You may need to reload to create a new wallet.\");\n      return;\n    }\n\n    assertPrivateKey(event.newValue, cacheKey);\n    subject.next(event.newValue);\n  });\n\n  return subject;\n}","<template>\n    <div>\n        <div class=\"burner-item\" :to=\"'/profile/' + address\">\n            <div class=\"burner-icon\"></div>\n            <p class=\"burner-address\">{{ truncateAddress(address) }}</p>\n            <p class=\"burner-funds\">{{balance}}ETH</p>\n        </div>\n    </div>\n    \n</template>\n\n<style>\n\n.burner-item {\n    display: flex;\n    align-items: center;\n    font-size: 15px;\n    gap: 5px;\n    color: #353535;\n}\n\n.toggle-text {\n    font-size: 15px;\n    color: #353535;\n    margin: 0;\n    padding: 0;\n}\n\n.burner-address {\n    text-decoration: underline;\n}\n\n.burner-funds {\n    font-weight: 100;\n}\n</style>\n\n<script>\nimport { Outcomes } from '@/types'\nexport default {\n    props: {\n        address: {\n            type: String,\n            required: true\n        },\n        balance: {\n            type: String,\n            required: true\n        }\n    },\n    methods: {\n        truncateAddress(address) {\n            return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n        }\n    }\n}\n</script>\n  \n  ","import { render } from \"./ProfileItemBurner.vue?vue&type=template&id=783916c9\"\nimport script from \"./ProfileItemBurner.vue?vue&type=script&lang=js\"\nexport * from \"./ProfileItemBurner.vue?vue&type=script&lang=js\"\n\nimport \"./ProfileItemBurner.vue?vue&type=style&index=0&id=783916c9&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Game.vue?vue&type=template&id=26e428ae\"\nimport script from \"./Game.vue?vue&type=script&lang=js\"\nexport * from \"./Game.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    \n      Staking screen\n\n      <div>\n        <div>Hands token balance : {{handsTokenBalance}}</div>\n\n        <div>Your staked amount : {{handsStakedBalance}}</div>\n        <div>Share of total hands staked : {{(handsStakedBalance / totalHandsStakedBalance) * 100}}%</div>\n        <div>Your claimable ETH for staking : {{claimableEthForStaking}}</div>\n        <div>Protocol fee revenue : {{protocolFeeRevenue}}</div>\n        <div>Protocol affiliate revenue : {{protocolAffiliateRevenue}}</div>\n        <div>Total hands staked balance : {{totalHandsStakedBalance}}</div>\n\n        <div>Your onboarded addresses : \n          <div v-for=\"address in onboardedAddresses\" :key=\"address\">\n            {{address}}\n          </div>\n        </div>\n        <div>Claimable Affiliate rewards : {{claimableEthForAffiliate}}</div>\n        <div>Your affiliate link : {{affiliateLink}}</div>\n      </div>\n\n      <button @click=\"stake\">Stake 10 HANDS</button>\n      <button @click=\"unstake\">Unstake 10 HANDS</button>\n      <button @click=\"claim\">Claim Staking Rewards</button>\n      <button @click=\"claimAffiliateRewards\">Claim Affiliate Rewards</button>\n      <!-- <button @click=\"removeLiquidity\">Remove Liquidity 10 WETH - 10 HANDS</button> -->\n      <!-- <button @click=\"stakeLiquidity\">Stake Liquidity</button> -->\n      <!-- <button @click=\"stakeHands\">Stake 100 Hands</button> -->\n      <!-- <button @click=\"unstakeHands\">Unstake Hands</button> -->\n\n  </div>\n</template>\n  \n  \n<script>\n\n  import RPC from \"../web3RPC\";\n  \n  import { Moves, Outcomes, GameStates } from \"../types\";\n  import Hands from \"../contracts/Hands.json\";\n  import Web3 from \"web3\";\n  import { sha256 } from \"js-sha256\";\n  \n  import mainContracts from \"../../../contracts/local-contracts.json\"\nimport GameMove from './GameMove.vue';\n  //EXAMPLE Game.\n  // {\n  //   gameId: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   playerA: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   playerB: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   states: {}\n  \n  //   betAmount: 1,\n  //   moveA: 1,\n  //   moveB: 2,\n  //   outcome: 2, // 0 = draw, 1 = playerA wins, 2 = playerB wins\n  // }\n  \n  \n  function generateRandomString() {\n    return Math.random().toString(36).substring(2, 15);\n  }\n  \n  function calcWinner(moveA, moveB) {\n    if (moveA == moveB) {\n      return Outcomes.Draw;\n    }\n  \n    if (moveA == Moves.Rock) {\n      if (moveB == Moves.Paper) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  \n    if (moveA == Moves.Paper) {\n      if (moveB == Moves.Scissors) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  \n    if (moveA == Moves.Scissors) {\n      if (moveB == Moves.Rock) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  }\n  \n  export default {\n    components: {\n    },\n    props: {\n      provider: {\n        type: String,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        stakingContract: null,\n        handsTokenContract: null,\n        affiliateContract: null,\n\n        activeAccount: null,\n\n        handsTokenBalance: 0,\n\n        handsStakedBalance: 0,\n        totalHandsStakedBalance: 0,\n\n        claimableEthForStaking: 0,\n        claimableEthForAffiliate: 0,\n\n        affiliateLink: null,\n        onboardedAddresses: [],\n\n        protocolFeeRevenue: 0,\n\n        //userSharePerBlock: null,\n        totalStakedPerBlock: null,\n\n      };\n    },\n    computed: {\n        getActiveAccount() { return this.activeAccount?.toLowerCase()},\n        getWeb3() {return new Web3(this.provider);},\n    },\n    mounted() {\n      console.log(\"provider\", this.provider)\n      console.log(\"mainContracts\", mainContracts)\n      this.init();\n\n    },\n    watch:{\n    },\n    methods: {\n        async init(){\n            await this.setAccount();\n            await this.setContracts();\n            this.setHandsTokenBalance();\n            this.setHandsStakedBalance();\n            this.setTotalHandsStakedAmount();\n            this.setClaimableEthForStaking();\n            this.setClaimableEthForAffiliate();\n            this.setProtocolFeeRevenue();\n\n            // this.getWETHAddress();\n            // this.getToken0Address();\n            // this.getToken1Address();\n            // this.getReserve0();\n            // this.getReserve1();\n        },\n        async setAccount() {\n            const accounts = await this.getWeb3.eth.getAccounts();\n            console.log(\"accounts\", accounts);\n            this.activeAccount = accounts[0];\n        },\n        async setContracts() {\n\n\n          //Set staking contract\n          this.stakingContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.Staking,\n              mainContracts.deployedContracts.Staking\n          );\n\n          //Set HandsToken contract\n          this.handsTokenContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.HandsToken,\n              mainContracts.deployedContracts.HandsToken\n          );\n\n          //Set Affiliate contract\n          this.affiliateContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.Affiliate,\n              mainContracts.deployedContracts.Affiliate\n          );\n\n        },\n\n        async setHandsTokenBalance() {\n          if(!this.handsTokenContract) return 0;\n\n          const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n          this.handsTokenBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n            this.handsTokenBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setHandsStakedBalance(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n          this.handsStakedBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n            this.handsStakedBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setTotalHandsStakedAmount(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.viewTotalStaked().call();\n          this.totalHandsStakedBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.viewTotalStaked().call();\n            this.totalHandsStakedBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setClaimableEthForStaking(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n          this.claimableEthForStaking = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForStaking = balance / 10 ** 18;\n          }, 5000);\n        },\n        async setClaimableEthForAffiliate(){\n          if(!this.affiliateContract) return 0;\n\n          const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n          this.claimableEthForAffiliate = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForAffiliate = balance / 10 ** 18;\n          }, 5000);\n        },\n        async setOnboardedAddresses(){\n          if(!this.affiliateContract) return 0;\n\n          const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n          this.onboardedAddresses = balance;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n            this.onboardedAddresses = balance;\n          }, 5000);\n        },\n\n        async setProtocolFeeRevenue(){\n          //Get the balance of the Bank contract\n          const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n          this.protocolFeeRevenue = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n            this.protocolFeeRevenue = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        // async setUserSharePerBlock(){\n        //   if(!this.stakingContract) return 0;\n\n          \n        //   const currentBlock = await this.getWeb3.eth.getBlockNumber();\n        //   this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n        //   console.log(userSharesPerBlock);\n\n        //   //Poll for balance every 5 seconds\n        //   setInterval(async () => {\n        //     const currentBlock = await this.getWeb3.eth.getBlockNumber();\n        //     this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n        //     console.log(userSharesPerBlock);\n        //   }, 5000);\n        // },\n        \n        \n\n \n        \n        async stake() {\n          // Call the stake method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 30000000;\n\n            // give allowance to staking contract\n            const tx1 = await this.handsTokenContract.methods.approve(\n              mainContracts.deployedContracts.Staking,\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n            \n\n            const tx = await this.stakingContract.methods.stake(\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n            \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n            \n            // Transaction was successful if we made it here\n            console.log('Staked', tx);\n            return tx;\n          } catch (error) {\n            // Log more detailed information about the error\n            console.error('Error staking. Message:', error.message);\n            \n            // Log error reason if available. This can be the error message from a require statement in a smart contract\n            if (error.reason) {\n              console.error('Error reason:', error.reason);\n            }\n            \n            // Log the error stack trace for debugging\n            console.error('Error stack trace:', error.stack);\n            \n            return error;\n          }\n        },\n\n\n        async unstake() {\n          // Call the unstake method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.stakingContract.methods.unstake(\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Unstaked', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error unstaking', error);\n            return error;\n          }\n        },\n\n        async claim() {\n          // Call the claim method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.stakingContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Claimed', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error claiming', error);\n            return error;\n          }\n        },\n\n        async claimAffiliateRewards() {\n          // Call the claim method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.affiliateContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Claimed', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error claiming', error);\n            return error;\n          }\n        },\n\n        async registerAsConsumer() {\n          // Use an empty bytes data\n          const data = '0x';\n        \n        \n          // No callback\n          const callback = '0x0000000000000000000000000000000000000000';\n          const callbackData = '0x';\n        \n          // Call the addLiquidity method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.affiliateContract.methods.registerAsConsumer(\n              '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            \n        \n            // Transaction was successful if we made it here\n            console.log('Registered as consumer', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error registering as a consumer:', error);\n            throw error;\n          }\n        },\n\n\n\n\n        \n    \n        async getBlockNumber() {\n            return await this.getWeb3.eth.getBlockNumber();\n        },  \n        \n    },\n  };\n  </script>\n  ","import { render } from \"./Staking.vue?vue&type=template&id=c6ca6cfc\"\nimport script from \"./Staking.vue?vue&type=script&lang=js\"\nexport * from \"./Staking.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport Game from \"./components/Game.vue\";\nimport Staking from \"./components/Staking.vue\";\nimport Web3 from \"web3\";\n\n\nimport Transak from '@biconomy/transak';\n\n\nimport { ref, onMounted, watch } from \"vue\";\nimport { Web3Auth } from \"@web3auth/modal\";\nimport { CHAIN_NAMESPACES, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport RPC from \"./web3RPC\";\n\n// Plugins\nimport { TorusWalletConnectorPlugin } from \"@web3auth/torus-wallet-connector-plugin\";\n\n// Adapters\nimport { WalletConnectV1Adapter } from \"@web3auth/wallet-connect-v1-adapter\";\nimport { MetamaskAdapter } from \"@web3auth/metamask-adapter\";\nimport { TorusWalletAdapter } from \"@web3auth/torus-evm-adapter\";\nimport { mapState } from 'vuex';\nimport store from '@/store';\n\nconst CHAIN_ID_MAINNET = \"0x1\"\nconst CHAIN_ID_TESTNET = \"0x118\"\nconst CHAIN_ID_LOCALHOST = \"0x10e\"\nconst CHAIN_ID_LOCALHOST_HARDHAT = \"0x7A69\"\nconst CHAIN_ID_ARBITRUM_GOERLI = \"0x66eed\"\n\nconst RPC_URLS = {\n  [CHAIN_ID_MAINNET]: \"https://rpc.ankr.com/eth\",\n  [CHAIN_ID_TESTNET]: \"https://testnet.era.zksync.dev\",\n  [CHAIN_ID_LOCALHOST]: \"http://localhost:3050/\",\n  [CHAIN_ID_LOCALHOST_HARDHAT]: \"http://localhost:8545\",\n  [CHAIN_ID_ARBITRUM_GOERLI]: \"https://arb-goerli.g.alchemy.com/v2/KQNomn7nRHhwJ7SMgTYxI3amRQs9rc7v\",\n\n};\n\nconst CURRENT_CHAIN_ID = CHAIN_ID_ARBITRUM_GOERLI;\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Home\",\n  props: {\n    msg: String,\n  },\n  components: {\n    Game,\n    Staking,\n  },\n  computed: mapState([\n    'loggedin',\n    'loading',\n    'loginButtonStatus',\n    'connecting',\n    'activeAccount',\n    'balance',\n    'provider',\n\t'isInGame',\n  'joiningPassword',\n  'isJoiningPasswordMatch',\n  ]),\n\n  methods : {\n\tasync leaveGame() {\n\t  await store.state.leaveGame();\n\t},\n  },\n \n  setup() {\n    const checkJoiningPassword = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const joiningPassword = urlParams.get('game');\n      const betAmount = urlParams.get('bet');\n\n      store.dispatch(\"setJoiningPassword\", \"\");\n      store.dispatch(\"setIsJoiningPasswordMatch\", false);\n\n      if(joiningPassword && betAmount) {\n        store.dispatch(\"setJoiningPassword\", joiningPassword);\n        store.dispatch(\"setIsJoiningPasswordMatch\", false);\n\n      }\n      \n    }\n  \n    const staking = ref<boolean>(false);\n    const rampInstantSdk = ref<any>(null);\n\n\n    const clientId =\n      \"BNXP4nqNQ7AgD-kFeqeLjvBNM9RVVJJmhOgd1DVZw89SY7UzYGh_RwXK-YVIVFn8qFU6BbL3krmslFNJPpu71Bs\"; // get from https://dashboard.web3auth.io\n\n      \n\n    const web3auth = new Web3Auth({\n      clientId,\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: CURRENT_CHAIN_ID,\n        rpcTarget: RPC_URLS[CURRENT_CHAIN_ID], // This is the public RPC we have added, please pass on your own endpoint while creating an app\n        displayName: \"Arbitrum Testnet\",\n\n      },\n      uiConfig: {\n        defaultLanguage: \"en\",\n      },\n      web3AuthNetwork: \"testnet\",\n      //provider: new web3.providers.WebsocketProvider(\"ws://localhost:8545\"),\n    });\n\n\t\n\n    console.log(\"web3auth provider\", web3auth.provider);\n\n    // plugins and adapters are optional and can be added as per your requirement\n    // read more about plugins here: https://web3auth.io/docs/sdk/web/plugins/\n\n    // adding torus wallet connector plugin\n\n    const torusPlugin = new TorusWalletConnectorPlugin({\n      torusWalletOpts: {},\n      walletInitOptions: {\n        whiteLabel: {\n          theme: { isDark: true, colors: { primary: \"#00a8ff\" } },\n          logoDark: \"https://web3auth.io/images/w3a-L-Favicon-1.svg\",\n          logoLight: \"https://web3auth.io/images/w3a-D-Favicon-1.svg\",\n        },\n        useWalletConnect: true,\n        enableLogging: true,\n      },\n    });\n\n    // read more about adapters here: https://web3auth.io/docs/sdk/web/adapters/\n\n    // adding wallet connect v1 adapter\n\n    const walletConnectV1Adapter = new WalletConnectV1Adapter({\n      adapterSettings: {\n        //bridge: \"https://bridge.walletconnect.org\",\n      },\n      clientId,\n    });\n\n    web3auth.configureAdapter(walletConnectV1Adapter);\n\n    // adding metamask adapter\n\n    const metamaskAdapter = new MetamaskAdapter({\n      clientId,\n      sessionTime: 3600, // 1 hour in seconds\n      web3AuthNetwork: \"testnet\",\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: CURRENT_CHAIN_ID,\n        rpcTarget: RPC_URLS[CURRENT_CHAIN_ID]   \n      },\n    });\n    // we can change the above settings using this function\n    metamaskAdapter.setAdapterSettings({\n      sessionTime: 86400, // 1 day in seconds\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: CURRENT_CHAIN_ID,\n        rpcTarget: RPC_URLS[CURRENT_CHAIN_ID],\n\n      },\n      web3AuthNetwork: \"testnet\",\n    });\n\n    // it will add/update  the metamask adapter in to web3auth class\n    web3auth.configureAdapter(metamaskAdapter);\n\n    const torusWalletAdapter = new TorusWalletAdapter({\n      clientId,\n    });\n\n    // it will add/update  the torus-evm adapter in to web3auth class\n    web3auth.configureAdapter(torusWalletAdapter);\n\n\tstore.dispatch(\"setWeb3Auth\", web3auth);\n\n\n    onMounted(async () => {\n      try {\n        checkJoiningPassword();\n        store.dispatch(\"setLoading\", true);\n        store.dispatch(\"setLoggedIn\", false);\n        await web3auth.initModal();\n        const userInfo: any = await web3auth.getUserInfo();\n        await web3auth.addPlugin(torusPlugin);\n        if (web3auth.provider) {\n          store.dispatch(\"setProvider\", web3auth.provider);\n\t\t  console.log(\"setProvider\", web3auth.provider);\n          console.log(\"userInfo\", userInfo)\n          //const initVal = await torusPlugin.initWithProvider(store.state.provider, userInfo);\n          store.dispatch(\"setLoggedIn\", true);\n\n        }\n        store.dispatch(\"setLoading\", false);\n\n\t\t//check if logged in through metamask\n\t\tif (web3auth.connectedAdapterName === \"metamask\") {\n\t\t\tstore.dispatch(\"setIsMetamask\", true);\n\t\t}\n\n\t\tconsole.log(\"adapter\", web3auth.connectedAdapterName);\n\n\n\n        console.log(\"provider\", store.state.provider);\n      } catch (error) {\n        uiConsole(\"error\", error);\n      } finally {\n        store.dispatch(\"setLoading\", false);\n      }\n    });\n    const fetchBalance = async () => {\n      if (!store.state.provider || !store.state.activeAccount) {\n        return;\n      }\n\n      const rpc = new RPC(store.state.provider);\n      const balanceEth = await rpc.getBalance();\n\n      console.log(\"balanceEth\", balanceEth);\n\n      store.dispatch(\"setBalance\", balanceEth);\n    };\n\n    const pollBalance = async () => {\n      await fetchBalance();\n      setTimeout(pollBalance, 5000); // Poll every 5000 milliseconds (5 seconds)\n    };\n\n\n    \nwatch(\n  () => store.state.provider,\n  async (newValue, oldValue) => {\n    if (newValue) {\n      // The provider value has changed, start polling the balance\n      await pollBalance();\n      await getAccounts();\n    }\n  },\n  { immediate: true } // This option triggers the watch callback immediately with the current value\n);\n\n    const login = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      const provider = await web3auth.connect();\n      store.dispatch(\"setLoading\", true);\n      store.dispatch(\"setProvider\", provider);\n      if (web3auth.provider) {\n          store.dispatch(\"setProvider\", web3auth.provider);\n\t\t  console.log(\"setProvider\", web3auth.provider);\n          //const initVal = await torusPlugin.initWithProvider(store.state.provider, userInfo);\n          store.dispatch(\"setLoggedIn\", true);\n\n        }\n\t  //check if logged in through metamask\n\t\tif (web3auth.connectedAdapterName === \"metamask\") {\n\t\t\tstore.dispatch(\"setIsMetamask\", true);\n\t\t}\n\n      //await torusPlugin.connect()\n      uiConsole(\"Logged in Successfully!\");\n    };    \n\n    const buyEth = async () => {\n      console.log(\"torusPlugin\", torusPlugin);\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      // await torusPlugin.initiateTopup(\"moonpay\", {\n      //   selectedAddress: activeAccount.value, // User's wallet address\n      //   selectedCurrency: \"USD\", // Fiat currency\n      //   fiatValue: 100, // Fiat Value\n      //   selectedCryptoCurrency: \"ETH\", // Crypto currency\n      //   chainNetwork: \"mainnet\", // Blockchain network\n      // });\n\n      const userInfo: any = await web3auth.getUserInfo();\n\n      const transak = new Transak('PRODUCTION', {\n\n        walletAddress: store.state.activeAccount,\n        userData: {\n          firstName: userInfo.name || '',\n          email: userInfo.email || '',\n        },\n        //fiatCurrency: 'USD', // INR\n        //defaultCryptoAmount: 100,\n        //cryptoCurrencyCode: 'USDC',\n        //cryptoAmount: 1000,\n        network: 'arbitrum',\n        exchangeScreenTitle: 'Buy ETH for your Handsy.io account',\n\n    }); \n    transak.init();\n    }\n\n\n    const authenticateUser = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      const idToken = await web3auth.authenticateUser();\n      uiConsole(idToken);\n    };\n\n    const getUserInfo = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      const user = await web3auth.getUserInfo();\n      uiConsole(user);\n    };\n\n    const logout = async () => {\n      if (!web3auth) {\n        uiConsole(\"web3auth not initialized yet\");\n        return;\n      }\n      await web3auth.logout();\n      store.dispatch(\"setProvider\", null);\n      store.dispatch(\"setLoggedIn\", false);\n    };\n\n    const getChainId = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(store.state.provider);\n      const chainId = await rpc.getChainId();\n      uiConsole(chainId);\n    };\n\n    const addChain = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const newChain = {\n        chainId: \"0x5\",\n        displayName: \"Goerli\",\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        tickerName: \"Goerli\",\n        ticker: \"ETH\",\n        decimals: 18,\n        rpcTarget: \"https://rpc.ankr.com/eth_goerli\",\n        blockExplorer: \"https://goerli.etherscan.io\",\n      };\n      await web3auth?.addChain(newChain);\n      uiConsole(\"New Chain Added\");\n    };\n\n    const switchChain = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const newChain = {\n        chainId: \"0x5\",\n        displayName: \"Goerli\",\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        tickerName: \"Goerli\",\n        ticker: \"ETH\",\n        decimals: 18,\n        rpcTarget: \"https://rpc.ankr.com/eth_goerli\",\n        blockExplorer: \"https://goerli.etherscan.io\",\n      };\n      await web3auth?.switchChain({ chainId: \"0x5\" });\n      uiConsole(\"Chain Switched\");\n    };\n\n\n    const getAccounts = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(store.state.provider);\n      const address = await rpc.getAccounts()\n      store.dispatch(\"setActiveAccount\", address[0]);\n      uiConsole(address);\n    };\n\n    const getBalance = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(store.state.provider);\n      const balance = await rpc.getBalance();\n      uiConsole(balance);\n    };\n\n    const sendTransaction = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(store.state.provider);\n      const receipt = await rpc.sendTransaction();\n      uiConsole(receipt);\n    };\n\n    const signMessage = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(store.state.provider);\n      const signedMessage = await rpc.signMessage();\n      uiConsole(signedMessage);\n    };\n\n    const getPrivateKey = async () => {\n      if (!store.state.provider) {\n        uiConsole(\"provider not initialized yet\");\n        return;\n      }\n      const rpc = new RPC(store.state.provider);\n      const privateKey = await rpc.getPrivateKey();\n      uiConsole(privateKey);\n    };\n\n    function uiConsole(...args: any[]): void {\n      const el = document.querySelector(\"#console>p\");\n      if (el) {\n        el.innerHTML = JSON.stringify(args || {}, null, 2);\n      }\n    }\n\n    function setStakingTrue () {\n      staking.value = true\n    }\n\n    function setStakingFalse () {\n      staking.value = false\n    }\n\n    return {\n      staking,\n      getWeb3: \n      web3auth,\n      login,\n      buyEth,\n      authenticateUser,\n      logout,\n      getUserInfo,\n      getChainId,\n      addChain,\n      switchChain,\n      getAccounts,\n      getBalance,\n      sendTransaction,\n      signMessage,\n      getPrivateKey,\n    };\n  },\n};\n","import { render } from \"./App.vue?vue&type=template&id=26626f98&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=26626f98&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '../assets/background.png'\n\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { style: {\"max-width\":\"525px\",\"margin\":\"24px\",\"color\":\"#353535\",\"text-align\":\"center\",\"font-family\":\"Sen\",\"font-size\":\"100px\",\"font-style\":\"normal\",\"font-weight\":\"800\",\"line-height\":\"normal\",\"letter-spacing\":\"-5px\"} }, \" Welcome to Handsy.io \", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { style: {\"max-width\":\"525px\",\"color\":\"#353535\",\"text-align\":\"center\",\"font-family\":\"Sen\",\"font-size\":\"24px\",\"font-style\":\"normal\",\"font-weight\":\"400\",\"line-height\":\"160%\",\"margin\":\"0\",\"margin-bottom\":\"56px\"} }, \" Play rock paper scissors with your friends or with random opponents for real money. \", -1)\nconst _hoisted_4 = {\n  key: 1,\n  src: _imports_0,\n  alt: \"Hero\",\n  style: {\"width\":\"100%\",\"position\":\"absolute\",\"bottom\":\"0\",\"left\":\"0\",\"z-index\":\"-1\"}\n}\nconst _hoisted_5 = { key: 2 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Game = _resolveComponent(\"Game\")!\n  const _component_Staking = _resolveComponent(\"Staking\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (!_ctx.loggedin)\n      ? (_openBlock(), _createElementBlock(\"header\", _hoisted_1, [\n          _hoisted_2,\n          _hoisted_3,\n          _createElementVNode(\"button\", {\n            class: \"button-dark\",\n            onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.login && $options.login(...args))),\n            style: {\"cursor\":\"pointer\",\"width\":\"270px\",\"height\":\"86px\"}\n          }, _toDisplayString(_ctx.loading ? 'Logging in...' : 'Sign Up'), 1)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (!_ctx.loggedin)\n      ? (_openBlock(), _createElementBlock(\"img\", _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    (_ctx.loggedin)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          (!_ctx.staking)\n            ? (_openBlock(), _createBlock(_component_Game, {\n                key: 0,\n                provider: _ctx.provider,\n                balance: _ctx.balance\n              }, null, 8, [\"provider\", \"balance\"]))\n            : _createCommentVNode(\"\", true),\n          (_ctx.staking)\n            ? (_openBlock(), _createBlock(_component_Staking, {\n                key: 1,\n                provider: _ctx.provider\n              }, null, 8, [\"provider\"]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport Game from \"../components/Game.vue\";\nimport Staking from \"../components/Staking.vue\";\nimport Web3 from \"web3\";\n\n\nimport Transak from '@biconomy/transak';\n\n\nimport { ref, onMounted, watch } from \"vue\";\nimport { Web3Auth } from \"@web3auth/modal\";\nimport { CHAIN_NAMESPACES, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport RPC from \"../web3RPC\";\n\n// Plugins\nimport { TorusWalletConnectorPlugin } from \"@web3auth/torus-wallet-connector-plugin\";\n\n// Adapters\nimport { WalletConnectV1Adapter } from \"@web3auth/wallet-connect-v1-adapter\";\nimport { MetamaskAdapter } from \"@web3auth/metamask-adapter\";\nimport { TorusWalletAdapter } from \"@web3auth/torus-evm-adapter\";\nimport { mapState } from 'vuex';\nimport store from '@/store';\n\nconst CHAIN_ID_MAINNET = \"0x1\"\nconst CHAIN_ID_TESTNET = \"0x118\"\nconst CHAIN_ID_LOCALHOST = \"0x10e\"\nconst CHAIN_ID_LOCALHOST_HARDHAT = \"0x7A69\"\nconst CHAIN_ID_ARBITRUM_GOERLI = \"0x66EED\"\n\nconst RPC_URLS = {\n  [CHAIN_ID_MAINNET]: \"https://rpc.ankr.com/eth\",\n  [CHAIN_ID_TESTNET]: \"https://testnet.era.zksync.dev\",\n  [CHAIN_ID_LOCALHOST]: \"http://localhost:3050/\",\n  [CHAIN_ID_LOCALHOST_HARDHAT]: \"http://localhost:8545\",\n  [CHAIN_ID_ARBITRUM_GOERLI]: \"https://maximum-shy-meme.arbitrum-goerli.discover.quiknode.pro/9e608d37bed73e216df881fc52b358d41236b29e/\",\n\n};\n\nconst CURRENT_CHAIN_ID = CHAIN_ID_ARBITRUM_GOERLI;\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Home\",\n  props: {\n    msg: String,\n  },\n  components: {\n    Game,\n    Staking,\n  },\n  computed: mapState([\n    'loggedin',\n    'loading',\n    'loginButtonStatus',\n    'connecting',\n    'activeAccount',\n    'balance',\n    'provider',\n    'isJoiningPasswordMatch',\n    'joiningPassword',\n  ]),\n  methods:{\n    login() {\n      store.dispatch('login')\n    },\n  }\n \n};\n","import { render } from \"./Home.vue?vue&type=template&id=279d284e&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"content profile-view\">\n    <router-link class=\"back\" to=\"/\">\n    </router-link>\n      <div class=\"profile-big\"></div>\n      <p>User balance</p>\n      <div style=\"display:flex; justify-content:center; gap:40px; align-items:end;\">\n        <h1 style=\"margin:0; margin-top: -50px; padding:0; align-items:end; margin-bottom:-20px; font-size: 100px;\">\n          <span\n            class=\"currency-symbol\"\n          >$</span>\n          {{this.balance?.toString().split(\".\")[0]}}\n          <span\n            class=\"decimals\">\n            .{{ this.balance?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n  \n          </span>\n        </h1>\n        <div style=\"display:flex; gap:20px; align-items:end\">\n          <div class=\"earnings\">\n            <span\n              class=\"currency-symbol\"\n            >$</span>\n            {{this.earnings?.toString().split(\".\")[0]}}\n            <span\n              >\n              .{{ this.earnings?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n    \n            </span>\n          </div>\n          <p style=\"margin:0;\">earned</p>\n        </div>\n      </div>\n      <profile-item :address=\"address\" />\n\n  </div>\n  <profile-game-list :games=\"games\" />\n\n</template>\n\n<style>\n.profile-big {\n  width: 240px;\nheight: 240px;\nflex-shrink: 0;\n  border-radius: 240px;\nbackground:  lightgray -105.215px 0px / 149.927% 100% no-repeat;\nbox-shadow: 0px 50px 120px 0px rgba(0, 0, 0, 0.08);\n}\n\n.profile-view{\n  gap: 0px;\n}\n\n\n.earnings {\n  text-align: center;\nfont-size: 32px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 800;\nline-height: normal;\ndisplay: flex;\ngap: 0px;\nalign-items: end;\n}\n</style>\n\n<script>\nimport ProfileItem from '@/components/ProfileItem.vue'\nimport ProfileGameList from '@/components/ProfileGameList.vue'\nimport { Outcomes } from '@/types'\nexport default {\n  components: {\n    ProfileItem,\n    ProfileGameList\n  },\n  data() {\n\n  },\n  // mounted() {\n  //   this.$store.dispatch('setBalanceOf', this.address)\n  //   console.log(\"mounted\")\n  // },\n  computed: {\n    provider() {\n      return this.$store.state.provider\n    },\n    address() {\n      return this.$route.params.id\n    },\n    balance() {\n      //call get balance function from store and passin address\n      return this.$store.getters.balance(this.address)\n    },\n    truncatedAddress() {\n      return this.address.substring(0, 6) + '...' + this.address.substring(this.address.length - 4, this.address.length)\n    },\n    games() {\n      return Object.values(this.$store.state.games)\n        .filter(\n          game => \n            game.gameId != \"0\" &&\n            (game.playerA.toLowerCase() == this.address.toLowerCase() || \n            game.playerA.toLowerCase() == this.address.toLowerCase())\n        )\n    },\n    completedGames() {\n      console.log(\"completed games\", this.games.filter(game => game.outcome != Outcomes.None))\n      return this.games.filter(game => game.outcome != Outcomes.None)\n    },\n    earnings(){\n      let earnings = 0\n\n      for (let game of this.completedGames) {\n        const playerPoints = game.points[this.address.toLowerCase()]\n        const won = playerPoints >= 3\n        const bet = game.bet\n\n        if (won) {\n          earnings += bet\n          console.log(\"won\", bet)\n        } else {\n          earnings -= bet\n          console.log(\"lost\", bet)\n        }\n\n      }\n\n      console.log(\"earnings\", earnings)\n\n      return earnings\n    }\n\n\n  },\n  props: {\n\n  },\n\n  //output the value of move\n  watch: {\n    provider: {\n      handler() {\n        this.$store.dispatch('setBalanceOf', this.address)\n      },\n      immediate: true\n    }\n  }\n}\n</script>\n\n","<template>\n    <div style=\"margin: 120px 80px;\">\n      <table style=\"table-layout: fixed;\">\n        <thead>\n        \n          <tr>\n            <th><div class=\"table-header-item\"><div class=\"star-symbol-table\"></div><p>Result</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"clock-symbol-table\"></div><p>Score</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user1-symbol-table\"></div><p>Earned</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user2-symbol-table\"></div><p>Rounds</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"prize-symbol-table\"></div><p>Date</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"rounds-symbol-table\"></div><p>Opponent</p></div></th>\n                \n            \n            \n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in selectedData\" :key=\"index\">\n            <td class=\"result\"> {{ item.points[item.playerA] > item.points[item.playerB] ? 'Win' : 'Loss' }} </td>\n            <td class=\"score\">{{ item.points[item.playerA] }} : {{ item.points[item.playerB] ?? 0 }}</td>\n            <td class=\"earned\"\n                :class=\"{ 'earned-positive': item.points[item.playerA] > item.points[item.playerB], 'earned-negative': item.points[item.playerA] < item.points[item.playerB] }\"\n            >${{ item.bet }}</td>\n            <td class=\"rounds\">{{ Object.keys(item.moves).length }}</td>\n            <td class=\"time\">{{ item.time }}</td>\n            <td class=\"player\">\n              <profile-item :address=\"address?.toLowerCase() === item.playerA?.toLowerCase() ? item.playerA : item.playerB\"></profile-item>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n\n<style scoped>\n.earned-positive {\n  color: #24B27F;\n}\n\n.earned-negative {\n  color: #FF6969;\n}\n</style>\n  \n  <script>\nimport GameMove from './GameMove.vue'\nimport ProfileItem from './ProfileItem.vue'\n  export default {\n    components: {\n        GameMove,\n        ProfileItem,\n    },\n    data() {\n      return {\n        selectedTab: 'Completed',\n      }\n    },\n    props: {\n        address: {type: String,},\n        games: {type: Array,},\n    },\n    computed: {\n      selectedData() {\n        console.log(\"profile game list\", this.games)\n        return this.games;\n      }\n    },\n    methods:{\n        truncateAddress(address) {\n            return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n        },\n    }\n  }\n  </script>\n  \n  <style scoped>\n \n  \n  \n\n  \n  .tabs {\n\n  }\n  \n  .tabs button {\n\n  }\n  \n  .tabs .active {\n    font-weight: bold;\n  }\n  </style>\n  ","import { render } from \"./ProfileGameList.vue?vue&type=template&id=7f6d86fc&scoped=true\"\nimport script from \"./ProfileGameList.vue?vue&type=script&lang=js\"\nexport * from \"./ProfileGameList.vue?vue&type=script&lang=js\"\n\nimport \"./ProfileGameList.vue?vue&type=style&index=0&id=7f6d86fc&scoped=true&lang=css\"\nimport \"./ProfileGameList.vue?vue&type=style&index=1&id=7f6d86fc&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7f6d86fc\"]])\n\nexport default __exports__","import { render } from \"./Profile.vue?vue&type=template&id=c667ca70\"\nimport script from \"./Profile.vue?vue&type=script&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&lang=js\"\n\nimport \"./Profile.vue?vue&type=style&index=0&id=c667ca70&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div \n        style=\"gap:50px\"\n        class=\"content staking-view\">\n        <router-link class=\"back\" to=\"/\">\n        </router-link>\n        <div style=\"margin-bottom:56;\" class=\"profile-big\"></div>\n        <p >Your balance</p>\n        <div style=\"display:flex; justify-content:center; gap:40px; align-items:end;\">\n        <h1 style=\"margin:0; margin-top: -20px; margin-bottom:70px; padding:0; align-items:end; margin-bottom:-20px; font-size: 100px;\">\n            {{this.handsTokenBalance?.toString().split(\".\")[0]}}.{{ this.handsTokenBalance?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n            <span\n                style=\"font-size: 50px;\"\n                class=\"currency-symbol\"\n            >HANDS</span>\n        </h1>\n        </div>\n\n        <button style=\"margin-top:60px; margin-bottom:90px;\" class=\"button-dark\">\n          Buy HANDS\n        </button>\n\n        <div style=\"width:100%;display:grid; grid-template-columns: 1fr auto 1fr; margin-bottom:70px;\">\n            <div style=\"display:flex; gap:20px; align-items:center; flex-direction:column;\">\n                <p>Total staked</p>\n                <h2>{{totalHandsStakedBalance}} HANDS</h2>\n            </div>\n\n            <div style=\"display:flex; gap:20px; align-items:center; flex-direction:column;\">\n                <p>Protocol Revenue</p>\n                <h2>\n                    {{protocolFeeRevenue}} \n                    <span class=\"currency-symbol\">ETH</span>\n                </h2>\n            </div>\n\n            <div style=\"display:flex; gap:20px; align-items:center; flex-direction:column;\">\n                <p>Stakers</p>\n                <h2>{{stakerAmount}}</h2>\n            </div>\n        </div>\n\n        <div style=\"display:flex; justify-content:space-between; gap:40px;\">\n            <div class=\"card\">\n                <p>Your stake</p>\n                <h1>\n                    {{handsStakedBalance}}\n                    <span class=\"currency-symbol\">HANDS</span>\n                </h1>\n                <div style=\"display:flex;\">\n                    <button\n                        @click=\"showStakeModal\"\n                        class=\"button-dark\">\n                        Stake\n                    </button>\n                    <button \n                        @click=\"showUnstakeModal\"\n                        class=\"button-light\">\n                        Unstake\n                    </button>\n                </div>\n            </div>\n\n            <div  class=\"card\">\n                <p>Your rewards</p>\n                <h1>{{claimableEthForStaking}} ETH</h1>\n                <button \n                    @click=\"claim\" \n                    class=\"button-dark\">\n                    Claim\n                </button>\n            </div>\n\n            \n    \n      </div>\n      <div>\n        <p>Revenue Events</p>\n        <list-staking \n            :events=\"recivedFundsList\" \n            :address=\"activeAccount\"\n        />\n        </div>\n    <div>\n      \n        Staking screen\n  \n        <div>\n          <div>Hands token balance : {{handsTokenBalance}}</div>\n  \n          <div>Your staked amount : {{handsStakedBalance}}</div>\n          <div>Share of total hands staked : {{(handsStakedBalance / totalHandsStakedBalance) * 100}}%</div>\n          <div>Your claimable ETH for staking : {{claimableEthForStaking}}</div>\n          <div>Protocol fee revenue : {{protocolFeeRevenue}}</div>\n          <div>Protocol affiliate revenue : {{protocolAffiliateRevenue}}</div>\n          <div>Total hands staked balance : {{totalHandsStakedBalance}}</div>\n  \n          <div>Your onboarded addresses : \n            <div v-for=\"address in onboardedAddresses\" :key=\"address\">\n              {{address}}\n            </div>\n          </div>\n          <div>Claimable Affiliate rewards : {{claimableEthForAffiliate}}</div>\n          <div>Your affiliate link : {{affiliateLink}}</div>\n        </div>\n  \n        <button @click=\"stake\">Stake 10 HANDS</button>\n        <button @click=\"unstake\">Unstake 10 HANDS</button>\n        <button @click=\"claim\">Claim Staking Rewards</button>\n        <button @click=\"claimAffiliateRewards\">Claim Affiliate Rewards</button>\n        <!-- <button @click=\"removeLiquidity\">Remove Liquidity 10 WETH - 10 HANDS</button> -->\n        <!-- <button @click=\"stakeLiquidity\">Stake Liquidity</button> -->\n        <!-- <button @click=\"stakeHands\">Stake 100 Hands</button> -->\n        <!-- <button @click=\"unstakeHands\">Unstake Hands</button> -->\n  \n    </div>\n    </div>\n\n    <modal-stake \n    v-model:show=\"showModal\"\n    v-model:isStake=\"isStake\"\n    v-modal:stakeFunction=\"stakeFunction\"\n  >\n    Hello world\n    </modal-stake>\n  </template>\n\n  <style>\n.profile-big {\n  width: 240px;\nheight: 240px;\nflex-shrink: 0;\n  border-radius: 240px;\nbackground:  #E9E9E9 -105.215px 0px / 149.927% 100% no-repeat;\nbox-shadow: 0px 50px 120px 0px rgba(0, 0, 0, 0.08);\n}\n\n.staking-view{\n}\n\n.staking-view p {\n    color: #000;\ntext-align: center;\nfont-size: 24px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 400;\nline-height: 160%;\n}\n\n.staking-view h1 {\n    margin: 0;\n}\n\n.staking-view h2 {\n    color: #353535;\ntext-align: center;\nfont-size: 60px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 10000;\nline-height: normal;\nletter-spacing: -3px;\nmargin: 0;\n}\n\n.staking-view p {\n    margin: 0;\n}\n\n\n\n\n.earnings {\n  text-align: center;\nfont-size: 32px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 800;\nline-height: normal;\ndisplay: flex;\ngap: 0px;\nalign-items: end;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 30px;\n    border-radius: 24px;\n    background: #FFF;\n    padding: 100px;\n    width: 514px;\n\n}\n\n\n</style>\n\n    \n  <script>\n  \n    import RPC from \"../web3RPC\";\n    \n    import { Moves, Outcomes, GameStates } from \"../types\";\n    import Hands from \"../contracts/Hands.json\";\n    import Web3 from \"web3\";\n    import { sha256 } from \"js-sha256\";\n    \n    import mainContracts from \"../../../contracts/local-contracts.json\"\nimport GameMove from '@/components/GameMove.vue';\nimport ModalStake from '@/components/ModalStake.vue';\nimport ListStaking from '@/components/ListStaking.vue';\n    \n    //EXAMPLE Game.\n    // {\n    //   gameId: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n    //   playerA: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n    //   playerB: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n    //   states: {}\n    \n    //   betAmount: 1,\n    //   moveA: 1,\n    //   moveB: 2,\n    //   outcome: 2, // 0 = draw, 1 = playerA wins, 2 = playerB wins\n    // }\n    \n    \n    function generateRandomString() {\n      return Math.random().toString(36).substring(2, 15);\n    }\n    \n    function calcWinner(moveA, moveB) {\n      if (moveA == moveB) {\n        return Outcomes.Draw;\n      }\n    \n      if (moveA == Moves.Rock) {\n        if (moveB == Moves.Paper) {\n          return Outcomes.PlayerB;\n        } else {\n          return Outcomes.PlayerA;\n        }\n      }\n    \n      if (moveA == Moves.Paper) {\n        if (moveB == Moves.Scissors) {\n          return Outcomes.PlayerB;\n        } else {\n          return Outcomes.PlayerA;\n        }\n      }\n    \n      if (moveA == Moves.Scissors) {\n        if (moveB == Moves.Rock) {\n          return Outcomes.PlayerB;\n        } else {\n          return Outcomes.PlayerA;\n        }\n      }\n    }\n    \n    export default {\n      components: {\n            ModalStake,\n            ListStaking\n      },\n    //   props: {\n    //     provider: {\n    //       type: String,\n    //       default: null,\n    //     },\n    //   },\n      data() {\n        return {\n          stakingContract: null,\n          handsTokenContract: null,\n          affiliateContract: null,\n  \n          activeAccount: null,\n  \n          handsTokenBalance: 0,\n  \n          handsStakedBalance: 0,\n          totalHandsStakedBalance: 0,\n          stakerAmount: 0,\n  \n          claimableEthForStaking: 0,\n          claimableEthForAffiliate: 0,\n  \n          affiliateLink: null,\n          onboardedAddresses: [],\n  \n          protocolFeeRevenue: 0,\n  \n          //userSharePerBlock: null,\n          totalStakedPerBlock: null,\n\n          showModal:false,\n          isStake:false,\n          stakeFunction: ()=>{console.log(\"stakeFunction\")},\n\n          yourStakeAtBlock: {},\n          totalStakeAtBlock: {},\n          recivedFundsList : [],\n\n            stakeEvents: [],\n            unstakeEvents: [],\n            recievedFundsEvents: [],\n            handledEventIds: new Set(),\n  \n        };\n      },\n      computed: {\n        provider() { return this.$store.state.provider },\n        getActiveAccount() { return this.activeAccount?.toLowerCase()},\n        getWeb3() {return new Web3(this.provider);},\n      },\n      mounted() {\n        console.log(\"provider\", this.provider)\n        console.log(\"mainContracts\", mainContracts)\n  \n      },\n      watch: {\n        provider: {\n            handler(newProvider, oldProvider) {\n                console.log('provider changed', newProvider);\n                if(newProvider){\n                    console.log('provider changed', newProvider);\n                    this.init()\n                }\n            },\n            immediate: true\n        }\n    },\n      methods: {\n          async init(){\n              await this.setAccount();\n              await this.setContracts();\n              this.setHandsTokenBalance();\n              this.setHandsStakedBalance();\n              this.setTotalHandsStakedAmount();\n              this.setClaimableEthForStaking();\n              this.setClaimableEthForAffiliate();\n              this.setProtocolFeeRevenue();\n\n              this.fetchPastEvents();\n              this.subscribeToEvents();\n\n\n  \n              // this.getWETHAddress();\n              // this.getToken0Address();\n              // this.getToken1Address();\n              // this.getReserve0();\n              // this.getReserve1();\n          },\n          async setAccount() {\n              const accounts = await this.getWeb3.eth.getAccounts();\n              console.log(\"accounts\", accounts);\n              this.activeAccount = accounts[0];\n          },\n          async setContracts() {\n  \n  \n            //Set staking contract\n            this.stakingContract = new this.getWeb3.eth.Contract(\n                mainContracts.deployedAbis.Staking,\n                mainContracts.deployedContracts.Staking\n            );\n            this.$store.commit('setStakeContract', this.stakingContract);\n  \n            //Set HandsToken contract\n            this.handsTokenContract = new this.getWeb3.eth.Contract(\n                mainContracts.deployedAbis.HandsToken,\n                mainContracts.deployedContracts.HandsToken\n            );\n            this.$store.commit('setHandsTokenContract', this.handsTokenContract);\n  \n            //Set Affiliate contract\n            this.affiliateContract = new this.getWeb3.eth.Contract(\n                mainContracts.deployedAbis.Affiliate,\n                mainContracts.deployedContracts.Affiliate\n            );\n  \n          },\n  \n          async setHandsTokenBalance() {\n            if(!this.handsTokenContract) return 0;\n  \n            const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n            this.handsTokenBalance = balance / 10 ** 18;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n              this.handsTokenBalance = balance / 10 ** 18;\n            }, 5000);\n          },\n  \n          async setHandsStakedBalance(){\n            if(!this.stakingContract) return 0;\n  \n            const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n            this.handsStakedBalance = balance / 10 ** 18;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n              this.handsStakedBalance = balance / 10 ** 18;\n            }, 5000);\n          },\n  \n          async setTotalHandsStakedAmount(){\n            if(!this.stakingContract) return 0;\n  \n            const balance = await this.stakingContract.methods.viewTotalStaked().call();\n            this.totalHandsStakedBalance = balance / 10 ** 18;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.stakingContract.methods.viewTotalStaked().call();\n              this.totalHandsStakedBalance = balance / 10 ** 18;\n            }, 5000);\n          },\n  \n          async setClaimableEthForStaking(){\n            if(!this.stakingContract) return 0;\n  \n            const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForStaking = balance / 10 ** 18;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n              this.claimableEthForStaking = balance / 10 ** 18;\n            }, 5000);\n          },\n          async setClaimableEthForAffiliate(){\n            if(!this.affiliateContract) return 0;\n  \n            const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForAffiliate = balance / 10 ** 18;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n              this.claimableEthForAffiliate = balance / 10 ** 18;\n            }, 5000);\n          },\n          async setOnboardedAddresses(){\n            if(!this.affiliateContract) return 0;\n  \n            const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n            this.onboardedAddresses = balance;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n              this.onboardedAddresses = balance;\n            }, 5000);\n          },\n  \n          async setProtocolFeeRevenue(){\n            //Get the balance of the Bank contract\n            const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n            this.protocolFeeRevenue = balance / 10 ** 18;\n  \n            //Poll for balance every 5 seconds\n            setInterval(async () => {\n              const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n              this.protocolFeeRevenue = balance / 10 ** 18;\n            }, 5000);\n          },\n  \n          // async setUserSharePerBlock(){\n          //   if(!this.stakingContract) return 0;\n  \n            \n          //   const currentBlock = await this.getWeb3.eth.getBlockNumber();\n          //   this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n          //   console.log(userSharesPerBlock);\n  \n          //   //Poll for balance every 5 seconds\n          //   setInterval(async () => {\n          //     const currentBlock = await this.getWeb3.eth.getBlockNumber();\n          //     this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n          //     console.log(userSharesPerBlock);\n          //   }, 5000);\n          // },\n          \n          \n          addToHandledEvents(event, eventName) {\n            const eventId = `${event.transactionHash}-${eventName}-${event.logIndex}`;\n            this.handledEventIds.add(eventId);\n            },\n   \n          \n          async stake() {\n            // Call the stake method\n            try {\n              const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n              const gasLimit = 30000000;\n  \n              // give allowance to staking contract\n              const tx1 = await this.handsTokenContract.methods.approve(\n                mainContracts.deployedContracts.Staking,\n                this.getWeb3.utils.toWei(\"10\", \"ether\")\n              ).send({ from: this.activeAccount, gasPrice, gasLimit });\n              \n  \n              const tx = await this.stakingContract.methods.stake(\n                this.getWeb3.utils.toWei(\"10\", \"ether\")\n              ).send({ from: this.activeAccount, gasPrice, gasLimit });\n              \n              // Wait for the transaction to be mined\n              await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n              \n              // Transaction was successful if we made it here\n              console.log('Staked', tx);\n              return tx;\n            } catch (error) {\n              // Log more detailed information about the error\n              console.error('Error staking. Message:', error.message);\n              \n              // Log error reason if available. This can be the error message from a require statement in a smart contract\n              if (error.reason) {\n                console.error('Error reason:', error.reason);\n              }\n              \n              // Log the error stack trace for debugging\n              console.error('Error stack trace:', error.stack);\n              \n              return error;\n            }\n          },\n  \n  \n          async unstake() {\n            // Call the unstake method\n            try {\n              const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n              const gasLimit = 3000000;\n  \n              const tx = await this.stakingContract.methods.unstake(\n                this.getWeb3.utils.toWei(\"10\", \"ether\")\n              ).send({ from: this.activeAccount, gasPrice, gasLimit });\n          \n              // Wait for the transaction to be mined\n              await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n          \n              // Transaction was successful if we made it here\n              console.log('Unstaked', tx);\n              return tx;\n            } catch (error) {\n              console.log('Error unstaking', error);\n              return error;\n            }\n          },\n\n          showStakeModal() {\n              this.showModal = true;\n              this.isStake = true;\n              this.stakeFunction = this.stake;\n            },\n\n            showUnstakeModal() {\n              this.showModal = true;\n              this.isStake = false;\n                this.stakeFunction = this.unstake;\n            },\n  \n          async claim() {\n            // Call the claim method\n            try {\n              const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n              const gasLimit = 3000000;\n  \n              const tx = await this.stakingContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n          \n              // Wait for the transaction to be mined\n              await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n          \n              // Transaction was successful if we made it here\n              console.log('Claimed', tx);\n              return tx;\n            } catch (error) {\n              console.log('Error claiming', error);\n              return error;\n            }\n          },\n  \n          async claimAffiliateRewards() {\n            // Call the claim method\n            try {\n              const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n              const gasLimit = 3000000;\n  \n              const tx = await this.affiliateContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n          \n              // Wait for the transaction to be mined\n              await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n          \n              // Transaction was successful if we made it here\n              console.log('Claimed', tx);\n              return tx;\n            } catch (error) {\n              console.log('Error claiming', error);\n              return error;\n            }\n          },\n  \n          async registerAsConsumer() {\n            // Use an empty bytes data\n            const data = '0x';\n          \n          \n            // No callback\n            const callback = '0x0000000000000000000000000000000000000000';\n            const callbackData = '0x';\n          \n            // Call the addLiquidity method\n            try {\n              const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n              const gasLimit = 3000000;\n  \n              const tx = await this.affiliateContract.methods.registerAsConsumer(\n                '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'\n              ).send({ from: this.activeAccount, gasPrice, gasLimit });\n          \n              // Wait for the transaction to be mined\n              \n          \n              // Transaction was successful if we made it here\n              console.log('Registered as consumer', tx);\n              return tx;\n            } catch (error) {\n              console.log('Error registering as a consumer:', error);\n              throw error;\n            }\n          },\n  \n          //handle staking event by getting the event and updating the user's staked balance at the current block number\n          // set the value of this.yourStakeAtBlock and this.totalStakedAtBlock. These are both objects with the block number as the key and the staked balance as the value\n          handleStakingEvent(event) {\n            console.log('Staking event stakerman', event);\n\n            const { staker, amount } = event.returnValues;\n            const blockNumber = event.blockNumber;\n\n            if (staker.toLowerCase() === this.activeAccount.toLowerCase()) {\n              //check if the block number is already in the object, if so add the amount to the existing value\n                if (this.yourStakeAtBlock[blockNumber]) {\n                    this.yourStakeAtBlock[blockNumber] += parseInt(amount);\n                } else {\n                    this.yourStakeAtBlock[blockNumber] = parseInt(amount);\n                }\n            }\n\n            //check if the block number is already in the object, if so add the amount to the existing value\n            if (this.totalStakeAtBlock[blockNumber]) {\n              this.totalStakeAtBlock[blockNumber] += parseInt(amount);\n            } else {\n              this.totalStakeAtBlock[blockNumber] = parseInt(amount);\n            }            \n          },\n\n          handleUnstakingEvent(event) {\n            console.log('Unstaking event', event);\n\n            const { staker, amount } = event.returnValues;\n            const blockNumber = event.blockNumber;\n\n            if (staker.toLowerCase() === this.activeAccount.toLowerCase()) {\n              //check if the block number is already in the object, if so add the amount to the existing value\n                if (this.yourStakeAtBlock[blockNumber]) {\n                    this.yourStakeAtBlock[blockNumber] -= parseInt(amount);\n                } else {\n                    this.yourStakeAtBlock[blockNumber] = parseInt(amount);\n                }\n            }\n\n            //check if the block number is already in the object, if so add the amount to the existing value\n            if (this.totalStakeAtBlock[blockNumber]) {\n              this.totalStakeAtBlock[blockNumber] -= parseInt(amount);\n            } else {\n              this.totalStakeAtBlock[blockNumber] = parseInt(amount);\n            }\n          },\n\n          //append the event to the events array\n          //add object with the following attributes to the events array: timestamp, amount, your share, and total staked\n          async handleRecievedFundsForStaking(event){\n            console.log('Recieved funds for staking event', event);\n\n            const { amount } = event.returnValues;\n            const block = await this.getWeb3.eth.getBlock(event.blockNumber);\n            const timestamp = block.timestamp;\n\n            //get total staked at block, get the block number from keys of totalStakedAtBlock that is closest to the event block number and less than or equal to the event block number\n            const blockNumber = Object.keys(this.totalStakeAtBlock)?.reduce((a, b) => {\n              return b <= event.blockNumber && b > a ? b : a;\n            }, 0);\n\n\n\n            //get the total staked at the block number\n            const totalStaked = this.totalStakeAtBlock[blockNumber];\n\n\n            //get the user's stake at the block number\n            const yourStake = this.yourStakeAtBlock[blockNumber];\n\n            //add object with the following attributes to the events array: timestamp, amount, your share, and total staked\n            this.recivedFundsList.push({\n              timestamp,\n              amount,\n              yourStake,\n              totalStaked\n            });\n          },\n\n          async subscribeToEvents() {\n      const contract = this.stakingContract;\n      const userAddress = this.activeAccount;\n\n      console.log(\"Polling for events...\");\n      console.log(\"contract:\", contract);\n\n      const eventNames = [\n        \"Staked\",\n        \"Unstaked\",\n        \"ReceivedFundsForStaking\",\n      ];\n\n      const eventHandlers = {\n        Staked: this.handleStakingEvent,\n        Unstaked: this.handleUnstakingEvent,\n        ReceivedFundsForStaking: this.handleRecievedFundsForStaking,\n      };\n\n      const pollingInterval = 1000; // Poll every 5 seconds\n\n      let lastBlockChecked = await this.getBlockNumber()\n\n      // Create a new set for keeping track of handled event ids\n\n      setInterval(async () => {\n        const currentBlock = await this.getBlockNumber();\n\n        for (const eventName of eventNames) {\n          const events = await contract.getPastEvents(eventName, {\n            fromBlock: lastBlockChecked + 1,\n            toBlock: currentBlock,\n          });\n\n          events.forEach((event) => {\n            const eventId = `${event.transactionHash}-${eventName}-${event.logIndex}`;\n\n            if (this.handledEventIds.has(eventId)) { return }\n\n            console.log(`New ${eventName} event detected:`, event);\n            eventHandlers[eventName].call(this, event, userAddress);\n\n            this.handledEventIds.add(eventId);\n          });\n        }\n\n        lastBlockChecked = currentBlock;\n        console.log(\"lastBlockChecked:\", lastBlockChecked);\n      }, pollingInterval);\n    },\n\n    async fetchStakeEvents(startBlock, endBlock) {\n      const blockLimit = 50000;\n      const contract = this.stakingContract;\n\n      // Fetch events in batches of 50,000 blocks to avoid block gas limit issues\n      this.stakeEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n        console.log(`Fetching stake events from blocks ${fromBlock} to ${toBlock}...`);\n\n        const events = await contract.getPastEvents(\"Staked\", {\n          fromBlock,\n          toBlock,\n        });\n\n        this.stakeEvents.push(...events);\n\n        fromBlock = toBlock + 1;\n        toBlock = Math.min(fromBlock + blockLimit, endBlock);\n      }\n    },\n\n    async fetchUnstakeEvents(startBlock, endBlock) {\n      const blockLimit = 50000;\n      const contract = this.stakingContract;\n\n      // Fetch events in batches of 50,000 blocks to avoid block gas limit issues\n      this.unstakeEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n        console.log(`Fetching unstake events from blocks ${fromBlock} to ${toBlock}...`);\n\n        const events = await contract.getPastEvents(\"Unstaked\", {\n          fromBlock,\n          toBlock,\n        });\n\n        this.unstakeEvents.push(...events);\n\n        fromBlock = toBlock + 1;\n        toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      }\n    },\n\n    async fetchRecievedFundsEvents(startBlock, endBlock) {\n      const blockLimit = 50000;\n      const contract = this.stakingContract;\n\n      // Fetch events in batches of 50,000 blocks to avoid block gas limit issues\n      this.recievedFundsEvents = [];\n\n      let fromBlock = startBlock;\n      let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      while (fromBlock <= endBlock) {\n        console.log(`Fetching recieved funds events from blocks ${fromBlock} to ${toBlock}...`);\n\n        const events = await contract.getPastEvents(\"ReceivedFundsForStaking\", {\n\n          fromBlock,\n          toBlock,\n        });\n\n        this.recievedFundsEvents.push(...events);\n\n        fromBlock = toBlock + 1;\n        toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n      }\n    },\n\n    processEvents() {\n      this.stakeEvents.forEach((event) => {\n        this.handleStakingEvent(event);\n        this.addToHandledEvents(event, \"Staked\");\n      });\n      this.unstakeEvents.forEach((event) => {\n        this.handleUnstakingEvent(event);\n          this.addToHandledEvents(event, \"Unstaked\");\n      });\n      this.recievedFundsEvents.forEach((event) => {\n        this.handleRecievedFundsForStaking(event);\n          this.addToHandledEvents(event, \"ReceivedFundsForStaking\");\n      });\n    },\n\n    async fetchPastEvents() {\n      const fromBlock = 32000576;\n      const toBlock = await this.getWeb3.eth.getBlockNumber();\n\n      await this.fetchStakeEvents(fromBlock, toBlock);\n      await this.fetchUnstakeEvents(fromBlock, toBlock);\n      await this.fetchRecievedFundsEvents(fromBlock, toBlock);\n\n      this.processEvents();\n\n    },\n\n  \n  \n          \n      \n          async getBlockNumber() {\n              return await this.getWeb3.eth.getBlockNumber();\n          },  \n          \n      },\n        \n    };\n    </script>\n    ","<template>\n    <transition name=\"fade\">\n        <div class=\"modal-container\" v-if=\"show\">\n            <div class=\"modal\">\n                <!-- Result text-->\n                <h4 style=\"margin-top:60px\" v-if=\"isStake\">Stake<span style=\"color:#E19885; font-weight:bold;\">HANDS</span> </h4>\n                <h4 style=\"margin-top:60px\" v-else>Unstake<span style=\"color:#E19885; font-weight:bold;\">HANDS</span> </h4>\n\n                <!-- Input binded to amount data object -->\n                <input\n                v-model=\"amount\"\n                type=\"number\"\n                placeholder=\"Amount\"\n                style=\"width: 100%; height: 50px; border-radius: 10px; border: 1px solid #E19885; padding: 10px; font-size: 20px; font-weight: bold; color: #E19885; text-align: center; margin-top: 20px; margin-bottom: 20px;\"\n                />\n                \n\n                <!-- Buttons-->\n                <div class=\"modal-button-holder\">\n                    <button\n                    v-if=\"isStake\"\n                    class=\"button-dark\"\n                    @click=\"stake\">\n                        Stake\n                    </button> \n                    <button\n                    v-else\n                    class=\"button-dark\"\n                    @click=\"unstake\">\n                        Unstake\n                    </button>\n                    <button\n                    class=\"button-light\"\n                    @click=\"toggleShow\">\n                        Close\n                    </button>\n                </div>\n                \n            </div>\n        </div>\n    </transition>\n</template>\n<style scoped>  \n  \n  h4 {\n    margin: 0;\n    color: #353535;\ntext-align: center;\nfont-size: 40px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\n  }\n  \n  .modal-container{\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    backdrop-filter: blur(10px);\n    background-color: rgba(255, 255, 255, 0.5);  \n    z-index: 1000000000;\n  }\n  \n  .modal {\n    color: black;\n    padding: 20px;\n    width: auto;\n    position: fixed;\n    align-self: center;\n    border-radius: 48px;\nbackground: #FFF;\nwidth: 678px;\nflex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    gap: 24px;\n  }\n\n  .modal-button-holder {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    width: 100%;\n  }\n  \n  .fade-enter-active, .fade-leave-active {\n    transition: all 0.3s ease-in-out;\n  }\n  \n  .fade-enter, .fade-leave-to {\n    transform: scale(0.9,0.9) translatey(10%);\n    opacity: 0;\n  }\n\n  .modal-container h1 {\ntext-align: center;\nfont-size: 80px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 800;\nline-height: normal;\n  }\n  \n  .bk {\n    \n  }\n  .trophy{\n    margin-top: -100px;\n  }\n  \n  .blur {\n    filter: blur(10px) opacity(50%);\n    transition: all 0.3s ease-in-out;\n\n  }\n</style>\n\n<script>\nexport default {\n    data() {\n        return {\n            amount: 0,\n        }\n    },\n    model: {\n        prop: 'show',\n        event: 'update:show'\n    },\n    props: {\n        show: {\n            type: Boolean,\n            default: false\n        },\n        isStake: {\n            type: Boolean,\n            default: true\n        },\n        stakeFunction: {\n            type: Function,\n            default: () => {}\n        }\n    },\n    methods: {\n        toggleShow() { this.$emit('update:show', !this.show) },\n        stake() { this.$store.dispatch('stake', this.amount.toString()) },\n        unstake() { this.$store.dispatch('unstake', this.amount.toString()) },\n    },\n    computed: {\n        isStaking() { return this.$store.state.isStaking },\n        isUnstaking() { return this.$store.state.isUnstaking },\n    },\n\n    //output the value of move\n    created(){\n        console.log(this.move)\n    }\n}\n</script>\n\n  ","import { render } from \"./ModalStake.vue?vue&type=template&id=78b70d00&scoped=true\"\nimport script from \"./ModalStake.vue?vue&type=script&lang=js\"\nexport * from \"./ModalStake.vue?vue&type=script&lang=js\"\n\nimport \"./ModalStake.vue?vue&type=style&index=0&id=78b70d00&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78b70d00\"]])\n\nexport default __exports__","<template>\n    <div style=\"margin: 0 80px;\">\n      <table style=\"table-layout: fixed;\">\n        <thead>\n        \n          <tr>\n            <th><div class=\"table-header-item\"><div class=\"star-symbol-table\"></div><p>Date</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"clock-symbol-table\"></div><p>Protocol Revenue</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user1-symbol-table\"></div><p>Your earnings</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user2-symbol-table\"></div><p>Your stake</p></div></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in selectedData\" :key=\"index\">\n            <td class=\"result\"> {{item.timestamp}} </td>\n            <td class=\"score\">{{item.amount}}</td>\n            <td class=\"earned\">{{ (item.yourStaked/item.totalStaked) * item.amount }}</td>\n            <td class=\"rounds\">{{ item.yourStaked }} / {{item.totalStaked}} HANDS</td>\n            <td class=\"time\">{{ item.time }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n\n<style scoped>\n.earned-positive {\n  color: #24B27F;\n}\n\n.earned-negative {\n  color: #FF6969;\n}\n</style>\n  \n  <script>\nimport GameMove from './GameMove.vue'\nimport ProfileItem from './ProfileItem.vue'\n  export default {\n    components: {\n        GameMove,\n        ProfileItem,\n    },\n    data() {\n      return {\n        selectedTab: 'Completed',\n      }\n    },\n    props: {\n        events: {type: Array,},\n        address: {type: String,},\n    },\n    computed: {\n      selectedData() {\n        console.log(\"profile game list\", this.events)\n        return this.events;\n      }\n    },\n    methods:{\n        truncateAddress(address) {\n            return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n        },\n    }\n  }\n  </script>\n  \n  <style scoped>\n \n  \n  \n\n  \n  .tabs {\n\n  }\n  \n  .tabs button {\n\n  }\n  \n  .tabs .active {\n    font-weight: bold;\n  }\n  </style>\n  ","import { render } from \"./ListStaking.vue?vue&type=template&id=6c71ea0e&scoped=true\"\nimport script from \"./ListStaking.vue?vue&type=script&lang=js\"\nexport * from \"./ListStaking.vue?vue&type=script&lang=js\"\n\nimport \"./ListStaking.vue?vue&type=style&index=0&id=6c71ea0e&scoped=true&lang=css\"\nimport \"./ListStaking.vue?vue&type=style&index=1&id=6c71ea0e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6c71ea0e\"]])\n\nexport default __exports__","import { render } from \"./Staking.vue?vue&type=template&id=24d2c176\"\nimport script from \"./Staking.vue?vue&type=script&lang=js\"\nexport * from \"./Staking.vue?vue&type=script&lang=js\"\n\nimport \"./Staking.vue?vue&type=style&index=0&id=24d2c176&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div \n      style=\"gap:50px\"\n      class=\"content staking-view\">\n      <router-link class=\"back\" to=\"/\">\n      </router-link>\n      <div style=\"margin-bottom:56;\" class=\"profile-big\"></div>\n      <p >Your Affiliate Rewards</p>\n      <div style=\"display:flex; justify-content:center; gap:40px; align-items:end;\">\n      <h1 style=\"margin:0; margin-top: -20px; margin-bottom:70px; padding:0; align-items:end; margin-bottom:-20px; font-size: 100px;\">\n          {{this.claimableEthForAffiliate?.toString().split(\".\")[0]}}.{{ this.claimableEthForAffiliate?.toString().split(\".\")[1]?.substring(0,4)?? \"00\" }}\n          <span\n              style=\"font-size: 50px;\"\n              class=\"currency-symbol\"\n          >ETH</span>\n      </h1>\n      </div>\n      <div style=\"display: flex; margin-top:60px; margin-bottom:90px;\">\n        <button \n            @click=\"claimAffiliateRewards\"\n          class=\"button-dark\"\n        >\n          Claim Rewards\n        </button>\n        <button\n          @click=\"copyAffiliateLink\"\n          class=\"button-light\"\n        >\n          Copy Link\n        </button>\n  \n      </div>\n\n          \n  \n    <div>\n      <p>Your Onboarded Users</p>\n      <list-affiliate\n        :events=\"onboardedConsumerList\"\n        :address=\"activeAccount\"\n      ></list-affiliate>\n      </div>\n  <div>\n    \n      Staking screen\n\n      <div>\n        <div>Hands token balance : {{handsTokenBalance}}</div>\n\n        <div>Your staked amount : {{handsStakedBalance}}</div>\n        <div>Share of total hands staked : {{(handsStakedBalance / totalHandsStakedBalance) * 100}}%</div>\n        <div>Your claimable ETH for staking : {{claimableEthForStaking}}</div>\n        <div>Protocol fee revenue : {{protocolFeeRevenue}}</div>\n        <div>Protocol affiliate revenue : {{protocolAffiliateRevenue}}</div>\n        <div>Total hands staked balance : {{totalHandsStakedBalance}}</div>\n\n        <div>Your onboarded addresses : \n          <div v-for=\"address in onboardedAddresses\" :key=\"address\">\n            {{address}}\n          </div>\n        </div>\n        <div>Claimable Affiliate rewards : {{claimableEthForAffiliate}}</div>\n        <div>Your affiliate link : {{affiliateLink}}</div>\n      </div>\n\n      <button @click=\"stake\">Stake 10 HANDS</button>\n      <button @click=\"unstake\">Unstake 10 HANDS</button>\n      <button @click=\"claim\">Claim Staking Rewards</button>\n      <button @click=\"claimAffiliateRewards\">Claim Affiliate Rewards</button>\n      <!-- <button @click=\"removeLiquidity\">Remove Liquidity 10 WETH - 10 HANDS</button> -->\n      <!-- <button @click=\"stakeLiquidity\">Stake Liquidity</button> -->\n      <!-- <button @click=\"stakeHands\">Stake 100 Hands</button> -->\n      <!-- <button @click=\"unstakeHands\">Unstake Hands</button> -->\n\n  </div>\n  </div>\n\n  <modal-stake \n  v-model:show=\"showModal\"\n  v-model:isStake=\"isStake\"\n  v-modal:stakeFunction=\"stakeFunction\"\n>\n  Hello world\n  </modal-stake>\n</template>\n\n<style>\n.profile-big {\nwidth: 240px;\nheight: 240px;\nflex-shrink: 0;\nborder-radius: 240px;\nbackground:  #E9E9E9 -105.215px 0px / 149.927% 100% no-repeat;\nbox-shadow: 0px 50px 120px 0px rgba(0, 0, 0, 0.08);\n}\n\n.staking-view{\n}\n\n.staking-view p {\n  color: #000;\ntext-align: center;\nfont-size: 24px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 400;\nline-height: 160%;\n}\n\n.staking-view h1 {\n  margin: 0;\n}\n\n.staking-view h2 {\n  color: #353535;\ntext-align: center;\nfont-size: 60px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 10000;\nline-height: normal;\nletter-spacing: -3px;\nmargin: 0;\n}\n\n.staking-view p {\n  margin: 0;\n}\n\n\n\n\n.earnings {\ntext-align: center;\nfont-size: 32px;\nfont-family: Sen;\nfont-style: normal;\nfont-weight: 800;\nline-height: normal;\ndisplay: flex;\ngap: 0px;\nalign-items: end;\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  border-radius: 24px;\n  background: #FFF;\n  padding: 100px;\n  width: 514px;\n\n}\n\n\n</style>\n\n  \n<script>\n\n  import RPC from \"../web3RPC\";\n  \n  import { Moves, Outcomes, GameStates } from \"../types\";\n  import Hands from \"../contracts/Hands.json\";\n  import Web3 from \"web3\";\n  import { sha256 } from \"js-sha256\";\n  \n  import mainContracts from \"../../../contracts/local-contracts.json\"\nimport GameMove from '@/components/GameMove.vue';\nimport ModalStake from '@/components/ModalStake.vue';\nimport ListAffiliate from '@/components/ListAffiliate.vue';\n  \n  //EXAMPLE Game.\n  // {\n  //   gameId: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   playerA: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   playerB: \"0x111C3E89Ce80e62EE88318C2804920D4c96f92bb\",\n  //   states: {}\n  \n  //   betAmount: 1,\n  //   moveA: 1,\n  //   moveB: 2,\n  //   outcome: 2, // 0 = draw, 1 = playerA wins, 2 = playerB wins\n  // }\n  \n  \n  function generateRandomString() {\n    return Math.random().toString(36).substring(2, 15);\n  }\n  \n  function calcWinner(moveA, moveB) {\n    if (moveA == moveB) {\n      return Outcomes.Draw;\n    }\n  \n    if (moveA == Moves.Rock) {\n      if (moveB == Moves.Paper) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  \n    if (moveA == Moves.Paper) {\n      if (moveB == Moves.Scissors) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  \n    if (moveA == Moves.Scissors) {\n      if (moveB == Moves.Rock) {\n        return Outcomes.PlayerB;\n      } else {\n        return Outcomes.PlayerA;\n      }\n    }\n  }\n  \n  export default {\n    components: {\n          ModalStake,\n          ListAffiliate,\n    },\n  //   props: {\n  //     provider: {\n  //       type: String,\n  //       default: null,\n  //     },\n  //   },\n    data() {\n      return {\n        stakingContract: null,\n        handsTokenContract: null,\n        affiliateContract: null,\n\n        activeAccount: null,\n\n        handsTokenBalance: 0,\n\n        handsStakedBalance: 0,\n        totalHandsStakedBalance: 0,\n        stakerAmount: 0,\n\n        claimableEthForStaking: 0,\n        claimableEthForAffiliate: 0,\n\n        affiliateLink: null,\n        onboardedAddresses: [],\n\n        protocolFeeRevenue: 0,\n\n        //userSharePerBlock: null,\n        totalStakedPerBlock: null,\n\n        showModal:false,\n        isStake:false,\n        stakeFunction: ()=>{console.log(\"stakeFunction\")},\n\n        yourConsumers: [],\n        timeConsumerJoined: {},\n        totalRewardsFromConsumer: {},\n        rewardsArrayFromConsumer: {},\n        recivedFundsList : [],\n\n          consumerRegisteredEvents: [],\n          rewardRecievedEvents: [],\n          handledEventIds: new Set(),\n\n      };\n    },\n    computed: {\n      provider() { return this.$store.state.provider },\n      getActiveAccount() { return this.activeAccount?.toLowerCase()},\n      getWeb3() {return new Web3(this.provider);},\n      onboardedConsumerList(){\n        return this.yourConsumers.map((consumer) => {\n          return {\n            user: consumer,\n            totalRevenue: this.totalRewardsFromConsumer[consumer],\n            revenueTimestamps: this.rewardsArrayFromConsumer[consumer],\n            timestamp: this.timeConsumerJoined[consumer],\n          };\n        });\n      },\n    },\n    mounted() {\n      console.log(\"provider\", this.provider)\n      console.log(\"mainContracts\", mainContracts)\n\n    },\n    watch: {\n      provider: {\n          handler(newProvider, oldProvider) {\n              console.log('provider changed', newProvider);\n              if(newProvider){\n                  console.log('provider changed', newProvider);\n                  this.init()\n              }\n          },\n          immediate: true\n      }\n  },\n    methods: {\n      //copy affiliate link to clipboard\n    //affiliate link is the current url with the user's address appended to the end as a query string\n    copyAffiliateLink() {\n      const url = new URL(window.location.href);\n      url.searchParams.set(\"ref\", this.activeAccount);\n      navigator.clipboard.writeText(url.href);\n      alert(\"Copied to clipboard!\");\n    },\n        async init(){\n            await this.setAccount();\n            await this.setContracts();\n            this.setHandsTokenBalance();\n            this.setHandsStakedBalance();\n            this.setTotalHandsStakedAmount();\n            this.setClaimableEthForStaking();\n            this.setClaimableEthForAffiliate();\n            this.setProtocolFeeRevenue();\n\n            this.fetchPastEvents();\n            this.subscribeToEvents();\n\n\n\n            // this.getWETHAddress();\n            // this.getToken0Address();\n            // this.getToken1Address();\n            // this.getReserve0();\n            // this.getReserve1();\n        },\n        async setAccount() {\n            const accounts = await this.getWeb3.eth.getAccounts();\n            console.log(\"accounts\", accounts);\n            this.activeAccount = accounts[0];\n        },\n        async setContracts() {\n\n\n          //Set staking contract\n          this.stakingContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.Staking,\n              mainContracts.deployedContracts.Staking\n          );\n\n          //Set HandsToken contract\n          this.handsTokenContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.HandsToken,\n              mainContracts.deployedContracts.HandsToken\n          );\n\n          //Set Affiliate contract\n          this.affiliateContract = new this.getWeb3.eth.Contract(\n              mainContracts.deployedAbis.Affiliate,\n              mainContracts.deployedContracts.Affiliate\n          );\n\n        },\n\n        async setHandsTokenBalance() {\n          if(!this.handsTokenContract) return 0;\n\n          const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n          this.handsTokenBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();\n            this.handsTokenBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setHandsStakedBalance(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n          this.handsStakedBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.stakedAmount(this.activeAccount).call();\n            this.handsStakedBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setTotalHandsStakedAmount(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.viewTotalStaked().call();\n          this.totalHandsStakedBalance = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.viewTotalStaked().call();\n            this.totalHandsStakedBalance = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        async setClaimableEthForStaking(){\n          if(!this.stakingContract) return 0;\n\n          const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n          this.claimableEthForStaking = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForStaking = balance / 10 ** 18;\n          }, 5000);\n        },\n        async setClaimableEthForAffiliate(){\n          if(!this.affiliateContract) return 0;\n\n          const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n          this.claimableEthForAffiliate = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();\n            this.claimableEthForAffiliate = balance / 10 ** 18;\n          }, 5000);\n        },\n        async setOnboardedAddresses(){\n          if(!this.affiliateContract) return 0;\n\n          const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n          this.onboardedAddresses = balance;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();\n            this.onboardedAddresses = balance;\n          }, 5000);\n        },\n\n        async setProtocolFeeRevenue(){\n          //Get the balance of the Bank contract\n          const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n          this.protocolFeeRevenue = balance / 10 ** 18;\n\n          //Poll for balance every 5 seconds\n          setInterval(async () => {\n            const balance = await this.getWeb3.eth.getBalance(mainContracts.deployedContracts.Bank);\n            this.protocolFeeRevenue = balance / 10 ** 18;\n          }, 5000);\n        },\n\n        // async setUserSharePerBlock(){\n        //   if(!this.stakingContract) return 0;\n\n          \n        //   const currentBlock = await this.getWeb3.eth.getBlockNumber();\n        //   this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n        //   console.log(userSharesPerBlock);\n\n        //   //Poll for balance every 5 seconds\n        //   setInterval(async () => {\n        //     const currentBlock = await this.getWeb3.eth.getBlockNumber();\n        //     this.userSharePerBlock = await this.stakingContract.methods.getUserShareAtBlock(this.activeAccount, currentBlock).call();\n        //     console.log(userSharesPerBlock);\n        //   }, 5000);\n        // },\n        \n        \n          \n \n        \n        async stake() {\n          // Call the stake method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 30000000;\n\n            // give allowance to staking contract\n            const tx1 = await this.handsTokenContract.methods.approve(\n              mainContracts.deployedContracts.Staking,\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n            \n\n            const tx = await this.stakingContract.methods.stake(\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n            \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n            \n            // Transaction was successful if we made it here\n            console.log('Staked', tx);\n            return tx;\n          } catch (error) {\n            // Log more detailed information about the error\n            console.error('Error staking. Message:', error.message);\n            \n            // Log error reason if available. This can be the error message from a require statement in a smart contract\n            if (error.reason) {\n              console.error('Error reason:', error.reason);\n            }\n            \n            // Log the error stack trace for debugging\n            console.error('Error stack trace:', error.stack);\n            \n            return error;\n          }\n        },\n\n\n        async unstake() {\n          // Call the unstake method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.stakingContract.methods.unstake(\n              this.getWeb3.utils.toWei(\"10\", \"ether\")\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Unstaked', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error unstaking', error);\n            return error;\n          }\n        },\n\n        showStakeModal() {\n            this.showModal = true;\n            this.isStake = true;\n            this.stakeFunction = this.stake;\n          },\n\n          showUnstakeModal() {\n            this.showModal = true;\n            this.isStake = false;\n              this.stakeFunction = this.unstake;\n          },\n\n        async claim() {\n          // Call the claim method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.stakingContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Claimed', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error claiming', error);\n            return error;\n          }\n        },\n\n        async claimAffiliateRewards() {\n          // Call the claim method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.affiliateContract.methods.claimRewards().send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            await this.getWeb3.eth.getTransactionReceipt(tx.transactionHash);\n        \n            // Transaction was successful if we made it here\n            console.log('Claimed', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error claiming', error);\n            return error;\n          }\n        },\n\n        async registerAsConsumer() {\n          // Use an empty bytes data\n          const data = '0x';\n        \n        \n          // No callback\n          const callback = '0x0000000000000000000000000000000000000000';\n          const callbackData = '0x';\n        \n          // Call the addLiquidity method\n          try {\n            const gasPrice = this.getWeb3.utils.toWei(\"0.1\", \"gwei\");\n            const gasLimit = 3000000;\n\n            const tx = await this.affiliateContract.methods.registerAsConsumer(\n              '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'\n            ).send({ from: this.activeAccount, gasPrice, gasLimit });\n        \n            // Wait for the transaction to be mined\n            \n        \n            // Transaction was successful if we made it here\n            console.log('Registered as consumer', tx);\n            return tx;\n          } catch (error) {\n            console.log('Error registering as a consumer:', error);\n            throw error;\n          }\n        },\n\n\n        async handleConsumerRegisteredEvent(event) {\n          console.log('Consumer registered event', event);\n\n          const { consumer, affiliate } = event.returnValues;\n          const block = await this.getWeb3.eth.getBlock(event.blockNumber);\n            const timestamp = block.timestamp;\n\n          //check if user is affiliate, if so add to consumer list\n          if (affiliate.toLowerCase() === this.activeAccount.toLowerCase()) {\n            this.yourConsumers.push(consumer);\n            this.timeConsumerJoined[consumer] = timestamp;\n          }\n          \n        },\n\n        async handleRewardRecievedEvent(event) {\n          console.log('Reward recieved event', event);\n\n          const { affiliate, consumer, amount } = event.returnValues;\n          const block = await this.getWeb3.eth.getBlock(event.blockNumber);\n          const timestamp = block.timestamp;\n\n          //append reward amount to totalRewardsForConsumer object\n          if (this.totalRewardsFromConsumer[consumer]) {\n            this.totalRewardsFromConsumer[consumer] += parseInt(amount);\n          } else {\n            this.totalRewardsFromConsumer[consumer] = parseInt(amount);\n          }\n          \n          //append reward amount to rewardsArrayFromConsumer\n          if (this.rewardsArrayFromConsumer[consumer]) {\n            this.rewardsArrayFromConsumer[consumer].push({\n              amount:parseFloat(amount),\n              timestamp,\n            });\n          } else {\n            this.rewardsArrayFromConsumer[consumer] = [parseInt(amount)];\n          }\n          \n        },\n\n        async subscribeToEvents() {\n    const contract = this.affiliateContract;\n    const userAddress = this.activeAccount;\n\n    console.log(\"Polling for events...\");\n    console.log(\"contract:\", contract);\n\n    const eventNames = [\n      \"ConsumerRegistered\",\n      \"RewardRecieved\",\n    ];\n\n    const eventHandlers = {\n      ConsumerRegistered: this.handleConsumerRegisteredEvent,\n      RewardRecieved: this.handleRewardRecievedEvent,\n    };\n\n    const pollingInterval = 1000; // Poll every 5 seconds\n\n    let lastBlockChecked = await this.getBlockNumber()\n\n    // Create a new set for keeping track of handled event ids\n\n    setInterval(async () => {\n      const currentBlock = await this.getBlockNumber();\n\n      for (const eventName of eventNames) {\n        const events = await contract.getPastEvents(eventName, {\n          fromBlock: lastBlockChecked + 1,\n          toBlock: currentBlock,\n        });\n\n        events.forEach((event) => {\n          const eventId = `${event.transactionHash}-${eventName}-${event.logIndex}`;\n\n          if (this.handledEventIds.has(eventId)) { return }\n\n          console.log(`New ${eventName} event detected:`, event);\n          eventHandlers[eventName].call(this, event, userAddress);\n\n          this.handledEventIds.add(eventId);\n        });\n      }\n\n      lastBlockChecked = currentBlock;\n      console.log(\"lastBlockChecked:\", lastBlockChecked);\n    }, pollingInterval);\n  },\n\n  async fetchConsumerRegisteredEvents(startBlock, endBlock) {\n    const blockLimit = 50000;\n    const contract = this.affiliateContract;\n\n    this.consumerRegisteredEvents = [];\n\n    let fromBlock = startBlock;\n    let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n    while (fromBlock <= endBlock) {\n      console.log(`Fetching ConsumerRegistered events from blocks ${fromBlock} to ${toBlock}...`);\n\n      const events = await contract.getPastEvents(\"ConsumerRegistered\", {\n        fromBlock,\n        toBlock,\n      });\n\n      this.consumerRegisteredEvents.push(...events)\n\n      fromBlock = toBlock + 1;\n      toBlock = Math.min(fromBlock + blockLimit, endBlock);\n    }\n  },\n\n      async fetchRewardRecievedEvents(startBlock, endBlock) {\n        const blockLimit = 50000;\n        const contract = this.affiliateContract;\n\n        this.rewardRecievedEvents = [];\n\n        let fromBlock = startBlock;\n        let toBlock = Math.min(fromBlock + blockLimit, endBlock);\n\n        while (fromBlock <= endBlock) {\n          console.log(`Fetching RewardRecieved events from blocks ${fromBlock} to ${toBlock}...`);\n\n          const events = await contract.getPastEvents(\"RewardRecieved\", {\n            fromBlock,\n            toBlock,\n          });\n\n          this.rewardRecievedEvents.push(...events)\n\n          fromBlock = toBlock + 1;\n          toBlock = Math.min(fromBlock + blockLimit, endBlock);\n        }\n      },\n\n              processEvents() {\n          this.consumerRegisteredEvents.forEach((event) => {\n            this.handleConsumerRegisteredEvent(event);\n          });\n\n          this.rewardRecievedEvents.forEach((event) => {\n            this.handleRewardRecievedEvent(event);\n          });\n\n                },\n\n      async fetchPastEvents() {\n        const fromBlock = 32000576;\n        const toBlock = await this.getWeb3.eth.getBlockNumber();\n\n        await this.fetchConsumerRegisteredEvents(fromBlock, toBlock);\n        await this.fetchRewardRecievedEvents(fromBlock, toBlock);\n\n\n        this.processEvents();\n\n      },\n\n\n\n        \n    \n        async getBlockNumber() {\n            return await this.getWeb3.eth.getBlockNumber();\n        },  \n        \n    },\n      \n  };\n  </script>\n  ","<template>\n    <div style=\"margin: 0 80px;\">\n      <table style=\"table-layout: fixed;\">\n        <thead>\n        \n          <tr>\n            <th><div class=\"table-header-item\"><div class=\"star-symbol-table\"></div><p>Time Joined</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"clock-symbol-table\"></div><p>User</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user1-symbol-table\"></div><p>Total Revenue Generated</p></div></th>\n            <th><div class=\"table-header-item\"><div class=\"user2-symbol-table\"></div><p>Revenue Timestamps</p></div></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in selectedData\" :key=\"index\">\n            <td class=\"result\"> {{item.timestamp}} </td>\n            <profile-item :address=\"item.user\"></profile-item>\n            <td class=\"earned\">{{item.totalRevenue }}</td>\n            <td class=\"round\" colspan=\"2\">\n                <ul class=\"rounds-container\">\n                  <div v-for=\"(revenueTimestamp, index) in item.revenueTimestamps\" :key=\"index\" class=\"rounds-list\">\n                    <p>{{ revenueTimestamp.amount }} at {{ revenueTimestamp.timestamp }}</p>\n                  </div>\n                </ul>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n\n<style scoped>\n.earned-positive {\n  color: #24B27F;\n}\n\n.earned-negative {\n  color: #FF6969;\n}\n</style>\n  \n  <script>\nimport GameMove from './GameMove.vue'\nimport ProfileItem from './ProfileItem.vue'\n  export default {\n    components: {\n        GameMove,\n        ProfileItem,\n    },\n    data() {\n      return {\n        selectedTab: 'Completed',\n      }\n    },\n    props: {\n        events: {type: Array,},\n        address: {type: String,},\n    },\n    computed: {\n      selectedData() {\n        console.log(\"profile game list\", this.events)\n        return this.events;\n      }\n    },\n    methods:{\n        truncateAddress(address) {\n            return address?.slice(0, 6) + \"...\" + address?.slice(-4)\n        },\n    }\n  }\n  </script>\n  \n  <style scoped>\n \n  \n  \n\n  \n  .tabs {\n\n  }\n  \n  .tabs button {\n\n  }\n  \n  .tabs .active {\n    font-weight: bold;\n  }\n  </style>\n  ","import { render } from \"./ListAffiliate.vue?vue&type=template&id=2845a109&scoped=true\"\nimport script from \"./ListAffiliate.vue?vue&type=script&lang=js\"\nexport * from \"./ListAffiliate.vue?vue&type=script&lang=js\"\n\nimport \"./ListAffiliate.vue?vue&type=style&index=0&id=2845a109&scoped=true&lang=css\"\nimport \"./ListAffiliate.vue?vue&type=style&index=1&id=2845a109&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2845a109\"]])\n\nexport default __exports__","import { render } from \"./Affiliate.vue?vue&type=template&id=66760661\"\nimport script from \"./Affiliate.vue?vue&type=script&lang=js\"\nexport * from \"./Affiliate.vue?vue&type=script&lang=js\"\n\nimport \"./Affiliate.vue?vue&type=style&index=0&id=66760661&lang=css\"\n\nimport exportComponent from \"/home/glockiana/Documents/incubator/gothands/front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Profile from '../views/Profile.vue'\nimport Staking from '../views/Staking.vue'\nimport Affiliate from '../views/Affiliate.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    component: Home\n  },\n  {\n    path: '/profile/:id',\n    name: 'profile',\n    component: Profile\n  },\n  {\n    path: '/staking',\n    name: 'staking',\n    component: Staking\n  },\n  {\n    path: '/affiliate',\n    name: 'affiliate',\n    component: Affiliate\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from './router'\nimport store from './store'\nimport './assets/index.css'\n\ncreateApp(App).use(store).use(router).mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"233\":\"f9e70079\",\"314\":\"399aa542\",\"348\":\"122ff594\",\"462\":\"8693b786\",\"503\":\"7a838632\",\"537\":\"2d419592\",\"550\":\"c683c210\",\"737\":\"0ca0c14d\",\"796\":\"b2ffcfe3\",\"845\":\"1749e940\",\"901\":\"478802ae\",\"951\":\"5aa61914\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"Handsy.io:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkHandsy_io\"] = self[\"webpackChunkHandsy_io\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], () => (__webpack_require__(12145)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","_createElementVNode","class","_hoisted_2","style","_hoisted_3","key","_hoisted_4","render","_ctx","_cache","$props","$setup","$data","$options","_component_router_link","_resolveComponent","_component_router_view","_openBlock","_createElementBlock","_Fragment","isInGame","loggedin","_createBlock","to","default","_withCtx","_createTextVNode","_","_createCommentVNode","onClick","args","leaveGame","joiningPassword","_toDisplayString","_createVNode","_hoisted_43","_hoisted_44","_component_Modal","show","showModal","$event","winnerPoints","loserPoints","win","winModal","bet","selectedBet","isWaiting","balance","_this$balance","toString","split","_hoisted_5","_this$balance$toStrin","_this$balance2","_this$balance2$toStri","substring","_hoisted_6","_hoisted_7","_component_profile_item","address","activeAccount","isBurner","_component_profile_item_burner","burnerAddress","burnerBalance","_hoisted_8","_hoisted_9","currentRound","currentWager","roundStateString","_hoisted_10","shouldMove","_hoisted_11","_hoisted_12","_normalizeClass","yourCurrentPoints","bothRevealed","_component_GameMove","move","selectedMove","_hoisted_13","_hoisted_14","_hoisted_15","truncateAddress","yourAddress","_hoisted_16","_hoisted_17","isNormal","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_normalizeStyle","isRock","onRock","_hoisted_25","isPaper","onPaper","_hoisted_26","isScissors","onScissors","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_this$selectedBet","_hoisted_32","_this$selectedBet$toS","_this$selectedBet2","_this$selectedBet2$to","_hoisted_33","_hoisted_34","opponentCurrentPoints","opponentMove","isOpponentMoveSent","_hoisted_35","_hoisted_36","_hoisted_37","opponentAddress","_hoisted_38","opponentBalance","_hoisted_40","_hoisted_39","_hoisted_41","_hoisted_42","isRegistering","buyEth","registerGame","playWithFriend","value","onInput","event","target","_withModifiers","_renderList","wagerSteps","step","_hoisted_48","togglePlayWithFriend","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","cancelGame","copyPasswordGameLink","_component_game_list","activeData","activeGames","completedData","completedGames","pendingData","pendingGames","EthereumRpc","constructor","provider","_defineProperty","this","async","web3","Web3","chainId","eth","getChainId","error","getAccounts","utils","fromWei","getBalance","console","log","fromAddress","destination","amount","toWei","receipt","sendTransaction","from","maxPriorityFeePerGas","maxFeePerGas","originalMessage","signedMessage","personal","sign","privateKey","request","method","Moves","None","Rock","Paper","Scissors","LoadingMark","CheckMark","Outcomes","PlayerA","PlayerB","Draw","Cancelled","GameStates","Initial","Registering","Waiting","Matched","Sending","Sent","Revealing","Revealed","Finished","__default__","data","props","Number","isSmall","created","__exports__","colspan","tabs","tab","index","selectedTab","active","selectedData","item","_item$points$item$pla","points","playerA","playerB","time","moves","round","roundIndex","_component_game_move","type","String","required","methods","slice","components","GameMove","ProfileItem","Array","fill","score","Date","toLocaleString","player1","player2","prize","rounds","computed","_Transition","name","toggleShow","model","prop","Boolean","$emit","createStore","state","games","localGames","localStorage","getItem","JSON","parse","loading","loginButtonStatus","connecting","balances","web3auth","isMetamask","isJoiningPasswordMatch","stakeContract","handsTokenContract","getters","mutations","setLoggedIn","payload","setLoading","setLoginButtonStatus","setConnecting","setActiveAccount","setBalance","setBalances","setProvider","setWeb3Auth","setIsMetamask","setGames","setItem","stringify","setIsInGame","setLeaveGame","setIsJoiningPasswordMatch","setJoiningPassword","setHandsTokenContract","setStakeContract","actions","commit","rpc","RPC","getBalanceOf","toLowerCase","connect","gasPrice","gasLimit","tx","approve","mainContracts","send","stake","getTransactionReceipt","transactionHash","unstake","modules","isHex","test","generatePrivateKey","randomBytes","ethers","privateKeyToAccount","wallet","assertPrivateKey","cacheKey","Error","getBurnerWallet","cachedPrivateKey","subject","BehaviorSubject","window","addEventListener","listener","closed","removeEventListener","storageArea","newValue","next","warn","gameStateToString","CONTRACT_ADDRESS","CONTRACT_ABI","generateRandomString","Math","random","calcWinner","moveA","moveB","GameList","Modal","ProfileItemBurner","stripeClientSecret","initialized","lastBlockSearched","randomString","contractInstance","contractReadInstance","pastGames","playerRegisteredEvents","playerWaitingEvents","playersMatchedEvents","moveCommittedEvents","moveRevealedEvents","newRoundEvents","gameOutcomeEvents","playerCancelledEvents","sliderIndex","_lastGameId","rampSdk","affiliateContract","affiliateOfUser","handledEventIds","Set","burnerTopUpAmount","burnerPrivateKey","burnerContractInstance","burnerNonce","$store","getActiveAccount","_this$activeAccount","getWeb3","getWeb3Read","toFixed","_this$burnerAddress","gameState","_this$currentGameId","_this$currentGameId2","_this$currentGameId3","_this$games$states$cu","_this$currentGameId4","currentGameId","outcome","states","yourGameStateToString","isRevealing","isRevealed","isWinner","isLoser","isOpponentMoveRevealed","opponentState","isMoveSent","isGameFinished","_this$currentGameId5","_this$currentGameId6","getOpponentAccount","_currentGame$gameId","Object","values","sort","a","b","gameId","currentGame","find","game","previousGame","previousGameWager","_this$previousGame$be","_this$previousGame","_this$games$this$curr","_this$games$this$curr2","previousGamePoints","_this$previousGame2","_this$previousGame$po","_this$previousGame3","previousGameOpponent","_this$previousGame4","_this$previousGame4$p","_this$previousGame5","_this$previousGame5$p","_this$getActiveAccoun","_this$games$this$curr3","_this$games$this$curr4","_this$getActiveAccoun2","_this$games$this$curr5","_this$games$this$curr6","_this$opponentAddress","previousGameOpponentPoints","_this$previousGame$po2","_this$previousGame6","_this$previousGameOpp","wonLastGame","yourMove","_this$games$this$curr7","_this$games$this$curr8","_this$games$this$curr9","_this$games$this$curr10","_this$getActiveAccoun3","_this$opponentAddress2","_this$games$currentGa","_this$games$currentGa2","_this$games$currentGa3","_this$opponentAddress3","_this$games$round","_this$games","_this$currentGameId7","_this$games$currentGa4","_this$games$currentGa5","_this$games$currentGa6","opponentStateToString","isMoveSending","shouldReveal","shouldSetAffiliateCode","affiliateCode","filter","fetchPastGames","subscribeToEvents","RampInstantSDK","lastSentMove","lastRandomString","lastBetAmount","indexOf","parseFloat","getAccount","checkAffililiateCode","checkJoiningPassword","watch","handler","oldValue","store","dispatch","deep","immediate","revealMove","account","accounts","add","Contract","sendMove","buttonClicked","sliderValueChanged","localStoragePlayWithFriend","fetch","headers","body","then","res","json","setClientSecret","client_secret","blockNumber","getBlockNumber","setContract","createGame","setLastGameId","parseInt","isNewestGameId","getGame","getGameCurrentRound","length","convertTimestampToTime","timestamp","date","hours","getHours","minutes","getMinutes","ampm","strTime","substr","totalGasCost","transferableAmount","transaction","signedTransaction","signTransaction","sendSignedTransaction","rawTransaction","on","err","userAddress","returnValues","playerAddress","block","getBlock","handleWaitingEvent","first","matchedAlready","handlePlayersMatchedEvent","handleMoveSentEvent","handleRevealedEvent","handleNewRoundEvent","pointsA","pointsB","handleOutcomeEvent","isSubscription","_this$games$gameId","_this$games$gameId$pl","_this$activeAccount2","_this$games$gameId2","_this$games$gameId2$p","emptyBurnerWallet","handlePlayerCancelledEvent","contract","getReadContract","eventNames","eventHandlers","PlayerRegistered","handleRegisterEvent","PlayerWaiting","PlayersMatched","MoveCommitted","MoveRevealed","NewRound","GameOutcome","PlayerCancelled","eventName","events","eventId","logIndex","has","call","setTimeout","password","passwordHash","sha256","getPassword","getPasswordHash","playerGame","copyAffiliateLink","url","URL","location","href","searchParams","set","navigator","clipboard","writeText","alert","affiliateAddress","result","registerAsConsumer","createPasswordGame","_this$currentGameId8","_this$currentGameId9","_this$currentGameId10","betInWei","totalValue","registerWithBurner","getTransactionCount","register","_this$currentGameId11","_this$currentGameId12","_this$currentGameId13","_this$currentGameId14","_this$currentGameId15","_this$currentGameId16","setPassword","createPasswordMatchWithBurner","createPasswordMatch","_this$currentGameId17","_this$currentGameId18","_this$currentGameId19","betAmount","_this$currentGameId20","_this$currentGameId21","_this$currentGameId22","joinPasswordMatchWithBurner","joinPasswordMatch","_this$currentGameId23","_this$currentGameId24","_this$currentGameId25","prevState","_this$currentGameId26","_this$currentGameId27","_this$currentGameId28","encryptedMove","nonce","_this$currentGameId29","_this$currentGameId30","_this$currentGameId31","cancel","leave","clearMove","reveal","getOutcome","startBlock","endBlock","blockLimit","getContract","fromBlock","toBlock","min","getPastEvents","push","map","e","addToHandledEvents","urlParams","URLSearchParams","search","get","getAffiliateOfConsumer","isJoiningGame","history","replaceState","document","title","fetchPlayerRegisteredEvents","fetchPlayerWaitingEvents","fetchPlayersMatchedEvents","fetchPlayersMoveCommittedEvents","fetchMoveRevealedEvents","fetchNewRoundEvents","fetchGameOutcomeEvents","fetchPlayerCancelledEvents","processEvents","handsTokenBalance","handsStakedBalance","totalHandsStakedBalance","claimableEthForStaking","protocolFeeRevenue","protocolAffiliateRevenue","onboardedAddresses","claimableEthForAffiliate","affiliateLink","claim","claimAffiliateRewards","stakingContract","totalStakedPerBlock","mounted","init","setAccount","setContracts","setHandsTokenBalance","setHandsStakedBalance","setTotalHandsStakedAmount","setClaimableEthForStaking","setClaimableEthForAffiliate","setProtocolFeeRevenue","balanceOf","setInterval","stakedAmount","viewTotalStaked","viewClaimableRewards","getConsumersOfAffiliate","message","reason","stack","claimRewards","CHAIN_ID_MAINNET","CHAIN_ID_TESTNET","CHAIN_ID_LOCALHOST","CHAIN_ID_LOCALHOST_HARDHAT","CHAIN_ID_ARBITRUM_GOERLI","RPC_URLS","CURRENT_CHAIN_ID","msg","Game","Staking","mapState","setup","staking","ref","clientId","Web3Auth","chainConfig","chainNamespace","CHAIN_NAMESPACES","rpcTarget","displayName","uiConfig","defaultLanguage","web3AuthNetwork","torusPlugin","TorusWalletConnectorPlugin","torusWalletOpts","walletInitOptions","whiteLabel","theme","isDark","colors","primary","logoDark","logoLight","useWalletConnect","enableLogging","walletConnectV1Adapter","WalletConnectV1Adapter","adapterSettings","configureAdapter","metamaskAdapter","MetamaskAdapter","sessionTime","setAdapterSettings","torusWalletAdapter","TorusWalletAdapter","onMounted","initModal","userInfo","getUserInfo","addPlugin","connectedAdapterName","uiConsole","fetchBalance","balanceEth","pollBalance","login","transak","Transak","walletAddress","userData","firstName","email","network","exchangeScreenTitle","authenticateUser","idToken","user","logout","addChain","newChain","tickerName","ticker","decimals","blockExplorer","switchChain","signMessage","getPrivateKey","el","querySelector","innerHTML","src","_imports_0","alt","_component_Game","_component_Staking","_this$earnings","earnings","_this$earnings$toStri","_this$earnings2","_this$earnings2$toStr","_component_profile_game_list","_$props$address","_item$playerA","keys","ProfileGameList","$route","params","id","truncatedAddress","playerPoints","won","_this$handsTokenBalan","_this$handsTokenBalan2","_this$handsTokenBalan3","_this$handsTokenBalan4","stakerAmount","showStakeModal","showUnstakeModal","_component_list_staking","recivedFundsList","_component_modal_stake","isStake","stakeFunction","placeholder","Function","isStaking","isUnstaking","yourStaked","totalStaked","ModalStake","ListStaking","yourStakeAtBlock","totalStakeAtBlock","stakeEvents","unstakeEvents","recievedFundsEvents","newProvider","oldProvider","fetchPastEvents","handleStakingEvent","staker","handleUnstakingEvent","_Object$keys","reduce","yourStake","Staked","Unstaked","ReceivedFundsForStaking","handleRecievedFundsForStaking","pollingInterval","lastBlockChecked","currentBlock","forEach","fetchStakeEvents","fetchUnstakeEvents","fetchRecievedFundsEvents","_this$claimableEthFor","_this$claimableEthFor2","_this$claimableEthFor3","_this$claimableEthFor4","_component_list_affiliate","onboardedConsumerList","totalRevenue","revenueTimestamps","revenueTimestamp","ListAffiliate","yourConsumers","timeConsumerJoined","totalRewardsFromConsumer","rewardsArrayFromConsumer","consumerRegisteredEvents","rewardRecievedEvents","consumer","affiliate","ConsumerRegistered","handleConsumerRegisteredEvent","RewardRecieved","handleRewardRecievedEvent","fetchConsumerRegisteredEvents","fetchRewardRecievedEvents","routes","path","component","Home","Profile","Affiliate","router","createRouter","createWebHistory","process","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","f","chunkId","Promise","all","promises","u","miniCssF","g","globalThis","obj","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","installedChunks","installedChunkData","promise","resolve","reject","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}