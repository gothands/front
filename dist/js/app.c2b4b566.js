(()=>{var e={91970:(e,t,n)=>{"use strict";n(73964),n(36409);var a=n(49242),s=n(73396),i=n(87139);const r=(0,s._)("div",{class:"title hide-for-mobile"}," Handsy.io ",-1),o={class:"show-for-mobile"},l={style:{display:"flex","align-items":"center"}},d=(0,s._)("div",{class:"title",style:{}}," Handsy.io ",-1),u={class:"nav-right"},p={style:{display:"flex","align-items":"center","justify-content":"center",width:"100%"}},c={key:0,class:"joining-password"};function y(e,t,n,a,y,m){const h=(0,s.up)("modal-enable-notifications"),g=(0,s.up)("router-link"),v=(0,s.up)("profile-icon"),b=(0,s.up)("router-view");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(h),(0,s._)("nav",null,[r,(0,s._)("div",o,[(0,s._)("div",l,[d,e.isInGame?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"button-light",style:{"margin-top":"-10px"},onClick:t[0]||(t[0]=(...e)=>m.leaveGame&&m.leaveGame(...e))}," Leave ")):(0,s.kq)("",!0)])]),(0,s._)("div",u,[!e.isInGame&&e.loggedin?((0,s.wg)(),(0,s.j4)(g,{key:0,to:"/rankings",style:{display:"flex","align-items":"center",gap:"10px"}},{default:(0,s.w5)((()=>[(0,s.Uk)(" Ranking ")])),_:1})):(0,s.kq)("",!0),!e.isInGame&&e.loggedin?((0,s.wg)(),(0,s.j4)(g,{key:1,to:"/","aria-disabled":""},{default:(0,s.w5)((()=>[(0,s.Uk)("ðŸ”’ Staking")])),_:1})):(0,s.kq)("",!0),e.isInGame?((0,s.wg)(),(0,s.iD)("button",{key:2,class:"button-light hide-for-mobile-real",onClick:t[1]||(t[1]=(...e)=>m.leaveGame&&m.leaveGame(...e))},(0,i.zw)(e.leaveText),1)):(0,s.kq)("",!0),e.loggedin?((0,s.wg)(),(0,s.j4)(v,{key:3,class:"profile",address:e.activeAccount,isMedium:!0},null,8,["address"])):(0,s.kq)("",!0)])]),(0,s._)("div",p,[e.joiningPassword?((0,s.wg)(),(0,s.iD)("p",c," Joining match: "+(0,i.zw)(e.joiningPassword.toUpperCase())+" ... ",1)):(0,s.kq)("",!0)]),(0,s.Wm)(b)],64)}n(98858),n(61318),n(33228),n(64043),n(48324);const m={class:"content"},h={key:0,style:{display:"flex","align-items":"center"}},g=(0,s._)("p",null,"Syncing events",-1),v=(0,s._)("div",{class:"small-loading"},null,-1),b=[g,v],f={key:1},w={style:{margin:"0","margin-bottom":"6px"}},T={style:{margin:"0","margin-bottom":"22px"}},k={class:"decimals"},C=(0,s._)("span",{class:"currency-symbol decimals",style:{margin:"0","margin-left":"10px"}},"ETH",-1),A={class:"address-container"},P={key:2,style:{width:"100%"}},S={class:"game-view"},E={key:0,class:"game-move-controls"},M={class:"hide-for-mobile-real",style:{display:"flex",gap:"20px"}},I={class:"address-container hide-for-mobile-real"},_={class:"profile-mini"},L={class:"address"},B={class:"player-balance"},N={key:2,class:"hide-for-mobile"},x={style:{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"}},F={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},R={class:"address-container",style:{display:"flex","align-items":"center"}},W={class:"address",style:{"font-size":"18px"}},O={class:"player-balance-small"},G={key:1,class:"game-move-controls"},H={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"15px","justify-content":"center"}},D={key:0,class:"small-loading"},z={key:1,class:"checkmark"},$={key:2,style:{opacity:"0.5"}},U={style:{display:"flex","align-items":"center",gap:"1px"}},J={style:{opacity:"0.5","font-weight":"bolder"}},j=(0,s._)("div",{class:"point"},null,-1),q={class:"hide-for-mobile-real",style:{display:"flex",gap:"20px"}},Y={class:"address-container hide-for-mobile-real"},Z={class:"profile-mini"},V={class:"address"},K={class:"player-balance"},Q={key:2,class:"hide-for-mobile"},X={style:{display:"flex","justify-content":"center",gap:"10px"}},ee=(0,s._)("p",null,"Rock",-1),te=(0,s._)("p",null,"Paper",-1),ne=(0,s._)("p",null,"Scissors",-1),ae={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},se={class:"address-container",style:{display:"flex","align-items":"center"}},ie={class:"address",style:{"font-size":"18px"}},re={class:"player-balance-small"},oe={class:"middle-game-view"},le=(0,s._)("p",{class:"hide-for-mobile"},"Your bet is",-1),de={class:"hide-for-mobile",style:{margin:"0","margin-bottom":"22px"}},ue={class:"decimals"},pe=(0,s._)("span",{class:"currency-symbol decimals",style:{margin:"0","margin-left":"10px"}},"ETH",-1),ce={class:"hide-for-mobile",style:{opacity:"0.5"}},ye={class:"show-for-mobile",style:{opacity:"0.5","font-size":"small"}},me={style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},he={class:"show-for-mobile",style:{margin:"0","font-size":"25px","letter-spacing":"-1px","font-weight":"800"}},ge=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),ve={class:"game-move-controls opponent-view"},be={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},fe={class:"address-container",style:{display:"flex","align-items":"center"}},we={class:"address",style:{"font-size":"18px"}},Te={class:"player-balance-small"},ke={class:"game-move-controls"},Ce={class:"hide-for-mobile-real",style:{display:"flex",gap:"20px"}},Ae={class:"address-container hide-for-mobile-real"},Pe={class:"profile-mini"},Se={class:"address"},Ee={class:"player-balance hide-for-mobile"},Me={key:3,class:"hide-for-mobile"},Ie={key:4,class:"loading hide-for-mobile"},_e={key:5,class:"checkmark hide-for-mobile"},Le={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"15px","justify-content":"center"}},Be={key:0,class:"small-loading"},Ne={key:1,class:"small-checkmark"},xe={key:2,style:{opacity:"0.5"}},Fe={style:{display:"flex","align-items":"center",gap:"1px"}},Re={style:{opacity:"0.5","font-weight":"bolder"}},We=(0,s._)("div",{class:"point"},null,-1),Oe={key:3,class:"content"},Ge={class:"button-holder"},He=(0,s._)("div",{class:"plus-symbol"},null,-1),De=(0,s._)("div",null,"Add Funds",-1),ze=[He,De],$e=["value"],Ue=["value"],Je=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),je=(0,s._)("span",{style:{color:"#E19885","font-weight":"bold","text-decoration":"underline",cursor:"pointer"}},"Switch",-1),qe={key:1,style:{display:"flex","flex-direction":"column","align-items":"center","margin-top":"-70px"}},Ye=(0,s._)("p",null,"Your wager is",-1),Ze={style:{margin:"0"}},Ve=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),Ke=(0,s._)("p",{style:{opacity:"0.5"}},"Waiting for opponent ...",-1),Qe=(0,s._)("div",{class:"searching"},null,-1);function Xe(e,t,n,r,o,l){var d,u,p,c,y,g,v;const He=(0,s.up)("Modal"),De=(0,s.up)("ModalAddFunds"),Xe=(0,s.up)("profile-item"),et=(0,s.up)("profile-item-burner"),tt=(0,s.up)("GameMove"),nt=(0,s.up)("profile-icon"),at=(0,s.up)("game-list");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(He,{show:o.showModal,"onUpdate:show":t[0]||(t[0]=e=>o.showModal=e),winnerPoints:o.winnerPoints,"onUpdate:winnerPoints":t[1]||(t[1]=e=>o.winnerPoints=e),loserPoints:o.loserPoints,"onUpdate:loserPoints":t[2]||(t[2]=e=>o.loserPoints=e),win:o.winModal,"onUpdate:win":t[3]||(t[3]=e=>o.winModal=e),bet:o.selectedBet,"onUpdate:bet":t[4]||(t[4]=e=>o.selectedBet=e),leaver:o.leaverModal,"onUpdate:leaver":t[5]||(t[5]=e=>o.leaverModal=e),timeout:o.timeoutModal,"onUpdate:timeout":t[6]||(t[6]=e=>o.timeoutModal=e),player:this.activeAccount,"onUpdate:player":t[7]||(t[7]=e=>this.activeAccount=e)},{default:(0,s.w5)((()=>[(0,s.Uk)(" Hello world ")])),_:1},8,["show","winnerPoints","loserPoints","win","bet","leaver","timeout","player"]),(0,s.Wm)(De,{show:o.showAddFundsModal,"onUpdate:show":t[8]||(t[8]=e=>o.showAddFundsModal=e),minimumFundsToAdd:o.minimumAmount,callback:o.onAddFunds},null,8,["show","minimumFundsToAdd","callback"]),(0,s._)("div",m,[l.fetchingEvents?((0,s.wg)(),(0,s.iD)("div",h,b)):(0,s.kq)("",!0),l.isInGame||l.isWaiting?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",f,[(0,s._)("p",w,[(0,s.Uk)("Your balance Â  "),(0,s._)("span",{style:{cursor:"pointer"},onClick:t[9]||(t[9]=e=>this.$store.dispatch("clearAndReload"))},"â†»")]),(0,s._)("h1",T,[(0,s.Uk)((0,i.zw)(null===(d=this.balance)||void 0===d?void 0:d.toString().split(".")[0])+" ",1),(0,s._)("span",k," ."+(0,i.zw)(null!==(u=null===(p=this.balance)||void 0===p||null===(p=p.toString().split(".")[1])||void 0===p?void 0:p.substring(0,4))&&void 0!==u?u:"00"),1),C]),(0,s._)("div",A,[(0,s.Wm)(Xe,{address:this.activeAccount,alwaysShow:!0},null,8,["address"]),(0,s.Uk)(" Â  "),l.isBurner?((0,s.wg)(),(0,s.j4)(et,{key:0,address:this.burnerAddress,balance:l.burnerBalance},null,8,["address","balance"])):(0,s.kq)("",!0)])])),l.isInGame?((0,s.wg)(),(0,s.iD)("div",P,[(0,s._)("div",S,[l.shouldMove?((0,s.wg)(),(0,s.iD)("div",E,[(0,s._)("div",M,[(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=1})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=2})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=3})},null,2)]),l.bothRevealed?((0,s.wg)(),(0,s.j4)(tt,{key:0,move:o.selectedMove},null,8,["move"])):((0,s.wg)(),(0,s.j4)(tt,{key:1,move:4})),(0,s._)("div",I,[(0,s._)("div",_,[(0,s.Wm)(nt,{address:l.yourAddress,isMini:!0},null,8,["address"])]),(0,s._)("p",L,(0,i.zw)(l.truncateAddress(l.yourAddress)),1)]),(0,s._)("div",B,(0,i.zw)(l.balance)+" ETH ",1),l.isMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",N,(0,i.zw)(l.yourTimeLeft),1)),(0,s._)("div",x,[(0,s.Wm)(tt,{class:"hide-for-mobile",isNormal:!0,move:o.selectedMove},null,8,["move"]),(0,s._)("p",null,(0,i.zw)(1==o.selectedMove?"Rock":2==o.selectedMove?"Paper":"Scissors"),1)]),(0,s._)("div",F,[(0,s._)("div",R,[(0,s.Wm)(nt,{address:l.yourAddress,isSuperMini:!0},null,8,["address"]),(0,s._)("p",W,(0,i.zw)(l.smallTruncate(l.yourAddress)),1)]),(0,s._)("div",O,(0,i.zw)(l.balance)+" ETH ",1)])])):((0,s.wg)(),(0,s.iD)("div",G,[(0,s._)("div",H,[l.isMoveSent?((0,s.wg)(),(0,s.iD)("div",z)):((0,s.wg)(),(0,s.iD)("div",D)),l.isMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("p",$,(0,i.zw)(l.yourTimeLeft),1)),(0,s._)("div",U,[(0,s._)("p",J,(0,i.zw)(l.yourCurrentPoints),1),j])]),(0,s._)("div",q,[(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=1})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=2})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=3})},null,2)]),l.bothRevealed?((0,s.wg)(),(0,s.j4)(tt,{key:0,class:"hide-for-mobile",move:o.selectedMove},null,8,["move"])):((0,s.wg)(),(0,s.j4)(tt,{key:1,class:"hide-for-mobile",move:4})),(0,s._)("div",Y,[(0,s._)("div",Z,[(0,s.Wm)(nt,{address:l.yourAddress,isMini:!0},null,8,["address"])]),(0,s._)("p",V,(0,i.zw)(l.truncateAddress(l.yourAddress)),1)]),(0,s._)("div",K,(0,i.zw)(l.balance)+" ETH ",1),l.isMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",Q,(0,i.zw)(l.yourTimeLeft),1)),(0,s._)("div",X,[(0,s._)("div",{style:(0,i.j5)([{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"},{"border-color":l.isRock?"yellow":"inherit"}]),onClick:t[10]||(t[10]=(...e)=>l.onRock&&l.onRock(...e))},[(0,s.Wm)(tt,{isNormal:!0,move:1}),ee],4),(0,s._)("div",{style:(0,i.j5)([{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"},{"border-color":l.isPaper?"yellow":"inherit"}]),onClick:t[11]||(t[11]=(...e)=>l.onPaper&&l.onPaper(...e))},[(0,s.Wm)(tt,{isNormal:!0,move:2}),te],4),(0,s._)("div",{style:(0,i.j5)([{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"},{"border-color":l.isScissors?"yellow":"inherit"}]),onClick:t[12]||(t[12]=(...e)=>l.onScissors&&l.onScissors(...e))},[(0,s.Wm)(tt,{isNormal:!0,move:3}),ne],4)]),(0,s._)("div",ae,[(0,s._)("div",se,[(0,s.Wm)(nt,{address:l.yourAddress,isSuperMini:!0},null,8,["address"]),(0,s._)("p",ie,(0,i.zw)(l.smallTruncate(l.yourAddress)),1)]),(0,s._)("div",re,(0,i.zw)(l.balance)+" ETH ",1)])])),(0,s._)("div",oe,[le,(0,s._)("h1",de,[(0,s.Uk)((0,i.zw)(null===(c=this.selectedBet)||void 0===c?void 0:c.toString().split(".")[0])+" ",1),(0,s._)("span",ue," ."+(0,i.zw)(null!==(y=null===(g=this.selectedBet)||void 0===g||null===(g=g.toString().split(".")[1])||void 0===g?void 0:g.substring(0,4))&&void 0!==y?y:"00"),1),pe]),(0,s._)("p",ce,(0,i.zw)(l.roundStateString),1),(0,s._)("p",ye,(0,i.zw)(l.roundStateString),1),(0,s._)("div",me,[(0,s._)("h4",he,[(0,s.Uk)((0,i.zw)(this.selectedBet)+" ",1),ge])])]),(0,s._)("div",ve,[(0,s._)("div",be,[(0,s._)("div",fe,[(0,s.Wm)(nt,{address:l.opponentAddress,isSuperMini:!0},null,8,["address"]),(0,s._)("p",we,(0,i.zw)(l.smallTruncate(l.opponentAddress)),1)]),(0,s._)("div",Te,(0,i.zw)(l.opponentBalance)+" ETH ",1)]),(0,s._)("div",ke,[(0,s._)("div",Ce,[(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.opponentCurrentPoints>=1})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.opponentCurrentPoints>=2})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.opponentCurrentPoints>=3})},null,2)]),l.bothRevealed?((0,s.wg)(),(0,s.j4)(tt,{key:0,class:"flip",move:l.opponentMove},null,8,["move"])):l.isOpponentMoveSent?((0,s.wg)(),(0,s.j4)(tt,{key:1,class:"flip",move:4})):((0,s.wg)(),(0,s.j4)(tt,{key:2,class:"flip",move:4})),(0,s._)("div",Ae,[(0,s._)("div",Pe,[(0,s.Wm)(nt,{address:l.opponentAddress,isMini:!0},null,8,["address"])]),(0,s._)("p",Se,(0,i.zw)(l.truncateAddress(l.opponentAddress)),1)]),(0,s._)("div",Ee,(0,i.zw)(l.opponentBalance)+" ETH ",1),l.isOpponentMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",Me,(0,i.zw)(l.opponentTimeLeft),1)),l.isOpponentMoveSent?((0,s.wg)(),(0,s.iD)("div",_e)):((0,s.wg)(),(0,s.iD)("div",Ie))]),(0,s._)("div",Le,[l.isOpponentMoveSent?((0,s.wg)(),(0,s.iD)("div",Ne)):((0,s.wg)(),(0,s.iD)("div",Be)),l.isOpponentMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("p",xe,(0,i.zw)(l.opponentTimeLeft),1)),(0,s._)("div",Fe,[(0,s._)("p",Re,(0,i.zw)(l.opponentCurrentPoints),1),We])])])])])):((0,s.wg)(),(0,s.iD)("div",Oe,[(0,s._)("div",Ge,[l.isRegistering||l.isWaiting?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("button",{key:0,id:"addFundsButton",class:"button-light",onClick:t[13]||(t[13]=(...e)=>l.toggleAddFundsModal&&l.toggleAddFundsModal(...e))},ze)),(0,s._)("div",null,[l.isWaiting?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("button",{key:0,id:"playButton",class:"button-dark",onClick:t[16]||(t[16]=(...e)=>l.registerGame&&l.registerGame(...e))},[(0,s._)("div",null,(0,i.zw)(l.isRegistering?"Creating...":l.isJoiningPasswordMatch?`Join Match ${null===(v=l.joiningPassword)||void 0===v?void 0:v.toUpperCase()}`:o.playWithFriend?"Create Match":"Play random")+" Â  ",1),l.isJoiningPasswordMatch?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("select",{key:0,class:"selector",style:{"margin-right":"-25px"},value:this.selectedBet,onInput:t[14]||(t[14]=e=>o.selectedBet=e.target.value),onClick:t[15]||(t[15]=(0,a.iM)((()=>{}),["stop"]))},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.wagerSteps,(e=>((0,s.wg)(),(0,s.iD)("option",{key:e,value:e},[(0,s.Uk)((0,i.zw)(e)+" ",1),Je,(0,s.Uk)(" Â  ")],8,Ue)))),128))],40,$e))])),l.isRegistering||l.isWaiting||l.isJoiningPasswordMatch?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("p",{key:1,onClick:t[17]||(t[17]=(...e)=>l.togglePlayWithFriend&&l.togglePlayWithFriend(...e)),class:"toggle-text",style:{"margin-top":"30px",cursor:"pointer"}},[(0,s.Uk)((0,i.zw)(o.playWithFriend?"Play with random instead?":"Play with friend instead?")+" ",1),je]))]),l.isWaiting?((0,s.wg)(),(0,s.iD)("div",qe,[Ye,(0,s._)("h1",Ze,[(0,s.Uk)((0,i.zw)(this.selectedBet)+" ",1),Ve]),Ke,Qe,(0,s._)("button",{class:"button-light",onClick:t[18]||(t[18]=(...e)=>l.cancelGame&&l.cancelGame(...e))}," Cancel ")])):(0,s.kq)("",!0)]),l.isWaiting&&o.playWithFriend?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"button-dark",onClick:t[19]||(t[19]=(...e)=>l.copyPasswordGameLink&&l.copyPasswordGameLink(...e))}," Copy game link ")):(0,s.kq)("",!0)]))]),l.isInGame?(0,s.kq)("",!0):((0,s.wg)(),(0,s.j4)(at,{key:0,activeData:l.activeGames,completedData:l.completedGames,pendingData:l.pendingGames},null,8,["activeData","completedData","pendingData"]))],64)}n(65137),n(21057),n(70560);var et=n(19878),tt=n(60741);const nt=JSON.parse('{"dependencyContracts":{"wETH":"0x3ccA24e1A0e49654bc3482ab70199b7400eb7A3a","vault":"0xfC3c03385dA8D5Adfb8BDF5f5fe156fb5B3a6Ee2","forwarderRegistry":"0x1055780Bd25e2F698E7c9a95FBaf4cb565A23A14","master":"0x9035E63C5Ac74dE843F176BE6B9869cA2385C61d","feeRegistry":"0xF3a4d6E6581e12Dc5b0eCd6EA3d483fF09c3cAE0","feeRecipient":"0x8a7E4b12Fb1914d91A84fe66e7B0e899DE291167","feeManager":"0x4768d649Da9927a8b3842108117eC0ca7Bc6953f","classicFactory":"0x22F4D93be0E8C0C081e74c0d5e697B64eEA007FF","stableFactory":"0xe4C7fBB0a626ed208021ccabA6Be1566905E2dFc","router":"0x97b985951FD3e0C1d996421CC783d46c12d00082"},"dependencyAbis":{"wETH":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"vault":[{"inputs":[{"internalType":"address","name":"_wETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"TransferFromFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFlashLoanFeePercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"ERC3156_CALLBACK_SUCCESS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"depositETH","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"flashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"flashLoanFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoanMultiple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_flashLoanFeeRecipient","type":"address"}],"name":"setFlashLoanFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferAndDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"mode","type":"uint8"}],"name":"withdrawAlternative","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"master":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"},{"internalType":"address","name":"_forwarderRegistry","type":"address"},{"internalType":"address","name":"_feeManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NotWhitelistedFactory","type":"error"},{"inputs":[],"name":"PoolAlreadyExists","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"factory","type":"address"},{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"uint16","name":"poolType","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"RegisterPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"SetFactoryWhitelisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newFeeManager","type":"address"}],"name":"UpdateFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newForwarderRegistry","type":"address"}],"name":"UpdateForwarderRegistry","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"forwarderRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeRecipient","outputs":[{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getProtocolFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFactoryWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint16","name":"poolType","type":"uint16"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"registerPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"setFactoryWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newFeeManager","type":"address"}],"name":"setFeeManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newForwarderRegistry","type":"address"}],"name":"setForwarderRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"classicFactory":[{"inputs":[{"internalType":"address","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidTokens","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeployData","outputs":[{"internalType":"bytes","name":"deployData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"swapFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"stableFactory":[{"inputs":[{"internalType":"address","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidTokens","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeployData","outputs":[{"internalType":"bytes","name":"deployData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"swapFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"router":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"},{"internalType":"address","name":"_wETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApproveFailed","type":"error"},{"inputs":[],"name":"Expired","type":"error"},{"inputs":[],"name":"NotEnoughLiquidityMinted","type":"error"},{"inputs":[],"name":"TooLittleReceived","type":"error"},{"inputs":[],"name":"TransferFromFailed","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"addLiquidity2","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct IRouter.SplitPermitParams[]","name":"permits","type":"tuple[]"}],"name":"addLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct IRouter.SplitPermitParams[]","name":"permits","type":"tuple[]"}],"name":"addLiquidityWithPermit2","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256[]","name":"minAmounts","type":"uint256[]"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"burnLiquidity","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"amounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"burnLiquiditySingle","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IRouter.ArrayPermitParams","name":"permit","type":"tuple"}],"name":"burnLiquiditySingleWithPermit","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256[]","name":"minAmounts","type":"uint256[]"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IRouter.ArrayPermitParams","name":"permit","type":"tuple"}],"name":"burnLiquidityWithPermit","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"amounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"enteredPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"enteredPoolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"isPoolEntered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"selfPermit2","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"selfPermit2IfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"stakingPool","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalf","type":"address"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"internalType":"struct IRouter.SwapStep[]","name":"steps","type":"tuple[]"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"internalType":"struct IRouter.SwapPath[]","name":"paths","type":"tuple[]"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"internalType":"struct IRouter.SwapStep[]","name":"steps","type":"tuple[]"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"internalType":"struct IRouter.SwapPath[]","name":"paths","type":"tuple[]"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct IRouter.SplitPermitParams","name":"permit","type":"tuple"}],"name":"swapWithPermit","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"feeManager":[{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint16","name":"poolType","type":"uint16"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetDefaultProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint16","name":"poolType","type":"uint16"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetDefaultSwapFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousFeeRecipient","type":"address"},{"indexed":true,"internalType":"address","name":"newFeeRecipient","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetPoolProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetTokenSwapFee","type":"event"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"defaultProtocolFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"defaultSwapFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getProtocolFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"poolProtocolFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"poolType","type":"uint16"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setDefaultProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"poolType","type":"uint16"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setDefaultSwapFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setPoolProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setTokenSwapFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"tokenSwapFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"feeRecipient":[{"inputs":[{"internalType":"address","name":"_feeRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"InvalidFeeSender","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"distributor","type":"address"}],"name":"AddFeeDistributor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint16","name":"feeType","type":"uint16"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeRate","type":"uint256"}],"name":"NotifyFees","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"distributor","type":"address"}],"name":"RemoveFeeDistributor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"epochDuration","type":"uint256"}],"name":"SetEpochDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"feeRegistry","type":"address"}],"name":"SetFeeRegistry","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"distributor","type":"address"}],"name":"addFeeDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"distributeFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"epochDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeDistributors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeDistributorsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"feeTokenData","outputs":[{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"epoch","type":"uint256"}],"name":"feeTokensLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"fees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ts","type":"uint256"}],"name":"getEpochStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFeeDistributor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"feeType","type":"uint16"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"feeRate","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"notifyFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"distributor","type":"address"},{"internalType":"bool","name":"updateArray","type":"bool"}],"name":"removeFeeDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_epochDuration","type":"uint256"}],"name":"setEpochDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRegistry","type":"address"}],"name":"setFeeRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"}],"feeRegistry":[{"inputs":[{"internalType":"address","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bool","name":"isWhitelisted","type":"bool"}],"name":"SetSenderWhitelisted","type":"event"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"isFeeSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isSenderWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"isWhitelisted","type":"bool"}],"name":"setSenderWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"forwardRegistry":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"forwarder","type":"address"}],"name":"AddForwarder","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"forwarder","type":"address"}],"name":"RemoveForwarder","type":"event"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"addForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"removeForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"classicPool":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Expired","type":"error"},{"inputs":[],"name":"InsufficientLiquidityMinted","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"Overflow","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reserve0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reserve1","type":"uint256"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"burn","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"_amounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"burnSingle","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"_tokenAmount","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFee","outputs":[{"internalType":"uint24","name":"_protocolFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256","name":"_reserve0","type":"uint256"},{"internalType":"uint256","name":"_reserve1","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"_swapFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"invariantLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"permit2","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolType","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"swap","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"_tokenAmount","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]},"deployedContracts":{"HandsToken":"0x3f225a02558884EfdC24607A4Ab332053058fe06","Bank":"0xbf8E0dA873Bf3A51F36B716e3C6c53E157e50c7C","Staking":"0xe01129c36511948e43a28352F3373BdC715B1102","Hands":"0x6C0DE33d54d6C1493Ff4c1Ae8B4091bF7CE9159B","Affiliate":"0xe153270FC581EFDded818452B4ad9012A743Cb07","Session":"0xDfF35c2BB488f64c57710F3a98dFF5FFFaDE9D75"},"deployedAbis":{"HandsToken":[{"inputs":[{"internalType":"address","name":"_premintReceiver","type":"address"},{"internalType":"uint256","name":"_premintAmount","type":"uint256"},{"internalType":"uint256","name":"_cap","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"SUPPLY_CAP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"status","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"Bank":[{"inputs":[{"internalType":"address","name":"_stakingContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stakerAmount","type":"uint256"}],"name":"FundsReceived","type":"event"},{"inputs":[],"name":"receiveFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"Staking":[{"inputs":[{"internalType":"address","name":"_handsTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ReceivedFundsForStaking","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addReceivedFundsForStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bankContract","outputs":[{"internalType":"contract Bank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cumulativeRewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReceivedFundsForStaking","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_bankContractAddress","type":"address"}],"name":"setBankContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"stakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakers","outputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"lastCumulativeRewardRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReceivedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unclaimedRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"updateRewardsFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"viewClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewTotalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"Hands":[{"inputs":[{"internalType":"address","name":"_bankContractAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"enum Hands.Outcomes","name":"outcome","type":"uint8"}],"name":"GameOutcome","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"MoveCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"enum Hands.Moves","name":"move","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"MoveRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pointsA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pointsB","type":"uint256"}],"name":"NewRound","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"}],"name":"PlayerCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"}],"name":"PlayerLeft","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"name","type":"bytes32"}],"name":"PlayerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bet","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"first","type":"bool"}],"name":"PlayerWaiting","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerA","type":"address"},{"indexed":true,"internalType":"address","name":"playerB","type":"address"}],"name":"PlayersMatched","type":"event"},{"inputs":[],"name":"BET_MIN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_POINTS_PER_ROUND","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MOVE_TIMEOUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMEOUT_MARGIN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"bytes32","name":"encrMove","type":"bytes32"}],"name":"commit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"passwordHash","type":"bytes32"}],"name":"createPasswordMatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"burner","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"bytes32","name":"passwordHash","type":"bytes32"}],"name":"createPasswordMatchWithBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"fundBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getBurner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_burner","type":"address"}],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"password","type":"string"}],"name":"joinPasswordMatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"burner","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"string","name":"password","type":"string"}],"name":"joinPasswordMatchWithBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"leave","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"playerGame","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"register","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"burner","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"}],"name":"registerWithBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"string","name":"clearMove","type":"string"}],"name":"reveal","outputs":[{"internalType":"enum Hands.Moves","name":"","type":"uint8"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_burner","type":"address"}],"name":"setBurner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"waitingPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"Affiliate":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"consumer","type":"address"},{"indexed":true,"internalType":"address","name":"affiliate","type":"address"}],"name":"ConsumerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"affiliate","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"affiliate","type":"address"},{"indexed":true,"internalType":"address","name":"consumer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardRecieved","type":"event"},{"inputs":[],"name":"MAX_FEE_SHARE_PER_AFFILIATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"affiliates","outputs":[{"internalType":"uint256","name":"receivedFunds","type":"uint256"},{"internalType":"uint256","name":"lastClaimedBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bankContract","outputs":[{"internalType":"contract Bank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"address","name":"consumer","type":"address"},{"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"calculateAndAddAffiliateShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"consumer","type":"address"}],"name":"getAffiliateOfConsumer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"}],"name":"getConsumersOfAffiliate","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getReceivedFundsForAffiliateInBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"uint256","name":"startBlock","type":"uint256"},{"internalType":"uint256","name":"endBlock","type":"uint256"}],"name":"getReceivedFundsForAffiliateInPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"}],"name":"registerAsConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_bankContract","type":"address"}],"name":"setBankContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalReceived","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliateAddress","type":"address"}],"name":"viewClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"Session":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"OnSession","type":"event"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"}]}}');var at=n(94956),st=n(71023),it=n(15941);class rt{constructor(e){(0,at.Z)(this,"provider",void 0),this.provider=e}async getChainId(){try{const e=new st.ZPm(this.provider),t=await e.eth.getChainId();return t.toString()}catch(e){return e}}async getAccounts(){try{const e=new st.ZPm(this.provider),t=await e.eth.getAccounts();return t}catch(e){return e}}async getBalance(){try{const e=new st.ZPm(this.provider),t=(await e.eth.getAccounts())[0],n=e.utils.fromWei(await e.eth.getBalance(t),"ether");return n}catch(e){return it.log("error getting balance",e),"0"}}async getBalanceOf(e){try{it.log("getting balance of",e),it.log("getting balance of with provider",this.provider);const t=new st.ZPm(this.provider),n=t.utils.fromWei(await t.eth.getBalance(e),"ether");return n}catch(t){return it.log("error getting balance of",t),"0"}}async sendTransaction(){try{const e=new st.ZPm(this.provider),t=(await e.eth.getAccounts())[0],n=t,a=e.utils.toWei("0.001","ether"),s=await e.eth.sendTransaction({from:t,to:n,value:a,maxPriorityFeePerGas:"5000000",maxFeePerGas:"6000000"});return s}catch(e){return e}}async signMessage(){try{const e=new st.ZPm(this.provider),t=(await e.eth.getAccounts())[0],n="YOUR_MESSAGE",a=await e.eth.personal.sign(n,t,"test password!");return a}catch(e){return e}}async getPrivateKey(){try{const e=await this.provider.request({method:"eth_private_key"});return e}catch(e){return e}}}var ot=n(20065),lt=n(45622),dt=n(42405),ut=n(40744);const pt={None:0,Rock:1,Paper:2,Scissors:3,LoadingMark:4,CheckMark:5},ct={None:0,PlayerA:1,PlayerB:2,Draw:3,PlayerALeft:4,PlayerBLeft:5,PlayerATimeout:6,PlayerBTimeout:7,BothTimeout:8,Cancelled:9},yt={Initial:0,Registering:1,Waiting:2,Matched:3,Sending:4,Sent:5,Revealing:6,Revealed:7,Finished:8},mt="0x1",ht="0x118",gt="0x10e",vt="0x7A69",bt="0x66eed",ft="0xa4ba",wt={[mt]:"https://eth.llamarpc.com",[ht]:"https://testnet.era.zksync.dev",[gt]:"http://localhost:3050/",[vt]:"http://localhost:8545",[bt]:"https://arb-goerli.g.alchemy.com/v2/4nMlurweValICpl10ChbP5LIk39MSwf1",[ft]:"https://empty-proportionate-sunset.nova-mainnet.quiknode.pro/b34c277e5b6c584250278d2aad9b63452bb2188f/"},Tt=ft,kt="https://empty-proportionate-sunset.nova-mainnet.quiknode.pro/b34c277e5b6c584250278d2aad9b63452bb2188f/",Ct=31694068,At=.05,Pt=135;var St=n(70034),Et=n(15941);function Mt(e,t){const n=t-e;return n<60?n+" secs ago":n<3600?Math.floor(n/60)+" mins ago":n<86400?Math.floor(n/3600)+" hr ago":Math.floor(n/86400)+" days ago"}function It(e){var t=document.createElement("textarea");t.style.position="fixed",t.style.top=0,t.style.left=0,t.style.width="2em",t.style.height="2em",t.style.padding=0,t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent",t.value=e,document.body.appendChild(t),t.focus(),t.select();try{var n=document.execCommand("copy"),a=n?"successful":"unsuccessful";Et.log("Copying text command was "+a)}catch(s){Et.log("Oops, unable to copy")}document.body.removeChild(t)}const _t=(e,t)=>1e3*t+1e3*e,Lt=e=>e.slice(0,6)+"..."+e.slice(-4);var Bt=n(15941);const Nt=(0,lt.v)({chain:ut.Z,transport:(0,dt.d)(wt[Tt])}),xt=(0,ot.MT)({state(){let e={},t=localStorage.getItem("games");return t&&(e=JSON.parse(t)),{loggedin:!1,loading:!1,loginButtonStatus:"",connecting:!1,activeAccount:"",balance:"0",mainnetBalance:"0",balances:{},provider:null,mainnetProvider:null,web3auth:null,onboard:null,wallets:null,isMetamask:!1,web3ReadProvider:new st.ZPm(new st.ZPm.providers.HttpProvider(kt)),shouldAutoBridgeToNova:!0,sendingEthToNova:!1,completedSendingEthToNova:!1,bridgingEthToMainnetFromNova:!1,completedBridgingEthToMainnetFromNova:!1,withdrawingToAddress:!1,completedWithdrawingToAddress:!1,games:e,isInGame:!1,isJoiningPasswordMatch:!1,joiningPassword:null,joiningBetAmount:null,leaveGame:()=>{Bt.log("leaveGame not set")},leaveText:"Leave",addFundsMessage:"Adding Funds...",stakeContract:null,handsTokenContract:null,currentTime:Math.floor(Date.now()/1e3),triggerProcessEvents:!1,isFetchingEvents:!1,lastFetchedBlock:Ct,handledEventIds:new Set,playerRegisteredEvents:[],playerWaitingEvents:[],playersMatchedEvents:[],moveCommittedEvents:[],moveRevealedEvents:[],newRoundEvents:[],gameOutcomeEvents:[],playerCancelledEvents:[],playerLeftEvents:[],stakeEvents:[],unstakeEvents:[],recievedFundsEvents:[],isNotificationsEnabled:!1,profiles:{}}},getters:{balance:e=>t=>e.balances[t]||"0",getPoints:e=>t=>{var n;return(null===(n=e.profiles[t.toLowerCase()])||void 0===n?void 0:n.points)||0}},mutations:{setLoggedIn(e,t){e.loggedin=t},setLoading(e,t){e.loading=t},setLoginButtonStatus(e,t){e.loginButtonStatus=t},setConnecting(e,t){e.connecting=t},setActiveAccount(e,t){e.activeAccount=t},setBalance(e,t){e.balance=t},setMainnetBalance(e,t){e.mainnetBalance=t},setBalances(e,t){e.balances=t},setProvider(e,t){e.provider=t},setMainnetProvider(e,t){e.mainnetProvider=t},setWeb3Auth(e,t){e.web3auth=t},setIsMetamask(e,t){e.isMetamask=t},setOnboard(e,t){e.onboard=t},setWallets(e,t){e.wallets=t},setShouldAutoBridgeToNova(e,t){e.shouldAutoBridgeToNova=t},setSendingEthToNova(e,t){e.sendingEthToNova=t},setCompletedSendingEthToNova(e,t){e.completedSendingEthToNova=t},setBridgingEthToMainnetfromNova(e,t){e.bridgingEthToMainnetFromNova=t},setCompletedBridgingEthToMainnetfromNova(e,t){e.completedBridgingEthToMainnetFromNova=t},setWithdrawingToAddress(e,t){e.withdrawingToAddress=t},setCompletedWithdrawingToAddress(e,t){e.completedWithdrawingToAddress=t},setGames(e,t){e.games=t,localStorage.setItem("games",JSON.stringify(e.games))},setIsInGame(e,t){e.isInGame=t},setLeaveGame(e,t){e.leaveGame=t},setLeaveText(e,t){e.leaveText=t},setIsJoiningPasswordMatch(e,t){e.isJoiningPasswordMatch=t},setJoiningPassword(e,t){e.joiningPassword=t},setJoiningBetAmount(e,t){e.joiningBetAmount=t},setAddFundsMessage(e,t){e.addFundsMessage=t},setHandsTokenContract(e,t){e.handsTokenContract=t},setStakeContract(e,t){e.stakeContract=t},setCurrentTime(e,t){e.currentTime=t},triggerProcessEvents(e,t){e.triggerProcessEvents=t},setIsFetchingEvents(e,t){e.isFetchingEvents=t},setLastFetchBlock(e,t){e.lastFetchedBlock=t},setHandledEventIds(e,t){e.handledEventIds=t},setPlayerRegisteredEvents(e,t){e.playerRegisteredEvents=t},setPlayerWaitingEvents(e,t){e.playerWaitingEvents=t},setPlayersMatchedEvents(e,t){e.playersMatchedEvents=t},setMoveCommittedEvents(e,t){e.moveCommittedEvents=t},setMoveRevealedEvents(e,t){e.moveRevealedEvents=t},setNewRoundEvents(e,t){e.newRoundEvents=t},setGameOutcomeEvents(e,t){e.gameOutcomeEvents=t},setPlayerCancelledEvents(e,t){e.playerCancelledEvents=t},setPlayerLeftEvents(e,t){e.playerLeftEvents=t},setStakeEvents(e,t){e.stakeEvents=t},setUnstakeEvents(e,t){e.unstakeEvents=t},setRecievedFundsEvents(e,t){e.recievedFundsEvents=t},setIsNotificationsEnabled(e,t){e.isNotificationsEnabled=t},setProfiles(e,t){e.profiles=t},setProfile(e,t){let n={...e.profiles};n[t.address.toLowerCase()]=t,e.profiles=n},setProfileName(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].name=t.name,e.profiles=n},setProfileAvatar(e,t){let n={...e.profiles};n[t.address.toLowerCase()].avatar=t.avatar,e.profiles=n},setProfileEarnings(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].earnings=t.earnings,e.profiles=n},setProfileFeesGenerated(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].feesGenerated=t.feesGenerated,e.profiles=n},setProfilePoints(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].points=t.points,e.profiles=n},addProfileEarnings(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].earnings+=t.earnings,e.profiles=n},addProfilePoints(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].points+=t.points,e.profiles=n},addProfileFeesGenerated(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].feesGenerated+=t.feesGenerated,e.profiles=n},addGamesPlayed(e,t){let n={...e.profiles};n[t.address.toLowerCase()]||(n[t.address.toLowerCase()]={name:"",avatar:"",address:t.address,earnings:0,feesGenerated:0,points:0,gamesPlayed:0}),n[t.address.toLowerCase()].gamesPlayed++,e.profiles=n,Bt.log("profiles list",n)}},actions:{setLoggedIn({commit:e},t){e("setLoggedIn",t)},setLoading({commit:e},t){e("setLoading",t)},setLoginButtonStatus({commit:e},t){e("setLoginButtonStatus",t)},setConnecting({commit:e},t){e("setConnecting",t)},setActiveAccount({commit:e},t){e("setActiveAccount",t)},setBalance({commit:e},t){e("setBalance",t)},setProvider({commit:e},t){e("setProvider",t),Bt.log("setProvider",t)},setWeb3Auth({commit:e},t){e("setWeb3Auth",t)},setIsMetamask({commit:e},t){e("setIsMetamask",t)},async setBalanceOf({commit:e,state:t},n){const a=new rt(t.provider),s=await a.getBalanceOf(n);let i={...t.balances};i[n.toLowerCase()]=s,Bt.log("balances",s),e("setBalances",i)},async login({commit:e,state:t}){if(!t.onboard)return void Bt.error("Onboard not set");e("setLoading",!0);const n=await t.onboard.connectWallet();Bt.log("wallets",n),e("setWallets",n),n[0]?(await t.onboard.setChain({chainId:Tt}),e("setLoggedIn",!0),e("setProvider",n[0].provider),e("setIsMetamask",!0)):e("setLoggedIn",!1)},async loginWeb3Auth({commit:e,state:t}){Bt.log("loginWeb3Auth");const n=t.web3auth;if(!n)return void Bt.error("web3auth not set");const a=await n.connect();xt.dispatch("setLoading",!0),xt.dispatch("setProvider",a),n.provider&&(xt.dispatch("setProvider",n.provider),Bt.log("setProviderTest",window.ethereum),Bt.log("setProvider",n.provider),xt.dispatch("setLoggedIn",!0)),"metamask"===n.connectedAdapterName&&(xt.dispatch("setIsMetamask",!0),xt.dispatch("setProvider",window.ethereum))},setGames({commit:e},t){e("setGames",t)},setIsInGame({commit:e},t){e("setIsInGame",t)},setLeaveGame({commit:e},t){e("setLeaveGame",t)},setIsJoiningPasswordMatch({commit:e},t){e("setIsJoiningPasswordMatch",t)},setJoiningPassword({commit:e},t){e("setJoiningPassword",t)},setStakeContract({commit:e},t){e("setStakeContract",t)},setHandsTokenContract({commit:e},t){e("setHandsTokenContract",t)},async stake({commit:e,state:t},n){try{const e=new st.ZPm(t.provider),a=e.utils.toWei("0.1","gwei"),s=3e7,i=(await t.handsTokenContract.methods.approve(nt.deployedContracts.Staking,e.utils.toWei(n,"ether")).send({from:t.activeAccount,gasPrice:a,gasLimit:s}),await t.stakeContract.methods.stake(e.utils.toWei(n,"ether")).send({from:t.activeAccount,gasPrice:a,gasLimit:s}));return await e.eth.getTransactionReceipt(i.transactionHash),Bt.log("Staked",i),i}catch(a){return Bt.error("Error staking. Message:",a),a&&Bt.error("Error reason:",a),Bt.error("Error stack trace:",a),a}},async unstake({commit:e,state:t},n){try{const e=new st.ZPm(t.provider),a=e.utils.toWei("0.1","gwei"),s=3e7,i=await t.stakeContract.methods.unstake(e.utils.toWei(n,"ether")).send({from:t.activeAccount,gasPrice:a,gasLimit:s});return await e.eth.getTransactionReceipt(i.transactionHash),Bt.log("Unstaked",i),i}catch(a){return Bt.error("Error unstaking. Message:",a),a&&Bt.error("Error reason:",a),Bt.error("Error stack trace:",a),a}},async exportPrivateKey({commit:e,state:t}){const n=await t.provider.request({method:"eth_private_key"});return Bt.log("privateKey",n),It(n),alert("Private key copied to clipboard"),Bt.log("privateKey read from clipboard",await navigator.clipboard.readText()),n},async syncMainnetBalance({commit:e,state:t}){if(!t.mainnetProvider){const n=await t.provider.request({method:"eth_private_key"}),a=new St.EthereumPrivateKeyProvider({config:{chainConfig:{chainId:mt,rpcTarget:wt[mt],displayName:"Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ether"}}});await a.setupProvider(n),e("setMainnetProvider",a.provider)}const n=new st.ZPm(t.mainnetProvider),a=async()=>{try{const a=t.activeAccount,s=await n.eth.getBalance(a),i=n.utils.fromWei(s,"ether");Bt.log("Mainnet Balance:",i),e("setMainnetBalance",i),!t.isMetamask&&t.shouldAutoBridgeToNova&&parseFloat(i)}catch(a){Bt.error("Error fetching balance:",a)}};await a(),setInterval(a,1e3)},async sendMainnetEthToNova({commit:e,state:t}){},async sendNovaEthToMainnet({commit:e,state:t},n){},async withdrawNovaEth({commit:e,state:t},{amount:n,address:a}){},setTime({commit:e,state:t}){setInterval((()=>{e("setCurrentTime",Math.floor(Date.now()/1e3))}),1e3)},addEvent({commit:e,state:t},{eventName:n,event:a}){switch(n){case"PlayerRegistered":e("setPlayerRegisteredEvents",[...t.playerRegisteredEvents,a]),localStorage.setItem("playerRegisteredEvents",JSON.stringify(t.playerRegisteredEvents));break;case"PlayerWaiting":e("setPlayerWaitingEvents",[...t.playerWaitingEvents,a]),localStorage.setItem("playerWaitingEvents",JSON.stringify(t.playerWaitingEvents));break;case"PlayersMatched":e("setPlayersMatchedEvents",[...t.playersMatchedEvents,a]),localStorage.setItem("playersMatchedEvents",JSON.stringify(t.playersMatchedEvents));break;case"MoveCommitted":e("setMoveCommittedEvents",[...t.moveCommittedEvents,a]),localStorage.setItem("moveCommittedEvents",JSON.stringify(t.moveCommittedEvents));break;case"MoveRevealed":e("setMoveRevealedEvents",[...t.moveRevealedEvents,a]),localStorage.setItem("moveRevealedEvents",JSON.stringify(t.moveRevealedEvents));break;case"NewRound":e("setNewRoundEvents",[...t.newRoundEvents,a]),localStorage.setItem("newRoundEvents",JSON.stringify(t.newRoundEvents));break;case"GameOutcome":e("setGameOutcomeEvents",[...t.gameOutcomeEvents,a]),localStorage.setItem("gameOutcomeEvents",JSON.stringify(t.gameOutcomeEvents));break;case"PlayerCancelled":e("setPlayerCancelledEvents",[...t.playerCancelledEvents,a]),localStorage.setItem("playerCancelledEvents",JSON.stringify(t.playerCancelledEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;default:break}},clearCachedEvents({commit:e,state:t}){localStorage.setItem("playerRegisteredEvents",""),localStorage.setItem("playerWaitingEvents",""),localStorage.setItem("playersMatchedEvents",""),localStorage.setItem("moveCommittedEvents",""),localStorage.setItem("moveRevealedEvents",""),localStorage.setItem("newRoundEvents",""),localStorage.setItem("gameOutcomeEvents",""),localStorage.setItem("playerCancelledEvents",""),localStorage.setItem("playerLeftEvents",""),localStorage.setItem("stakeEvents",""),localStorage.setItem("unstakeEvents",""),localStorage.setItem("recievedFundsEvents",""),localStorage.setItem("lastFetchedBlock","")},cacheEvents({commit:e,state:t}){localStorage.setItem("playerRegisteredEvents",JSON.stringify(t.playerRegisteredEvents)),localStorage.setItem("playerWaitingEvents",JSON.stringify(t.playerWaitingEvents)),localStorage.setItem("playersMatchedEvents",JSON.stringify(t.playersMatchedEvents)),localStorage.setItem("moveCommittedEvents",JSON.stringify(t.moveCommittedEvents)),localStorage.setItem("moveRevealedEvents",JSON.stringify(t.moveRevealedEvents)),localStorage.setItem("newRoundEvents",JSON.stringify(t.newRoundEvents)),localStorage.setItem("gameOutcomeEvents",JSON.stringify(t.gameOutcomeEvents)),localStorage.setItem("playerCancelledEvents",JSON.stringify(t.playerCancelledEvents)),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents)),localStorage.setItem("stakeEvents",JSON.stringify(t.stakeEvents)),localStorage.setItem("unstakeEvents",JSON.stringify(t.unstakeEvents)),localStorage.setItem("recievedFundsEvents",JSON.stringify(t.recievedFundsEvents))},uncacheEvents({commit:e,state:t}){e("setPlayerRegisteredEvents",JSON.parse(localStorage.getItem("playerRegisteredEvents")||"[]")),e("setPlayerWaitingEvents",JSON.parse(localStorage.getItem("playerWaitingEvents")||"[]")),e("setPlayersMatchedEvents",JSON.parse(localStorage.getItem("playersMatchedEvents")||"[]")),e("setMoveCommittedEvents",JSON.parse(localStorage.getItem("moveCommittedEvents")||"[]")),e("setMoveRevealedEvents",JSON.parse(localStorage.getItem("moveRevealedEvents")||"[]")),e("setNewRoundEvents",JSON.parse(localStorage.getItem("newRoundEvents")||"[]")),e("setGameOutcomeEvents",JSON.parse(localStorage.getItem("gameOutcomeEvents")||"[]")),e("setPlayerCancelledEvents",JSON.parse(localStorage.getItem("playerCancelledEvents")||"[]")),e("setPlayerLeftEvents",JSON.parse(localStorage.getItem("playerLeftEvents")||"[]")),e("setStakeEvents",JSON.parse(localStorage.getItem("stakeEvents")||"[]")),e("setUnstakeEvents",JSON.parse(localStorage.getItem("unstakeEvents")||"[]")),e("setRecievedFundsEvents",JSON.parse(localStorage.getItem("recievedFundsEvents")||"[]"))},initLastFetchedBlock({commit:e}){const t=localStorage.getItem("lastFetchedBlock");t&&e("setLastFetchBlock",t)},setLastFetchBlock({commit:e,state:t},n){e("setLastFetchBlock",n),localStorage.setItem("lastFetchedBlock",n)},initHandledEventIds({commit:e}){const t=localStorage.getItem("handledEventIds");t&&e("setHandledEventIds",new Set(JSON.parse(t)))},setHandledEventIds({commit:e,state:t},n){e("setHandledEventIds",n),localStorage.setItem("handledEventIds",JSON.stringify(Array.from(n)))},addHandledEventId({commit:e,state:t},n){const a=new Set(t.handledEventIds);a.add(n),e("setHandledEventIds",a)},async fetchEvents({commit:e,state:t,dispatch:n}){let a=0;const s=4,i=nt.deployedContracts.Hands,r=localStorage.getItem("handsContractAddress");r!=i.toLowerCase()&&(n("clearCachedEvents"),localStorage.setItem("handsContractAddress",i.toLowerCase()));while(a<s)try{e("setIsFetchingEvents",!0),n("initLastFetchedBlock"),n("initHandledEventIds"),n("uncacheEvents");const i=t.web3ReadProvider,r=(new i.eth.Contract(nt.deployedAbis.Hands,nt.deployedContracts.Hands),new i.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),await Nt.getBlockNumber());Bt.log("viem blockNumber",r);const o=t.lastFetchedBlock,l=await Nt.getBlockNumber(),d=1e4;let u=o,p=Math.min(Number(u)+d,Number(l));while(u<=p){Bt.log("fetched fetching events from block",u,"to block",p);const i=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"PlayerRegistered",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>(Bt.log("real playerRegisteredEvent",e),{blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),playerAddress:e.args.playerAddress}))),r=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"PlayerWaiting",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>(Bt.log("real playerWaitingEvent",e),{blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),bet:Number(e.args.bet),playerAddress:e.args.playerAddress}))),o=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"PlayersMatched",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),playerA:e.args.playerA,playerB:e.args.playerB}))),c=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"MoveCommitted",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),playerAddress:e.args.playerAddress,round:Number(e.args.round)}))),y=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"MoveRevealed",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),playerAddress:e.args.playerAddress,round:Number(e.args.round),move:Number(e.args.move)}))),m=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"NewRound",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),round:Number(e.args.playerAddress),pointsA:Number(e.args.pointsA),pointsB:Number(e.args.pointsB)}))),h=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"GameOutcome",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),outcome:Number(e.args.outcome)}))),g=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"PlayerCancelled",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),playerAddress:e.args.playerAddress}))),v=(await Nt.getContractEvents({abi:nt.deployedAbis.Hands,address:nt.deployedContracts.Hands,eventName:"PlayerLeft",fromBlock:BigInt(u),toBlock:BigInt(p)})).map((e=>({blockHash:e.blockHash,transactionHash:e.transactionHash,logIndex:Number(e.logIndex),blockNumber:Number(e.blockNumber),gameId:Number(e.args.gameId),playerAddress:e.args.playerAddress})));Bt.log("fetched",i,"PlayerRegistered events"),Bt.log("fetched",r,"PlayerWaiting events"),Bt.log("fetched",o,"PlayersMatched events"),Bt.log("fetched",c,"MoveCommitted events"),Bt.log("fetched",y,"MoveRevealed events"),Bt.log("fetched",m,"NewRound events"),Bt.log("fetched",h,"GameOutcome events"),Bt.log("fetched",g,"PlayerCancelled events"),Bt.log("fetched",v,"PlayerLeft events"),e("setPlayerRegisteredEvents",[...t.playerRegisteredEvents,...i]),e("setPlayerWaitingEvents",[...t.playerWaitingEvents,...r]),e("setPlayersMatchedEvents",[...t.playersMatchedEvents,...o]),e("setMoveCommittedEvents",[...t.moveCommittedEvents,...c]),e("setMoveRevealedEvents",[...t.moveRevealedEvents,...y]),e("setNewRoundEvents",[...t.newRoundEvents,...m]),e("setGameOutcomeEvents",[...t.gameOutcomeEvents,...h]),e("setPlayerCancelledEvents",[...t.playerCancelledEvents,...g]),e("setPlayerLeftEvents",[...t.playerLeftEvents,...v]),n("setLastFetchBlock",Number(l)),n("cacheEvents"),u+=d,p=Math.min(Number(p)+d,Number(l)),e("triggerProcessEvents",!t.triggerProcessEvents),a=s}}catch(o){Bt.error("Error fetching events:",o),a++,a===s?(Bt.error("Max retries reached. Unable to fetch events."),e("setIsFetchingEvents",!1)):Bt.log(`Retrying... (${a}/${s})`)}e("setIsFetchingEvents",!1)},clearAndReload(){localStorage.clear(),location.reload()},async checkNotficationsEnabled({commit:e,state:t}){const n=Notification.permission;if("granted"!==n)return Bt.error("We weren't granted permission."),void e("setIsNotificationsEnabled",!1);e("setIsNotificationsEnabled",!0)},async requestNotificationPermission({commit:e,state:t}){const n=await Notification.requestPermission();alert(`permissionResult ${n}`),"granted"===n?e("setIsNotificationsEnabled",!0):Bt.error("We weren't granted permission.")},async sendNotification({commit:e,state:t},{title:n,body:a}){const s="/rock.svg";if(!document.hasFocus()){const e=new Notification(n,{body:a,icon:s});Bt.log("notification",e)}}},modules:{}});xt.dispatch("setTime"),xt.dispatch("fetchEvents"),xt.dispatch("checkNotficationsEnabled");const Ft=xt;var Rt=n(44870);const Wt='\n<svg fill="#000000" width="100%" height="100%" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg">\n  <path d="M200,76H188V64a35.9767,35.9767,0,0,0-60-26.804A35.96779,35.96779,0,0,0,69.26855,54.54492,35.97777,35.97777,0,0,0,20,88v40a108,108,0,0,0,216,0V112A36.04061,36.04061,0,0,0,200,76ZM152,52a12.01343,12.01343,0,0,1,12,12V76H140V64A12.01343,12.01343,0,0,1,152,52ZM92,64a12,12,0,0,1,24,0v40a12,12,0,0,1-24,0V64ZM44,88a12,12,0,0,1,24,0v16a12,12,0,0,1-24,0Zm168,40A84.003,84.003,0,0,1,44.61035,138.15381,35.95752,35.95752,0,0,0,80,130.804a35.90058,35.90058,0,0,0,43.6499,3.33715,36.31106,36.31106,0,0,0,6.3833,6.36231A51.8053,51.8053,0,0,0,116,176a12,12,0,0,0,24,0,28.03146,28.03146,0,0,1,28-28,12,12,0,0,0,0-24H152a12.01343,12.01343,0,0,1-12-12V100h60a12.01343,12.01343,0,0,1,12,12Z"/>\n</svg>',Ot='\n<svg fill="#000000" width="100%" height="100%" viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg"><path d="M 25.1289 53.5117 C 33.3789 53.5117 39.1680 49.0352 42.2851 40.2461 L 46.4102 28.6445 C 47.4414 25.7149 46.5039 23.3008 44.0664 22.4102 C 41.8867 21.6133 39.7305 22.5508 38.6992 24.9649 L 37.1758 28.7149 C 37.1289 28.8086 37.0586 28.8789 36.9649 28.8789 C 36.8476 28.8789 36.8008 28.7852 36.8008 28.6680 L 36.8008 9.8711 C 36.8008 7.1289 35.0898 5.4180 32.4649 5.4180 C 31.5039 5.4180 30.6367 5.7461 29.9805 6.3555 C 29.6758 3.9649 28.1289 2.4883 25.8086 2.4883 C 23.5351 2.4883 21.9414 4.0117 21.5898 6.3086 C 21.0039 5.7227 20.1602 5.4180 19.3164 5.4180 C 16.8789 5.4180 15.2617 7.1055 15.2617 9.7071 L 15.2617 12.3086 C 14.6289 11.6524 13.6914 11.3008 12.6836 11.3008 C 10.2461 11.3008 8.5586 13.1055 8.5586 15.7305 L 8.5586 35.8633 C 8.5586 46.8320 15.2149 53.5117 25.1289 53.5117 Z M 25.0117 50.2539 C 16.7149 50.2539 11.6524 44.9336 11.6524 35.4883 L 11.6524 16.0586 C 11.6524 15.0742 12.2851 14.3711 13.2695 14.3711 C 14.2305 14.3711 14.9336 15.0742 14.9336 16.0586 L 14.9336 28.0352 C 14.9336 28.9024 15.6367 29.4883 16.3867 29.4883 C 17.1836 29.4883 17.9102 28.9024 17.9102 28.0352 L 17.9102 10.1289 C 17.9102 9.1211 18.5430 8.4414 19.5039 8.4414 C 20.4883 8.4414 21.1680 9.1211 21.1680 10.1289 L 21.1680 26.8398 C 21.1680 27.7071 21.8711 28.2930 22.6445 28.2930 C 23.4414 28.2930 24.1680 27.7071 24.1680 26.8398 L 24.1680 7.2227 C 24.1680 6.2383 24.8242 5.5117 25.8086 5.5117 C 26.7461 5.5117 27.4258 6.2383 27.4258 7.2227 L 27.4258 26.8398 C 27.4258 27.6602 28.0820 28.2930 28.9024 28.2930 C 29.6992 28.2930 30.4024 27.6602 30.4024 26.8398 L 30.4024 10.1289 C 30.4024 9.1211 31.0820 8.4414 32.0430 8.4414 C 33.0273 8.4414 33.6836 9.1211 33.6836 10.1289 L 33.6836 33.1914 C 33.6836 34.2695 34.3633 35.0430 35.3476 35.0430 C 36.1914 35.0430 36.8945 34.6680 37.4336 33.4961 L 40.6211 26.3711 C 41.0430 25.3633 41.8867 24.8476 42.7539 25.1758 C 43.6914 25.5508 44.0195 26.4414 43.5742 27.6602 L 39.4258 39.2383 C 36.5664 47.2305 31.5508 50.2539 25.0117 50.2539 Z"/></svg>\n',Gt='\n<svg fill="#000000" width="100%" height="100%" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 15 2 C 13.355469 2 12 3.355469 12 5 L 12 6.53125 L 11.875 6.125 C 11.398438 4.550781 9.699219 3.648438 8.125 4.125 C 6.550781 4.601563 5.648438 6.300781 6.125 7.875 L 8.71875 16.3125 C 8.53125 16.386719 8.328125 16.472656 8.125 16.59375 C 7.289063 17.09375 6.34375 18.105469 6.0625 19.71875 C 5.851563 20.914063 6.082031 21.964844 6.25 22.53125 C 6.25 22.542969 6.25 22.550781 6.25 22.5625 L 7.03125 25.0625 C 7.933594 27.996094 10.652344 30 13.71875 30 L 19 30 C 22.855469 30 26 26.855469 26 23 L 26 13.09375 C 26 13.050781 26 13.011719 26 12.96875 C 26 12.949219 26 12.925781 26 12.90625 C 26 12.894531 26 12.886719 26 12.875 C 25.992188 12.84375 25.980469 12.8125 25.96875 12.78125 C 25.878906 11.679688 25.210938 10.652344 24.125 10.21875 C 23.371094 9.917969 22.578125 9.960938 21.875 10.25 C 21.550781 9.636719 21.027344 9.117188 20.34375 8.84375 C 19.558594 8.53125 18.722656 8.582031 18 8.90625 L 18 5 C 18 3.355469 16.644531 2 15 2 Z M 15 4 C 15.566406 4 16 4.433594 16 5 L 16 11.59375 L 14.96875 14.21875 C 14.820313 14.589844 14.75 14.992188 14.75 15.375 L 10.65625 15.90625 L 8.0625 7.28125 C 7.898438 6.742188 8.179688 6.195313 8.71875 6.03125 C 9.257813 5.867188 9.804688 6.179688 9.96875 6.71875 L 12.03125 13.5625 L 13.15625 13.21875 L 14 13.21875 L 14 5 C 14 4.433594 14.433594 4 15 4 Z M 19.1875 10.625 C 19.316406 10.621094 19.464844 10.636719 19.59375 10.6875 C 20.117188 10.898438 20.367188 11.476563 20.15625 12 L 19.09375 14.65625 L 19.09375 14.6875 L 18.6875 15.71875 C 18.667969 15.773438 18.621094 15.796875 18.59375 15.84375 C 18.085938 15.449219 17.445313 15.195313 16.78125 15.1875 C 16.792969 15.113281 16.78125 15.042969 16.8125 14.96875 L 18.3125 11.25 C 18.46875 10.855469 18.800781 10.632813 19.1875 10.625 Z M 22.96875 12 C 23.101563 12 23.242188 12.011719 23.375 12.0625 C 23.769531 12.21875 23.992188 12.574219 24 12.96875 C 24 12.980469 24 12.988281 24 13 C 24 13.121094 23.984375 13.253906 23.9375 13.375 L 22.8125 16.15625 C 22.601563 16.679688 22.023438 16.929688 21.5 16.71875 C 20.976563 16.507813 20.757813 15.929688 20.96875 15.40625 L 22.03125 12.75 C 22.046875 12.710938 22.046875 12.664063 22.0625 12.625 C 22.167969 12.363281 22.359375 12.164063 22.59375 12.0625 C 22.710938 12.011719 22.835938 12 22.96875 12 Z M 16.5 17.15625 C 17.027344 17.03125 17.53125 17.347656 17.65625 17.875 C 17.734375 18.199219 17.691406 18.363281 17.59375 18.53125 C 17.496094 18.699219 17.289063 18.90625 16.84375 19.0625 L 12 20.3125 C 11.703125 20.390625 11.460938 20.601563 11.339844 20.878906 C 11.21875 21.160156 11.230469 21.480469 11.375 21.75 L 12.28125 23.40625 C 12.546875 23.890625 13.15625 24.066406 13.640625 23.796875 C 14.125 23.53125 14.300781 22.921875 14.03125 22.4375 L 13.75 21.9375 L 17.4375 20.96875 C 17.46875 20.960938 17.5 20.949219 17.53125 20.9375 C 18.304688 20.667969 18.925781 20.207031 19.3125 19.5625 C 19.628906 19.035156 19.75 18.421875 19.6875 17.8125 C 19.980469 18.128906 20.355469 18.390625 20.78125 18.5625 C 21.925781 19.019531 23.183594 18.730469 24 17.90625 L 24 23 C 24 25.773438 21.773438 28 19 28 L 13.71875 28 C 11.519531 28 9.585938 26.570313 8.9375 24.46875 L 8.1875 21.96875 C 8.105469 21.699219 7.941406 20.753906 8.0625 20.0625 C 8.25 18.988281 8.71875 18.574219 9.15625 18.3125 C 9.59375 18.050781 9.90625 18.03125 9.90625 18.03125 C 9.925781 18.03125 9.949219 18.03125 9.96875 18.03125 L 16.40625 17.1875 C 16.4375 17.179688 16.46875 17.167969 16.5 17.15625 Z"/></svg>\n';var Ht=n(15941);const Dt={data(){return{Rock:Wt,Paper:Ot,Scissors:Gt}},props:{move:Number,isSmall:{default:!1},isNormal:{default:!1}},created(){Ht.log(this.move)}},zt=Object.assign(Dt,{__name:"GameMove",setup(e){return(t,n)=>e.move==(0,Rt.SU)(pt).Rock?((0,s.wg)(),(0,s.iD)("div",{key:0,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Rock"])},null,2)):e.move==(0,Rt.SU)(pt).Paper?((0,s.wg)(),(0,s.iD)("div",{key:1,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Paper"])},null,2)):e.move==(0,Rt.SU)(pt).Scissors?((0,s.wg)(),(0,s.iD)("div",{key:2,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Scissors"])},null,2)):e.move==(0,Rt.SU)(pt).LoadingMark?((0,s.wg)(),(0,s.iD)("div",{key:3,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","None"])},null,2)):e.move==(0,Rt.SU)(pt).CheckMark?((0,s.wg)(),(0,s.iD)("div",{key:4,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Rock"])},null,2)):(0,s.kq)("",!0)}}),$t=zt,Ut=$t,Jt=e=>((0,s.dD)("data-v-cb507506"),e=e(),(0,s.Cn)(),e),jt={class:"table-content"},qt={style:{"border-collapse":"collapse"}},Yt=Jt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Score")])],-1))),Zt=Jt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Time")])],-1))),Vt=Jt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Player 1")])],-1))),Kt=Jt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Player 2")])],-1))),Qt=Jt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"prize-symbol-table"}),(0,s._)("p",null,"Prize")])],-1))),Xt=Jt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"rounds-symbol-table"}),(0,s._)("p",null,"Rounds")])],-1))),en={class:"tabs-container"},tn={class:"tabs"},nn=["onClick"],an={class:"score"},sn={class:"time"},rn={class:"player"},on={key:0,class:"grey winnings"},ln={key:1,class:"winnings red"},dn={key:2,class:"winnings red"},un={key:3,class:"winnings green"},pn={class:"blue"},cn={key:4,class:"winnings red"},yn={class:"player"},mn={key:0,class:"winnings red"},hn={key:1,class:"winnings red"},gn={key:2,class:"winnings green"},vn={class:"blue"},bn={key:3,class:"winnings red"},fn={class:"prize"},wn={class:"round",colspan:"2"},Tn={class:"rounds-container"};function kn(e,t,n,a,r,o){const l=(0,s.up)("profile-item"),d=(0,s.up)("game-move");return(0,s.wg)(),(0,s.iD)("div",jt,[(0,s._)("table",qt,[(0,s._)("thead",null,[(0,s._)("tr",null,[Yt,Zt,Vt,Kt,Qt,Xt,(0,s._)("th",null,[(0,s._)("div",en,[(0,s._)("div",tn,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(r.tabs,((e,t)=>((0,s.wg)(),(0,s.iD)("button",{key:t,onClick:t=>r.selectedTab=e,class:(0,i.C_)({active:r.selectedTab===e})},(0,i.zw)(e),11,nn)))),128))])])])])]),(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>{var n;return(0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",an,(0,i.zw)(e.points[e.playerA])+" : "+(0,i.zw)(null!==(n=e.points[e.playerB])&&void 0!==n?n:0),1),(0,s._)("td",sn,(0,i.zw)(o.timeString(e.time)),1),(0,s._)("td",rn,[(0,s._)("div",null,[(0,s.Wm)(l,{address:e.playerA},null,8,["address"]),o.wasCancelled(e)?((0,s.wg)(),(0,s.iD)("div",on,"Cancelled")):o.isTimedOut(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",ln,"Timeout")):o.isLeaver(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",dn,"Left")):o.isWinner(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",un,[(0,s.Uk)("+"+(0,i.zw)(e.bet)+" ETH ",1),(0,s._)("span",pn,"(-"+(0,i.zw)(o.getApplicationFee(e))+")",1)])):o.isLoser(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",cn,(0,i.zw)(o.getPlayerWinnings(e,e.playerA))+" ETH ",1)):(0,s.kq)("",!0)])]),(0,s._)("td",yn,[(0,s._)("div",null,[(0,s.Wm)(l,{address:e.playerB},null,8,["address"]),o.isLeaver(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",mn,"Left")):o.isTimedOut(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",hn,"Timeout")):o.isWinner(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",gn,[(0,s.Uk)(" +"+(0,i.zw)(e.bet)+" ETH ",1),(0,s._)("span",vn,"(-"+(0,i.zw)(o.getApplicationFee(e))+")",1)])):o.isLoser(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",bn,(0,i.zw)(o.getPlayerWinnings(e,e.playerB))+" ETH ",1)):(0,s.kq)("",!0)])]),(0,s._)("td",fn,(0,i.zw)(e.bet)+" ETH",1),(0,s._)("td",wn,[(0,s._)("ul",Tn,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(e.moves,((t,n)=>((0,s.wg)(),(0,s.iD)("div",{key:n,class:"rounds-list"},[Object.keys(t).length>1?((0,s.wg)(),(0,s.iD)(s.HY,{key:0},[(0,s.Wm)(d,{isSmall:!0,move:t[e.playerA]},null,8,["move"]),(0,s.Uk)(" : "),(0,s.Wm)(d,{isSmall:!0,move:t[e.playerB]},null,8,["move"])],64)):(0,s.kq)("",!0)])))),128))])])])})),128))])])])}const Cn={class:"profile-mini",ref:"profileMini"};function An(e,t,n,a,r,o){const l=(0,s.up)("router-link");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Wm)(l,{class:"player-item",to:"/profile/"+n.address},{default:(0,s.w5)((()=>[(0,s._)("div",Cn,null,512),(0,s._)("p",null,(0,i.zw)(o.user),1)])),_:1},8,["to"])])}var Pn=n(8606),Sn=n.n(Pn),En=n(15941);const Mn={props:{address:{type:String,required:!0},alwaysShow:{type:Boolean,default:!1}},computed:{isYou(){var e,t;return En.log("is you",null===(e=this.address)||void 0===e?void 0:e.toLowerCase(),this.$store.state.activeAccount.toLowerCase()),(null===(t=this.address)||void 0===t?void 0:t.toLowerCase())==this.$store.state.activeAccount.toLowerCase()},user(){return this.isYou&&!this.alwaysShow?"You":this.truncateAddress(this.address)}},methods:{updateJazzicon(){var e;const t=parseInt(null===(e=this.address)||void 0===e?void 0:e.slice(2,10),16),n=Sn()(32,t),a=this.$refs.profileMini;a.innerHTML="",a.appendChild(n),En.log("updated jazzicon")},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}},watch:{address:"updateJazzicon"},mounted(){this.updateJazzicon()}};var In=n(40089);const _n=(0,In.Z)(Mn,[["render",An]]),Ln=_n;var Bn=n(15941);const Nn=.05,xn={components:{GameMove:Ut,ProfileItem:Ln},data(){return{tabs:["Completed","Active","Pending"],selectedTab:"Completed"}},props:{activeData:{type:Array,default:()=>Array(10).fill({score:"Score",time:(new Date).toLocaleString(),player1:"Player 1",player2:"Player 2",prize:"Prize",rounds:["Round 1","Round 2"]})},completedData:{type:Array,default:()=>Array(10).fill({score:"Score",time:(new Date).toLocaleString(),player1:"Player 1",player2:"Player 2",prize:"Completed",rounds:["Round 1","Round 2"]})},pendingData:{type:Array,default:()=>Array(10).fill({score:"Score",time:(new Date).toLocaleString(),player1:"Player 1",player2:"Player 2",prize:"Pending",rounds:["Round 1","Round 2"]})}},computed:{selectedData(){switch(Bn.log("selected tab",this.selectedTab),this.selectedTab){case"Active":return Bn.log("active data",this.activeData),this.activeData;case"Completed":return Bn.log("completed data",this.completedData),this.completedData;case"Pending":return Bn.log("pending data",this.pendingData),this.pendingData;default:return[]}}},methods:{truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))},timeString(e){const t=this.$store.state.currentTime;return Mt(e,t)},getWinnings(e){return(e-2*e*Nn).toFixed(4)},getApplicationFee(e){const t=e.bet;return 2*t*Nn},getPlayerPoints(e,t){return e.points[t]},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Bn.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(Bn.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s},wasCancelled(e){const t=e.outcome;return t==ct.Cancelled},isLeaver(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return a?e.outcome==ct.PlayerALeft:e.outcome==ct.PlayerBLeft},isTimedOut(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return(a?e.outcome==ct.PlayerATimeout:e.outcome==ct.PlayerBTimeout)||e.outcome==ct.BothTimeout},isWinner(e,t){const n=this.getPlayerWinnings(e,t);return Bn.log("getting winnings for player",n,t),n>0},isLoser(e,t){const n=this.getPlayerWinnings(e,t);return n<0},getColorBasedOnWinnings(e,t){const n=this.getPlayerWinnings(e,t);return n>0?"green":n<0?"red":"grey"}}},Fn=(0,In.Z)(xn,[["render",kn],["__scopeId","data-v-cb507506"]]),Rn=Fn,Wn={key:0,class:"modal-container"},On={class:"modal"},Gn={key:0,class:"trophy"},Hn={key:1},Dn={style:{color:"#E19885","font-weight":"bold"}},zn={style:{color:"#c5edff","font-weight":"bold"}},$n={key:2},Un={style:{color:"#E19885","font-weight":"bold"}},Jn={key:3,style:{"margin-top":"60px"}},jn={style:{color:"#E19885","font-weight":"bold"}},qn={key:4},Yn={key:5},Zn={key:6},Vn={key:7},Kn={key:8,style:{margin:"0","margin-bottom":"24px",padding:"0"}},Qn={style:{color:"#E19885"}},Xn={key:9,style:{margin:"0","margin-bottom":"24px",padding:"0"}},ea={style:{color:"#E19885"}},ta={class:"points-button"},na={class:"modal-button-holder"};function aa(e,t,n,r,o,l){return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[n.show?((0,s.wg)(),(0,s.iD)("div",Wn,[(0,s._)("div",On,[l.isWinner?((0,s.wg)(),(0,s.iD)("div",Gn)):(0,s.kq)("",!0),l.isWinner?((0,s.wg)(),(0,s.iD)("h4",Hn,[(0,s.Uk)("You won! "),(0,s._)("span",Dn,(0,i.zw)(l.getBaseWinnings(n.bet))+" ETH",1),(0,s.Uk)(),(0,s._)("span",zn," (-"+(0,i.zw)(l.getApplicationFee(n.bet))+" ETH)",1)])):l.isDraw?((0,s.wg)(),(0,s.iD)("h4",$n,[(0,s.Uk)("Nobody wins. "),(0,s._)("span",Un,(0,i.zw)(n.bet)+" ETH",1)])):((0,s.wg)(),(0,s.iD)("h4",Jn,[(0,s.Uk)("You lose! "),(0,s._)("span",jn,(0,i.zw)(n.bet)+" ETH",1)])),l.isLeaver&&!l.noOneLeft?((0,s.wg)(),(0,s.iD)("p",qn,"Because you left the game!")):l.opponentIsLeaver&&!l.noOneLeft?((0,s.wg)(),(0,s.iD)("p",Yn,"Because your opponent left the game! ")):l.isTimedOut?((0,s.wg)(),(0,s.iD)("p",Zn,"Because you didn't make a move in time!")):l.opponentTimedOut?((0,s.wg)(),(0,s.iD)("p",Vn,"Because your opponent didn't make a move in time!")):(0,s.kq)("",!0),l.isWinner?((0,s.wg)(),(0,s.iD)("h1",Kn,[(0,s._)("span",Qn,(0,i.zw)(parseInt(n.winnerPoints)+1),1),(0,s.Uk)(" : "+(0,i.zw)(n.loserPoints),1)])):((0,s.wg)(),(0,s.iD)("h1",Xn,[(0,s._)("span",ea,(0,i.zw)(n.loserPoints),1),(0,s.Uk)(" : "+(0,i.zw)(parseInt(n.winnerPoints)+1),1)])),(0,s._)("div",ta," +"+(0,i.zw)(l.pointsEarned)+" points ",1),(0,s._)("div",na,[(0,s._)("button",{class:"button-light",onClick:t[0]||(t[0]=(...e)=>l.toggleShow&&l.toggleShow(...e))}," Homepage "),(0,s._)("button",{class:"button-dark",onClick:t[1]||(t[1]=(...e)=>l.toggleShow&&l.toggleShow(...e))}," Close ")])])])):(0,s.kq)("",!0)])),_:1})}var sa=n(15941);const ia=.05,ra={model:{prop:"show",event:"update:show"},props:{player:{type:String,default:null},show:{type:Boolean,default:!1},win:{type:Boolean,default:!0},winnerPoints:{type:Number,default:0},loserPoints:{type:Number,default:0},bet:{type:Number,default:0},leaver:{type:String,default:null},timeout:{type:String,default:null}},methods:{getBaseWinnings(e){return e},getWinnings(e){return(e-2*e*ia).toFixed(4)},getApplicationFee(e){return 2*e*ia},toggleShow(){this.$emit("update:show",!this.show)},getBasePlayerWinnings(){const e=this.getBaseWinnings(this.bet);return this.isWinner?e:this.isDraw?0:this.isLeaver||this.isTimedOut?-bet:this.bothTimedOut?0:this.opponentIsLeaver||this.opponentTimedOut?e:this.noOneLeft?0:void 0}},computed:{isWinner(){return this.win||null!=this.leaver&&this.leaver.toLowerCase()!=this.player.toLowerCase()||this.opponentTimedOut&&!this.isTimedOut},isDraw(){return"both"==this.timeout},isLeaver(){var e,t;return sa.log("Modal stats: isLeaver: "+this.leaver+" player: "+this.player),(null===(e=this.leaver)||void 0===e?void 0:e.toLowerCase())==(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())},isTimedOut(){var e,t;return(null===(e=this.timeout)||void 0===e?void 0:e.toLowerCase())==(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())||"both"==this.timeout},opponentIsLeaver(){var e,t;return sa.log("Modal stats: isLeaver: "+this.leaver+" player: "+this.player),(null===(e=this.leaver)||void 0===e?void 0:e.toLowerCase())!=(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())&&null!=this.leaver},opponentTimedOut(){var e,t;return(null===(e=this.timeout)||void 0===e?void 0:e.toLowerCase())!=(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())&&null!=this.timeout},bothTimedOut(){return null!=this.leaver&&null==this.player},noOneLeft(){return sa.log("Modal stats: isLeaver: "+this.leaver+" player: "+this.player),null==this.leaver},pointsEarned(){return _t(this.bet,this.getBasePlayerWinnings())}},created(){sa.log(this.move)}},oa=(0,In.Z)(ra,[["render",aa],["__scopeId","data-v-6e7fb4b3"]]),la=oa;var da=n(68451),ua=n(57138),pa=n(45262),ca=n(36482),ya=n(90744),ma=n(74097),ha=n(15941);function ga(e){return/^0x[0-9a-f]*$/i.test(e)}function va(){const e=pa.O(32);return ca.Dv(e)}function ba(e){const t=new ya.w5(e);return t.address}function fa(e,t){if(!ga(e))throw ha.error("Private key found in cache is not valid hex",{privateKey:e,cacheKey:t}),new Error(`Private key found in cache (${t}) is not valid hex`);ba(e)}function wa(e="handsy:burnerWallet"){const t=localStorage.getItem(e);null!=t&&fa(t,e);const n=null!=t?new ma.X(t):(()=>{const t=va();return ha.log("New burner wallet created:",ba(t)),localStorage.setItem(e,t),new ma.X(t)})();return window.addEventListener("storage",(function t(a){n.closed?window.removeEventListener("storage",t):a.key===e&&a.storageArea===localStorage&&(a.newValue?(fa(a.newValue,e),n.next(a.newValue)):ha.warn("Burner wallet removed from cache! You may need to reload to create a new wallet."))})),n}const Ta=["to"],ka=(0,s._)("div",{class:"burner-icon"},null,-1),Ca={class:"burner-address"},Aa={class:"burner-funds"};function Pa(e,t,n,a,r,o){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("div",{onClick:t[0]||(t[0]=(...e)=>o.copy&&o.copy(...e)),class:"burner-item",to:"/profile/"+n.address},[ka,(0,s._)("p",Ca,(0,i.zw)(o.truncateAddress(n.address)),1),(0,s._)("p",Aa,(0,i.zw)(n.balance)+"ETH",1)],8,Ta)])}const Sa={props:{address:{type:String,required:!0},balance:{type:String,required:!0}},methods:{copy(){navigator.clipboard.writeText(this.address)},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}}},Ea=(0,In.Z)(Sa,[["render",Pa]]),Ma=Ea,Ia={ref:"profileAppend",class:"profile-icon",style:{"border-radius":"10000px"}};function _a(e,t,n,a,i,r){return(0,s.wg)(),(0,s.iD)("div",Ia,null,512)}var La=n(15941);const Ba={props:{address:{type:String,required:!0},isMini:{type:Boolean,default:!1},isSuperMini:{type:Boolean,default:!1},isMedium:{type:Boolean,default:!1},isLarge:{type:Boolean,default:!1}},computed:{isYou(){var e,t;return La.log("is you",null===(e=this.address)||void 0===e?void 0:e.toLowerCase(),this.$store.state.activeAccount.toLowerCase()),(null===(t=this.address)||void 0===t?void 0:t.toLowerCase())==this.$store.state.activeAccount.toLowerCase()},user(){return this.isYou&&!this.alwaysShow?"You":this.truncateAddress(this.address)}},methods:{updateJazzicon(){var e;const t=parseInt(null===(e=this.address)||void 0===e?void 0:e.slice(2,10),16);La.log("isSuperMini",this.isSuperMini);const n=this.isMini?32:this.isMedium?72:this.isLarge?160:this.isSuperMini?20:32,a=Sn()(n,t),s=this.$refs.profileAppend;s.innerHTML="",s.appendChild(a),La.log("updated jazzicon")},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}},watch:{address:"updateJazzicon"},mounted(){this.updateJazzicon()}},Na=(0,In.Z)(Ba,[["render",_a]]),xa=Na,Fa={key:0,class:"modal-container"},Ra={class:"modal-add-funds"};function Wa(e,t,n,i,r,o){const l=(0,s.up)("funds-manager-embedded");return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[n.show?((0,s.wg)(),(0,s.iD)("div",Fa,[(0,s._)("div",Ra,[(0,s.Wm)(l,{minimumFundsToAdd:n.minimumFundsToAdd,callback:n.callback,closeCallBack:o.toggleShow},null,8,["minimumFundsToAdd","callback","closeCallBack"])])])):(0,s.kq)("",!0)])),_:1})}var Oa=n(11167),Ga=n(15941);const Ha={class:"home"},Da=(0,s._)("h2",{style:{}},"Transfer Funds to L2",-1),za={class:"green",style:{"margin-top":"-15px","margin-bottom":"20px","font-size":"20px"}},$a={style:{display:"flex","justify-content":"space-between"}},Ua={style:{display:"flex","flex-direction":"column","align-items":"start"}},Ja=(0,s._)("div",null,"From",-1),ja=["label","value"],qa={style:{margin:"0","font-size":"15px","font-weight":"100",color:"gray","text-align":"center"}},Ya={style:{display:"flex","flex-direction":"column","align-items":"start"}},Za=(0,s._)("div",null,"To",-1),Va=["label","value"],Ka={style:{margin:"0","font-size":"15px","font-weight":"100",color:"gray","text-align":"center"}},Qa={class:"home-item"},Xa=(0,s._)("div",null,"Input amount",-1),es={key:0,class:"amounts-error"},ts={key:1,class:"amounts"},ns={class:"transfer-list__result"},as={style:{"margin-top":"20px","text-align":"center",display:"flex","justify-content":"center",gap:"20px"}},ss=["disabled"],is={key:0,class:"loading"},rs=(0,s._)("a",{href:"https://www.orbiter.finance/?source=Ethereum&dest=Arbitrum%20Nova"},"Or use to Orbiter",-1),os=(0,s.aZ)({__name:"FundsManager",props:{minimumFundsToAdd:{type:Number,required:!1,default:.01},callback:{type:Function,required:!1,default:()=>{}},closeCallBack:{type:Function,required:!1,default:()=>{}}},setup(e){const t=(0,Rt.qj)({tokens:[],fromChains:[],toChains:[],tokenAddress:"",fromChainId:void 0,toChainId:void 0,amount:.01,amounts:void 0,amountsError:"",transferList:[],collapseActive:0,transferring:!1,complete:!1,sentToBridge:!1,sentToDestination:!1,fromBalance:"0",toBalance:"0"}),n=e,r=(0,s.Fl)((()=>{if(n.minimumFundsToAdd){const e=Ft.state.isJoiningPasswordMatch,t=Ft.state.joiningPassword;return e?`Add atleast ${n.minimumFundsToAdd} ETH to join match ${t}`:`Add atleast ${n.minimumFundsToAdd} ETH to complete that transaction`}return""})),o=(0,s.Fl)((()=>n.closeCallBack)),l=(0,s.Fl)((()=>t.tokens.find((e=>e.address.toLowerCase()==t.tokenAddress.toLowerCase())))),d=(0,s.Fl)((()=>t.fromChains.find((e=>e.id==t.fromChainId)))),u=(0,s.Fl)((()=>t.toChains.find((e=>e.id==t.toChainId)))),p=async()=>{const e=3;for(let a=0;a<e;a++)try{t.fromChainId&&(t.fromBalance=await v(g.selectedAddress,t.fromChainId.toString())),t.toChainId&&(t.toBalance=await v(g.selectedAddress,"42170"));break}catch(n){if(Ga.error("Error fetching balance. Attempt:",a+1,n),a===e-1)throw n}},c=(window.location.href,"Mainnet"),y=new Oa.Bridge(c),m=async()=>{var e,n,a;const s=await y.supports(d.value,u.value),i="Mainnet"==c?"42170":"421611";t.fromChains=s.fromChains,t.toChains=s.toChains.filter((e=>e.networkId==i)),Ga.log("toChains",t.toChains),Ga.log("initial toChains",s.toChains),t.fromChainId=null===(e=t.fromChains.find(((e,t)=>!d.value&&0==t||d.value.id==e.id)))||void 0===e?void 0:e.id,t.toChainId=null===(n=t.toChains.find(((e,t)=>!u.value&&0==t||u.value.id==e.id)))||void 0===n?void 0:n.id,Ga.log("to chains",t.toChains),t.tokens=s.tokens.map((e=>{if(t.fromChainId==e.chainId)return e})).filter((e=>void 0!==e)),t.tokenAddress=null===(a=t.tokens.find(((e,t)=>!l.value&&0==t||l.value.address==e.address)))||void 0===a?void 0:a.address,await p()};m();const h=async()=>{if(t.amount)try{t.amounts=await y.getAmounts(l.value,d.value,u.value,t.amount),t.amountsError=""}catch(e){t.amounts=void 0,t.amountsError=e.message}},g=window.ethereum,v=async(e,t)=>{var n;let a="0x"+Number(t).toString(16),s=null!==(n=wt[a])&&void 0!==n?n:wt["0x1"];Ga.log("providerEndpoint",s);const i=new st.ZPm(new st.ZPm.providers.HttpProvider(s)),r=await i.eth.getBalance(e),o=parseFloat(i.utils.fromWei(r,"ether")).toFixed(6);return o},b=async()=>{};return(0,s.YP)((()=>[t.tokenAddress,t.fromChainId,t.toChainId]),(()=>{m(),h()})),(0,s.YP)((()=>t.amount),(()=>{h()})),(e,n)=>{const l=(0,s.up)("el-collapse");return(0,s.wg)(),(0,s.iD)("div",Ha,[Da,(0,s._)("p",za,(0,i.zw)(r.value),1),(0,s._)("div",$a,[(0,s._)("div",Ua,[Ja,(0,s.wy)((0,s._)("select",{class:"input-select","onUpdate:modelValue":n[0]||(n[0]=e=>t.fromChainId=e),placeholder:"Select",size:"large"},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.fromChains,(e=>((0,s.wg)(),(0,s.iD)("option",{key:e.id,label:e.name.charAt(0).toUpperCase()+e.name.slice(1),value:e.id},null,8,ja)))),128))],512),[[a.bM,t.fromChainId]]),(0,s._)("p",qa,"Balance: "+(0,i.zw)(t.fromBalance)+" ETH",1)]),(0,s._)("div",Ya,[Za,(0,s.wy)((0,s._)("select",{class:"input-select","onUpdate:modelValue":n[1]||(n[1]=e=>t.toChainId=e),placeholder:"Select",size:"large"},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.toChains,(e=>((0,s.wg)(),(0,s.iD)("option",{key:e.id,label:e.name.charAt(0).toUpperCase()+e.name.slice(1),value:e.id},null,8,Va)))),128))],512),[[a.bM,t.toChainId]]),(0,s._)("p",Ka,"Balance: "+(0,i.zw)(t.toBalance)+" ETH",1)])]),(0,s._)("div",Qa,[Xa,(0,s.wy)((0,s._)("input",{size:"large",class:"input","onUpdate:modelValue":n[2]||(n[2]=e=>t.amount=e)},null,512),[[a.nr,t.amount]])]),t.amountsError?((0,s.wg)(),(0,s.iD)("p",es,(0,i.zw)(t.amountsError),1)):(0,s.kq)("",!0),t.amounts?((0,s.wg)(),(0,s.iD)("p",ts,[(0,s.Uk)(" Pay Amount: "),(0,s._)("span",null,(0,i.zw)(t.amounts.payAmountHm),1),(0,s.Uk)(" Recieve Amount: "),(0,s._)("span",null,(0,i.zw)(t.amounts.receiveAmountHm),1)])):(0,s.kq)("",!0),t.transferList.length>0?((0,s.wg)(),(0,s.j4)(l,{key:2,class:"home-item",modelValue:t.collapseActive,"onUpdate:modelValue":n[3]||(n[3]=e=>t.collapseActive=e)},{default:(0,s.w5)((()=>[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.transferList,((e,t)=>((0,s.wg)(),(0,s.iD)("div",{key:t},[(0,s.Uk)((0,i.zw)(`token: ${e.token.name}, fromChain: ${e.fromChain.name}, toChain: ${e.toChain.name}, amount: ${e.amount}`)+" ",1),(0,s._)("h1",ns,(0,i.zw)(JSON.stringify(e.result)),1)])))),128))])),_:1},8,["modelValue"])):(0,s.kq)("",!0),(0,s._)("div",as,[(0,s._)("button",{class:"button-light",onClick:n[4]||(n[4]=()=>{o.value()})}," Cancel "),(0,s._)("button",{disabled:""!=t.amountsError||t.transferring||t.complete,size:"large",onClick:b,class:"button-dark",style:{padding:"0 90px"}},[(0,s.Uk)((0,i.zw)(t.complete?"Complete":t.transferring?"Transferring":"Transfer")+" ",1),t.transferring?((0,s.wg)(),(0,s.iD)("div",is)):(0,s.kq)("",!0)],8,ss)]),rs])}}}),ls=os,ds=ls;n(15941);const us={class:"home funds-manager"},ps={style:{}},cs=(0,s._)("p",{style:{"padding-bottom":"20px"}},"Get some ETH onto your Arbitrum Nova account",-1),ys=(0,s._)("p",{class:"grey",style:{"font-size":"15px","text-align":"start"}},[(0,s.Uk)("Deposit Arb Nova ETH to your Handsy.io wallet "),(0,s._)("a",{href:"https://discord.gg/ZjqqaZvw",target:"_blank"},"Join Discord")],-1),ms={class:"card-small"},hs=(0,s._)("h4",null,"Copy address and send funds",-1),gs=(0,s._)("div",{class:"copy"},null,-1),vs={class:"grey",style:{"font-size":"15px","text-align":"start"}},bs=(0,s._)("p",{style:{"padding-bottom":"20px"}},"Get your funds to an external account",-1),fs=(0,s._)("p",{class:"grey",style:{"font-size":"15px","text-align":"start"}},"Export your private key and import it into an external wallet",-1),ws={class:"card-small"},Ts=(0,s._)("h4",null,"Copy your private key",-1),ks=(0,s._)("div",null,"Copy PK",-1),Cs=(0,s._)("div",{class:"copy"},null,-1),As={class:"grey",style:{"font-size":"15px","text-align":"start"}},Ps={class:"modal-button-holder"},Ss=(0,s.aZ)({__name:"FundsManagerEmbedded",props:{minimumFundsToAdd:{type:Number,required:!1,default:.01},callback:{type:Function,required:!1,default:()=>{}},closeCallBack:{type:Function,required:!1,default:()=>{}}},setup(e){const t=(0,Rt.qj)({tokenAddress:"",fromChainId:void 0,toChainId:void 0,amount:.01,amounts:void 0,amountsError:"",collapseActive:0,transferring:!1,complete:!1,sentToBridge:!1,sentToDestination:!1,fromBalance:"0",toBalance:"0",isWithdrawPage:!1,amountToWithdraw:0,withdrawAddress:""}),n=e,a=(0,s.Fl)((()=>Ft.state.balance)),r=((0,s.Fl)((()=>Ft.state.mainnetBalance)),(0,s.Fl)((()=>Ft.state.bridgingEthToMainnetFromNova))),o=(0,s.Fl)((()=>Ft.state.completedBridgingEthToMainnetFromNova)),l=(0,s.Fl)((()=>Ft.state.withdrawingToAddress)),d=(0,s.Fl)((()=>Ft.state.completedWithdrawingToAddress)),u=(0,s.Fl)((()=>r.value?1:o.value?2:l.value?3:d.value?4:0)),p=((0,s.Fl)((()=>0==u.value||4==u.value)),(0,s.Fl)((()=>{if(n.minimumFundsToAdd){const e=Ft.state.isJoiningPasswordMatch,t=Ft.state.joiningPassword;return e?`Add atleast ${n.minimumFundsToAdd} ETH to join match ${t}`:`Add atleast ${n.minimumFundsToAdd} ETH to complete that transaction`}return""})),(0,s.Fl)((()=>n.closeCallBack))),c=()=>{t.isWithdrawPage=!t.isWithdrawPage};window.location.href,window.ethereum;return(0,s.YP)((()=>[t.tokenAddress,t.fromChainId,t.toChainId]),(()=>{})),(0,s.YP)((()=>t.amount),(()=>{})),(e,n)=>((0,s.wg)(),(0,s.iD)("div",us,[(0,s._)("h2",ps,[(0,s.Uk)((0,i.zw)(t.isWithdrawPage?"Withdraw":"Fund wallet")+" ",1),(0,s._)("span",{onClick:c,style:{cursor:"pointer","font-size":"20px","font-weight":"100","letter-spacing":"normal","text-decoration":"underline"}},(0,i.zw)(t.isWithdrawPage?"or deposit":"or withdraw"),1)]),t.isWithdrawPage?((0,s.wg)(),(0,s.iD)(s.HY,{key:1},[bs,fs,(0,s._)("div",ws,[Ts,(0,s._)("a",{style:{cursor:"pointer",display:"flex",gap:"10px"},onClick:n[1]||(n[1]=()=>{(0,Rt.SU)(Ft).dispatch("exportPrivateKey")})},[ks,(0,s.Uk)(),Cs])]),(0,s._)("p",As,"Your balance "+(0,i.zw)(a.value)+" ETH",1)],64)):((0,s.wg)(),(0,s.iD)(s.HY,{key:0},[cs,ys,(0,s._)("div",ms,[hs,(0,s._)("a",{style:{cursor:"pointer",display:"flex",gap:"10px"},onClick:n[0]||(n[0]=()=>{(0,Rt.SU)(It)((0,Rt.SU)(Ft).state.activeAccount)})},[(0,s._)("div",null,(0,i.zw)((0,Rt.SU)(Lt)((0,Rt.SU)(Ft).state.activeAccount)),1),(0,s.Uk)(),gs])]),(0,s._)("p",vs,"Your balance "+(0,i.zw)(a.value)+" ETH",1)],64)),(0,s._)("div",Ps,[(0,s._)("button",{class:"button-light",onClick:n[2]||(n[2]=()=>{p.value()})}," Cancel ")])]))}}),Es=Ss,Ms=Es;var Is=n(15941);const _s={data(){return{amount:0}},components:{FundsManager:ds,FundsManagerEmbedded:Ms},model:{prop:"show",event:"update:show"},props:{show:{type:Boolean,default:!1},minimumFundsToAdd:{type:Number,default:null},callback:{type:Function,default:()=>{}}},methods:{toggleShow(){this.$emit("update:show",!this.show),Is.log("callers callback"),this.callback(!0)}},computed:{isBurner(){return this.$store.state.isMetamask}},created(){Is.log(this.move)}},Ls=(0,In.Z)(_s,[["render",Wa],["__scopeId","data-v-59c54c8b"]]),Bs=Ls;var Ns=n(15941);function xs(e){return e==yt.Waiting?"Waiting":e==yt.Sending?"Sending move":e==yt.Revealing?"Revealing move":e==yt.Revealed?"Revealed move":e==yt.Matched?"Matched with opponent":e==yt.Initial?"":e==yt.Finished?"Game complete":""}const Fs=nt.deployedContracts.Hands,Rs=nt.deployedAbis.Hands;function Ws(){return Math.random().toString(36).substring(2,15)}function Os(e,t){return e==t?ct.Draw:e==pt.Rock?t==pt.Paper?ct.PlayerB:ct.PlayerA:e==pt.Paper?t==pt.Scissors?ct.PlayerB:ct.PlayerA:e==pt.Scissors?t==pt.Rock?ct.PlayerB:ct.PlayerA:void 0}Ns.log("CONTRACT_ADDRESS",Fs);const Gs={components:{GameMove:Ut,GameList:Rn,Modal:la,ProfileItem:Ln,ProfileItemBurner:Ma,ModalAddFunds:Bs,ProfileIcon:xa},props:{provider:{type:String,default:null},balance:{type:Number,default:null}},data(){return{stripeClientSecret:null,initialized:!1,games:{},lastBlockSearched:0,selectedMove:"",selectedBet:"",randomString:"",contractInstance:null,contractReadInstance:null,pastGames:[],gameIdsFinished:{},wagerSteps:["0.01","0.1","1","5","10"],sliderIndex:0,_lastGameId:-1,activeAccount:null,rampSdk:null,affiliateContract:null,affiliateOfUser:null,playWithFriend:null,leaverModal:null,timeoutModal:null,showModal:!1,showAddFundsModal:!1,winnerPoints:0,loserPoints:0,winModal:!1,handledEventIds:new Set,burnerTopUpAmount:.002,burnerAddress:null,burnerPrivateKey:null,burnerContractInstance:null,burnerNonce:0,lastFetchedBlock:Ct,onAddFunds:()=>{Ns.log("onAddFunds"),this.showAddFundsModal=!1},minimumAmount:0}},computed:{canClaim(){return"time out"==this.opponentTimeLeft||"time out"==this.yourTimeLeft},isJoiningPasswordMatch(){return this.$store.state.isJoiningPasswordMatch},joiningPassword(){return this.$store.state.joiningPassword},triggerProcessEvents(){return this.$store.state.triggerProcessEvents},fetchingEvents(){return this.$store.state.isFetchingEvents},playerRegisteredEvents(){return this.$store.state.playerRegisteredEvents},playerWaitingEvents(){return this.$store.state.playerWaitingEvents},playersMatchedEvents(){return this.$store.state.playersMatchedEvents},moveCommittedEvents(){return this.$store.state.moveCommittedEvents},moveRevealedEvents(){return this.$store.state.moveRevealedEvents},newRoundEvents(){return this.$store.state.newRoundEvents},gameOutcomeEvents(){return this.$store.state.gameOutcomeEvents},playerCancelledEvents(){return this.$store.state.playerCancelledEvents},playerLeftEvents(){return this.$store.state.playerLeftEvents},isMetamask(){return this.$store.state.isMetamask},isBurner(){return null!=this.burnerAddress&&null!=this.burnerPrivateKey&&null!=this.burnerContractInstance},getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new st.ZPm(this.provider)},walletClient(){return(0,et.K)({chain:ut.Z,transport:(0,tt.P)(this.provider)})},getWeb3Read(){return new st.ZPm(new st.ZPm.providers.WebsocketProvider("wss://maximum-shy-meme.arbitrum-goerli.discover.quiknode.pro/9e608d37bed73e216df881fc52b358d41236b29e/"))},getWeb3Read2(){return new st.ZPm(new st.ZPm.providers.HttpProvider(kt))},balance(){const e=this.$store.state.balance;return(Math.round(100*e)/100).toFixed(2)},opponentBalance(){const e=this.$store.state.balances[this.opponentAddress.toLowerCase()];return(Math.round(100*e)/100).toFixed(2)},burnerBalance(){var e;const t=this.$store.state.balances[null===(e=this.burnerAddress)||void 0===e?void 0:e.toLowerCase()];return(Math.round(100*t)/100).toFixed(2)},isRock(){return this.selectedMove===pt.Rock},isPaper(){return this.selectedMove===pt.Paper},isScissors(){return this.selectedMove===pt.Scissors},gameState(){var e,t,n,a,s;if(Ns.log("gameState",this.currentGameId,this.games),!this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"])return yt.Initial;if(this.games[null!==(t=this.currentGameId)&&void 0!==t?t:"0"].outcome!=ct.None)return yt.Initial;const i=this.games[null!==(n=this.currentGameId)&&void 0!==n?n:"0"].round;return null!==(a=this.games[null!==(s=this.currentGameId)&&void 0!==s?s:"0"].states[i][this.getActiveAccount.toLowerCase()])&&void 0!==a?a:yt.Matched},yourGameStateToString(){switch(this.gameState){case yt.Initial:return"Initial";case yt.Waiting:return"Waiting for opponent";case yt.Sending:return"Sending move";case yt.Sent:return"Sent move";case yt.Revealing:return"Revealing move";case yt.Revealed:return"Revealed move";case yt.Matched:return"Matched";case yt.Finished:return"Game complete";default:return""}},isSent(){return this.gameState==yt.Sent},isRegistering(){return this.gameState==yt.Registering},isWaiting(){return this.gameState==yt.Waiting},isRevealing(){return this.gameState==yt.Revealing},isRevealed(){return this.gameState==yt.Revealed},roundStateString(){return this.bothRevealed?this.isWinner?"You won!":this.isLoser?"You lost!":"Draw!":this.isSent?this.isSent&&!this.isOpponentMoveSent?"Waiting for opponent":this.isRevealing?"Revealing move":this.isRevealed&&!this.isOpponentMoveRevealed?"Waiting for opponent reveal":null:"Choose your move"},isOpponentMoveRevealed(){return this.opponentState==yt.Revealed},bothRevealed(){return this.isRevealed&&this.isOpponentMoveRevealed},isInGame(){return"0"!=this.currentGameId&&this.gameState!=yt.Initial&&this.gameState!=yt.Registering&&this.gameState!=yt.Waiting},isMoveSent(){return this.gameState==yt.Sent||this.gameState==yt.Revealing||this.gameState==yt.Revealed},isOpponentMoveSent(){return this.opponentState==yt.Sent||this.opponentState==yt.Revealing||this.opponentState==yt.Revealed},isGameFinished(){return this.gameState==yt.Finished},currentRound(){var e;return this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"].round},opponentMove(){var e;return this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"].moves[this.currentRound][this.getOpponentAccount]},isWinner(){return Os(this.selectedMove,this.opponentMove)==ct.PlayerA},isLoser(){return Os(this.selectedMove,this.opponentMove)==ct.PlayerB},currentGameId(){var e;const t=Object.values(this.games).sort(((e,t)=>t.gameId-e.gameId));Ns.log("currentGameId",t);const n=t.find((e=>e.outcome==ct.None&&(e.playerA.toLowerCase()==this.activeAccount.toLowerCase()||e.playerB==this.getActiveAccount)));return Ns.log("games ordered by gameId",t),Ns.log("currentGameId",n),null!==(e=null===n||void 0===n?void 0:n.gameId.toString())&&void 0!==e?e:"0"},previousGame(){const e=Object.values(this.games).sort(((e,t)=>t.gameId-e.gameId)),t=e.find((e=>e.gameId!==this.currentGameId&&e.outcome!=ct.None));return Ns.log("games ordered by gameId",e),Ns.log("previous game",t),t},previousGameWager(){var e,t;return null!==(e=null===(t=this.previousGame)||void 0===t?void 0:t.bet)&&void 0!==e?e:0},currentWager(){var e,t;return null!==(e=null===(t=this.games[this.currentGameId])||void 0===t?void 0:t.bet)&&void 0!==e?e:0},previousGamePoints(){var e,t,n;return Ns.log("previousGamePoints",null===(e=this.previousGame)||void 0===e?void 0:e.points[this.getActiveAccount.toLowerCase()]),null!==(t=null===(n=this.previousGame)||void 0===n?void 0:n.points[this.getActiveAccount.toLowerCase()])&&void 0!==t?t:0},previousGameOpponent(){var e,t,n;const a=null===(e=this.previousGame)||void 0===e||null===(e=e.playerA)||void 0===e?void 0:e.toLowerCase(),s=null===(t=this.previousGame)||void 0===t||null===(t=t.playerB)||void 0===t?void 0:t.toLowerCase();return a===(null===this||void 0===this||null===(n=this.getActiveAccount)||void 0===n?void 0:n.toLowerCase())?s:a},yourCurrentPoints(){var e,t,n;return null!==(e=null===(t=this.games[this.currentGameId])||void 0===t?void 0:t.points[null===(n=this.getActiveAccount)||void 0===n?void 0:n.toLowerCase()])&&void 0!==e?e:0},opponentCurrentPoints(){var e,t,n;return null!==(e=null===(t=this.games[this.currentGameId])||void 0===t?void 0:t.points[null===(n=this.opponentAddress)||void 0===n?void 0:n.toLowerCase()])&&void 0!==e?e:0},previousGameOpponentPoints(){var e,t,n;return null!==(e=null===(t=this.previousGame)||void 0===t?void 0:t.points[null===(n=this.previousGameOpponent)||void 0===n?void 0:n.toLowerCase()])&&void 0!==e?e:0},wonLastGame(){return this.previousGamePoints>this.previousGameOpponentPoints},yourAddress(){return this.getActiveAccount},yourMove(){return this.selectedMove},opponentAddress(){var e,t,n;const a=null===(e=this.games[this.currentGameId])||void 0===e||null===(e=e.playerA)||void 0===e?void 0:e.toLowerCase(),s=null===(t=this.games[this.currentGameId])||void 0===t||null===(t=t.playerB)||void 0===t?void 0:t.toLowerCase();return a===(null===this||void 0===this||null===(n=this.getActiveAccount)||void 0===n?void 0:n.toLowerCase())?s:a},opponentMove(){var e,t,n,a;const s=null===(e=this.opponentAddress)||void 0===e?void 0:e.toLowerCase(),i=null!==(t=this.currentGameId)&&void 0!==t?t:"0";return null!==(n=null===(a=this.games[null===i||void 0===i?void 0:i.toLowerCase()])||void 0===a||null===(a=a.moves[this.currentRound])||void 0===a?void 0:a[null===s||void 0===s?void 0:s.toLowerCase()])&&void 0!==n?n:pt.None},opponentState(){var e,t,n,a,s,i,r,o;const l=null!==(e=null===(t=this.opponentAddress)||void 0===t?void 0:t.toLowerCase())&&void 0!==e?e:"",d=null!==(n=null===this||void 0===this?void 0:this.currentGameId)&&void 0!==n?n:"0",u=null!==(a=null===(s=this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"])||void 0===s?void 0:s.round)&&void 0!==a?a:0;return null!==(r=null===(o=this.games[null===d||void 0===d?void 0:d.toLowerCase()])||void 0===o?void 0:o.states[u][null===l||void 0===l?void 0:l.toLowerCase()])&&void 0!==r?r:yt.Initial},opponentStateToString(){switch(this.opponentState){case yt.Initial:return"Choosing move";case yt.Registering:return"Registering";case yt.Waiting:return"Waiting";case yt.Matched:return"Choosing move";case yt.Sending:return"Sending";case yt.Sent:return"Sent";case yt.Revealing:return"Revealing";case yt.Revealed:return"Revealed";case yt.Finished:return"Finished";default:return"Unknown"}},isMoveSending(){return this.gameState==yt.Sending},yourTimeLeft(){const e=this.games[this.currentGameId],t=null===e||void 0===e?void 0:e.timeOfMatched;Ns.log("timeOfStart",t);const n=this.$store.state.currentTime,a=t?Pt-(n-t):0;if(a<0)return"time out";const s=Math.floor(a/60),i=a%60,r=`${s}:${i.toString().padStart(2,"0")}`;return r},opponentTimeLeft(){const e=this.games[this.currentGameId],t=null===e||void 0===e?void 0:e.timeOfMatched,n=this.$store.state.currentTime,a=t?Pt-(n-t):0;if(a<0)return"time out";const s=Math.floor(a/60),i=a%60,r=`${s}:${i.toString().padStart(2,"0")}`;return r},shouldReveal(){return Ns.log("shouldReveal",this.isMoveSent,this.isOpponentMoveSent,this.isGameFinished,this.isRevealing),this.isMoveSent&&this.isOpponentMoveSent&&!this.isGameFinished&&!this.isRevealing&&this.initialized&&!this.isRevealed},shouldMove(){return(this.isMoveSent||this.isMoveSending)&&this.isInGame},shouldSetAffiliateCode(){const e=localStorage.getItem("affiliateCode");return e&&this.affiliateOfUser==ua.d},pendingGames(){const e=Object.values(this.games);return e.filter((e=>e.outcome==ct.None&&""==e.playerB&&"0"!=e.gameId)).sort(((e,t)=>t.time-e.time))},activeGames(){const e=Object.values(this.games);return e.filter((e=>e.outcome==ct.None&&""!=e.playerB&&"0"!=e.gameId)).sort(((e,t)=>t.time-e.time))},completedGames(){const e=Object.values(this.games);return e.filter((e=>e.outcome!=ct.None&&"0"!=e.gameId)).sort(((e,t)=>{var n,a;return parseInt(null!==(n=t.time)&&void 0!==n?n:0)-parseInt(null!==(a=e.time)&&void 0!==a?a:0)}))}},async mounted(){Ns.log("provider",this.provider),this.initialized=!1,Ft.commit("setProfiles",{});const e=localStorage.getItem("lastSentMove"),t=localStorage.getItem("lastRandomString"),n=localStorage.getItem("lastBetAmount"),a=localStorage.getItem("playWithRandom");e&&(this.selectedMove=e),n?(this.selectedBet=null!==n&&void 0!==n?n:this.wagerSteps[0],this.sliderIndex=this.wagerSteps.indexOf(parseFloat(this.selectedBet))):(this.selectedBet=this.wagerSteps[0],this.sliderIndex=0),t&&(this.randomString=t),this.playWithFriend="true"!==a,Ns.log("playWithFriend",this.playWithFriend),Ns.log("playWithFriend localStorage",localStorage.getItem("playWithRandom")),this.subscribeToEvents(),this.initialized=!0,await this.getAccount(),await this.checkAffililiateCode(),await this.checkJoiningPassword()},watch:{triggerProcessEvents:{handler(){this.processEvents()},immediate:!0},games:{handler(e,t){Ns.log("yourGameState",xs(this.gameState)),Ns.log("games changed",this.games[this.currentGameId]),Ft.dispatch("setGames",this.games),Ns.log("store games",Ft.state.games)},deep:!0},isInGame:{handler(e,t){e&&(this.$store.dispatch("setBalanceOf",this.opponentAddress),Ns.log("isInGame",e)),this.$store.dispatch("setIsInGame",e),this.$store.dispatch("setLeaveGame",this.leaveGame)},deep:!0,immediate:!0},canClaim:{handler(e,t){e?this.$store.commit("setLeaveText","Claim"):this.$store.commit("setLeaveText","Leave")},deep:!0,immediate:!0},shouldReveal:{handler(e,t){e&&(Ns.log("is calling revealMove"),this.revealMove())},deep:!0},isMetamask:{handler(e,t){if(e){this.burnerPrivateKey=wa().value;const e=this.getWeb3.eth.accounts.privateKeyToAccount(this.burnerPrivateKey);this.getWeb3.eth.accounts.wallet.add(e),this.burnerAddress=e.address,this.burnerContractInstance=new this.getWeb3.eth.Contract(Rs,Fs,{from:this.burnerAddress}),this.$store.dispatch("setBalanceOf",this.burnerAddress)}},immediate:!0}},methods:{getLastFetchBlock(){var e;return null!==(e=localStorage.getItem("lastFetchedBlock"))&&void 0!==e?e:Ct},cacheEvents(){localStorage.setItem("playerRegisteredEvents",JSON.stringify(this.playerRegisteredEvents)),localStorage.setItem("playerWaitingEvents",JSON.stringify(this.playerWaitingEvents)),localStorage.setItem("playersMatchedEvents",JSON.stringify(this.playersMatchedEvents)),localStorage.setItem("moveCommittedEvents",JSON.stringify(this.moveCommittedEvents)),localStorage.setItem("moveRevealedEvents",JSON.stringify(this.moveRevealedEvents)),localStorage.setItem("newRoundEvents",JSON.stringify(this.newRoundEvents)),localStorage.setItem("gameOutcomeEvents",JSON.stringify(this.gameOutcomeEvents)),localStorage.setItem("playerCancelledEvents",JSON.stringify(this.playerCancelledEvents)),localStorage.setItem("playerLeftEvents",JSON.stringify(this.playerLeftEvents))},uncacheEvents(){var e,t,n,a,s,i,r,o,l;this.playerRegisteredEvents=null!==(e=JSON.parse(localStorage.getItem("playerRegisteredEvents")))&&void 0!==e?e:[],this.playerWaitingEvents=null!==(t=JSON.parse(localStorage.getItem("playerWaitingEvents")))&&void 0!==t?t:[],this.playersMatchedEvents=null!==(n=JSON.parse(localStorage.getItem("playersMatchedEvents")))&&void 0!==n?n:[],this.moveCommittedEvents=null!==(a=JSON.parse(localStorage.getItem("moveCommittedEvents")))&&void 0!==a?a:[],this.moveRevealedEvents=null!==(s=JSON.parse(localStorage.getItem("moveRevealedEvents")))&&void 0!==s?s:[],this.newRoundEvents=null!==(i=JSON.parse(localStorage.getItem("newRoundEvents")))&&void 0!==i?i:[],this.gameOutcomeEvents=null!==(r=JSON.parse(localStorage.getItem("gameOutcomeEvents")))&&void 0!==r?r:[],this.playerCancelledEvents=null!==(o=JSON.parse(localStorage.getItem("playerCancelledEvents")))&&void 0!==o?o:[],this.playerLeftEvents=null!==(l=JSON.parse(localStorage.getItem("playerLeftEvents")))&&void 0!==l?l:[],Ns.log("uncached events",this.playerRegisteredEvents,this.playerWaitingEvents,this.playersMatchedEvents,this.moveCommittedEvents,this.moveRevealedEvents,this.newRoundEvents,this.gameOutcomeEvents,this.playerCancelledEvents,this.playerLeftEvents)},toggleAddFundsModal(){this.showAddFundsModal=!this.showAddFundsModal},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))},smallTruncate(e){return(null===e||void 0===e?void 0:e.slice(0,4))+".."+(null===e||void 0===e?void 0:e.slice(-2))},onRock(){this.selectedMove=pt.Rock,this.sendMove()},onPaper(){this.selectedMove=pt.Paper,this.sendMove()},onScissors(){this.selectedMove=pt.Scissors,this.sendMove()},buttonClicked(e){this.sliderIndex=e,this.sliderValueChanged()},sliderValueChanged(){this.selectedBet=this.wagerSteps[this.sliderIndex]},togglePlayWithFriend(){const e=localStorage.getItem("playWithRandom");"true"==e?(Ns.log("setting playWithFriend to false"),localStorage.setItem("playWithRandom",!1),this.playWithFriend=!0):(Ns.log("setting playWithFriend to true"),localStorage.setItem("playWithRandom",!0),this.playWithFriend=!1)},async getAccount(){const e=await this.getWeb3.eth.getAccounts();return Ns.log("accounts",e),this.activeAccount=e[0],e[0]},async setContract(){this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs),this.contractReadInstance=new this.getWeb3Read.eth.Contract(Rs,Fs),Ns.log("contractInstance",this.contractInstance),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async getBlockNumber(){const e=await this.getWeb3.eth.getBlockNumber();return e},async getContract(){return this.contractInstance||await this.setContract(),this.contractInstance},async getReadContract(){return this.contractReadInstance||await this.setContract(),this.contractReadInstance},createGame(e,t=""){this.games[Number(e)]={gameId:e,playerA:t.toLowerCase(),playerB:"",states:{[0]:{[t.toLowerCase()]:yt.Initial}},bet:0,moves:{[0]:{[t.toLowerCase()]:pt.None}},outcome:ct.None,points:{[t.toLowerCase()]:0},round:0,leaver:null}},setLastGameId(e){Ns.log("setting last game",e),this._lastGameId=parseInt(e)},isNewestGameId(e){return parseInt(e)>=this._lastGameId&&e>=this.currentGameId},getGame(e){return this.games[Number(e)]},getGameCurrentRound(e){return this.games[Number(e)].length-1},convertTimestampToTime(e){const t=new Date(1e3*e);let n=t.getHours();const a="0"+t.getMinutes(),s=n>=12?"PM":"AM";n%=12,n=n||12;const i=n+":"+a.substr(-2)+" "+s;return i},async emptyBurnerWallet(e=0){const t=3;if(e>=t)Ns.log("Max retries reached. Aborting process.");else{Ns.log("Initiating process to empty burner wallet.");try{const t=Number(await this.getWeb3.eth.getBalance(this.burnerAddress));Ns.log("Current balance",t);const n=Number(await this.getWeb3.eth.getGasPrice()),a=Number(await this.getWeb3.eth.estimateGas({from:this.burnerAddress,to:this.activeAccount,value:t})),s=n*a;if(t<=s)return void Ns.log("Insufficient balance to cover gas cost.");const i=t-s,r={from:this.burnerAddress,to:this.activeAccount,value:i,gasPrice:n,gasLimit:a},o=await this.getWeb3.eth.accounts.signTransaction(r,this.burnerPrivateKey);this.getWeb3.eth.sendSignedTransaction(o.rawTransaction).on("transactionHash",(e=>{Ns.log("Transaction Hash",e)})).on("receipt",(async e=>{const t=await this.getWeb3.eth.getBalance(this.burnerAddress);t>0&&await this.emptyBurnerWallet()})).on("error",(async t=>{Ns.log("An error occurred during transaction",t),Ns.log("Retrying..."),await this.emptyBurnerWallet(e+1)}))}catch(n){Ns.log("An exception occurred",n),Ns.log("Retrying..."),await this.emptyBurnerWallet(e+1)}}},async handleRegisterEvent(e,t){Ns.log("PlayerRegistered event:",e);const{gameId:n,playerAddress:a}=e;this.getGame(Number(n),0)||this.createGame(Number(n),a),this.getGame(Number(n)).states[0][a.toLowerCase()]=yt.Waiting;let s=localStorage.getItem(`blockTimestamp_${Number(e.blockNumber)}`);if(!s){let t=null;while(!t)t=await this.getWeb3Read2.eth.getBlock(Number(e.blockNumber)),Ns.log("setting time: block",t);s=t.timestamp.toString(),localStorage.setItem(`blockTimestamp_${Number(e.blockNumber)}`,s)}Ns.log("setting time:",s),this.getGame(Number(n)).time=parseInt(s,10)},async handleWaitingEvent(e){Ns.log("PlayerWaiting event:",e);const{gameId:t,bet:n,playerAddress:a,first:s}=e;this.getGame(Number(t,0))||this.createGame(Number(t));const i=this.getGame(Number(t)).states[0][a.toLowerCase()]==yt.Matched;i||(this.getGame(Number(t)).states[0][a.toLowerCase()]=yt.Waiting,s?this.getGame(Number(t)).playerA=a.toLowerCase():this.getGame(Number(t)).playerB=a.toLowerCase());let r=null,o=localStorage.getItem(`blockTimestamp_${Number(e.blockNumber)}`);if(!o){while(!r)r=await this.getWeb3Read2.eth.getBlock(Number(e.blockNumber));o=r.timestamp.toString(),localStorage.setItem(`blockTimestamp_${Number(e.blockNumber)}`,o)}Ns.log("setting time:",o),this.getGame(Number(t)).time=o,this.getGame(Number(t)).bet=1e-18*Number(n)},async handlePlayersMatchedEvent(e,t=!1){Ns.log("PlayersMatched event:",e);const{gameId:n,playerA:a,playerB:s}=e;this.getGame(Number(n))||this.createGame(Number(n),a),this.getGame(Number(n)).playerA=a.toLowerCase(),this.getGame(Number(n)).playerB=s.toLowerCase(),this.getGame(Number(n)).states[0][a.toLowerCase()]=yt.Matched,this.getGame(Number(n)).states[0][s.toLowerCase()]=yt.Matched;let i=null;while(!i)i=await this.getWeb3Read2.eth.getBlock(Number(e.blockNumber));const r=i.timestamp;this.getGame(Number(n)).timeOfMatched=Number(r),Ns.log("setting time of matched",r),Ns.log("setting game to matched"),!t||a.toLowerCase()!=this.activeAccount.toLowerCase()&&s.toLowerCase()!=this.activeAccount.toLowerCase()||Ft.dispatch("sendNotification",{title:"You match has begun",body:`You have begun a match with ${a.toLowerCase()==this.activeAccount.toLowerCase()?s:a} for ${this.getGame(Number(n)).bet} ETH`})},handleMoveSentEvent(e,t=!1){Ns.log("MoveSent event:",e);const{gameId:n,round:a,playerAddress:s}=e;if(this.getGame(Number(n))||this.createGame(Number(n),s),this.getGame(Number(n)).moves[Number(a)]||(this.getGame(Number(n)).moves[Number(a)]={}),this.getGame(Number(n)).states[Number(a)]||(this.getGame(Number(n)).states[Number(a)]={}),this.getGame(Number(n)).states[Number(a)][s.toLowerCase()]=yt.Sent,this.isInGame&&t&&s.toLowerCase()!=this.activeAccount.toLowerCase()&&!this.isMoveSent){const e=this.truncateAddress(this.opponentAddress);Ft.dispatch("sendNotification",{title:`Your opponent ${e} has sent their move.`,body:"Get back in the game to send yours."})}},handleRevealedEvent(e){Ns.log("MoveRevealed event:",e);const{gameId:t,round:n,playerAddress:a,move:s}=e;this.getGame(Number(t))||this.createGame(Number(t),a),this.getGame(Number(t)).moves[Number(n)]||(this.getGame(Number(t)).moves[Number(n)]={}),this.getGame(Number(t)).states[Number(n)]||(this.getGame(Number(t)).states[Number(n)]={}),this.games[Number(t)].moves[Number(n)][a.toLowerCase()]=Number(s),this.games[Number(t)].states[Number(n)][a.toLowerCase()]=yt.Revealed},async handleNewRoundEvent(e){Ns.log("NewRound event:",e);const{gameId:t,round:n,pointsA:a,pointsB:s}=e;this.games[Number(t)]||this.createGame(Number(t)),this.games[Number(t)].states[Number(n)]||(this.games[Number(t)].states[Number(n)]={}),this.games[Number(t)].moves[Number(n)]||(this.games[Number(t)].moves[Number(n)]={}),this.games[Number(t)].round=Number(n),this.games[Number(t)].points[this.games[Number(t)].playerA.toLowerCase()]=Number(a),this.games[Number(t)].points[this.games[Number(t)].playerB.toLowerCase()]=Number(s),Ns.log("setting new points for gameId",t,a,s);let i=null,r=localStorage.getItem(`blockTimestamp_${Number(e.blockNumber)}`);if(!r){while(!i)i=await this.getWeb3Read2.eth.getBlock(Number(e.blockNumber));r=i.timestamp.toString(),localStorage.setItem(`blockTimestamp_${Number(e.blockNumber)}`,r)}this.getGame(Number(t)).timeOfMatched=Number(r),Ns.log("setting time of matched",r)},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Ns.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(Ns.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s},wasCancelled(e){const t=e.outcome;return t==ct.Cancelled},isLeaver(e,t){var n;const a=e.outcome;return a===ct.Left&&(null===e||void 0===e||null===(n=e.leaver)||void 0===n?void 0:n.toLowerCase())===t.toLowerCase()},getWinnings(e){return(e-2*e*At).toFixed(4)},getBaseWinnings(e){return e},getApplicationFee(e){const t=e.bet;return 2*t*At},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Ns.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(Ns.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s},getBasePlayerWinnings(e,t){var n;const a=e.bet,s=this.getBaseWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Ns.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(Ns.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s},getPlayerProtocolFees(e,t){var n;e.bet;const a=this.getApplicationFee(e),s=e.outcome,i=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return s==ct.Cancelled?(Ns.log("cancelled"),0):s==ct.PlayerALeft&&i?0:s==ct.PlayerBLeft&&i?a:s!=ct.PlayerALeft||i?s!=ct.PlayerBLeft||i?s==ct.Draw?0:s==ct.PlayerA&&i?a:s==ct.PlayerB&&i?0:s!=ct.PlayerA||i?s!=ct.PlayerB||i?s==ct.PlayerATimeout&&i?0:s==ct.PlayerBTimeout&&i?a:s!=ct.PlayerATimeout||i?s!=ct.PlayerBTimeout||i?s==ct.BothTimeout?0:void 0:0:a:a:0:0:a},calcWinnerFromAmount(e,t){const n=this.getPlayerWinnings(e,t);return Ns.log("getting winnings for player",n,t),n>0},handleOutcomeEvent(e,t=!1){var n,a,s;Ns.log("GameOutcome event:",e);const{gameId:i,outcome:r}=e;if(!0===t&&"boolean"===typeof t&&((null===(n=this.games[Number(i)])||void 0===n||null===(n=n.playerA)||void 0===n?void 0:n.toLowerCase())==(null===(a=this.activeAccount)||void 0===a?void 0:a.toLowerCase())||(null===(s=this.games[Number(i)])||void 0===s||null===(s=s.playerB)||void 0===s?void 0:s.toLowerCase())==this.activeAccount.toLowerCase())){Ns.log("setting modal"),this.winnerPoints=this.yourCurrentPoints>this.opponentCurrentPoints?this.yourCurrentPoints:this.opponentCurrentPoints,this.loserPoints=this.yourCurrentPoints<this.opponentCurrentPoints?this.yourCurrentPoints:this.opponentCurrentPoints;const e=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase();this.showModal=!0,this.leaverModal=r==ct.PlayerALeft?this.games[Number(i)].playerA:r==ct.PlayerBLeft?this.games[Number(i)].playerB:null,this.winModal=e?r==ct.PlayerA:r==ct.PlayerB,this.timeoutModal=r==ct.PlayerATimeout?this.games[Number(i)].playerA:r==ct.PlayerBTimeout?this.games[Number(i)].playerB:r==ct.BothTimeout?"both":null,Ns.log("Modal Stats",this.winnerPoints,this.loserPoints,this.winModal,this.leaverModal),Ns.log("Modal Stats, Outcomes.PlayerALeft and Outcomes.PlayerBLeft",ct.PlayerALeft,ct.PlayerBLeft),Ns.log("Modal States outcome",r);const t=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?this.truncateAddress(this.games[Number(i)].playerB):this.truncateAddress(this.games[Number(i)].playerA),n=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?r==ct.PlayerA:r==ct.PlayerB,a=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?r==ct.PlayerB:r==ct.PlayerA,s=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?r==ct.PlayerALeft:r==ct.PlayerBLeft,o=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?r==ct.PlayerBLeft:r==ct.PlayerALeft,l=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?r==ct.PlayerATimeout:r==ct.PlayerBTimeout,d=this.games[Number(i)].playerA.toLowerCase()==this.activeAccount.toLowerCase()?r==ct.PlayerBTimeout:r==ct.PlayerATimeout,u=r==ct.BothTimeout,p=this.games[Number(i)].bet.toString()+" ETH",c=n?`You won ${p} from ${t}`:a?`You lost ${p} to ${t}`:s?`You left the game with ${t} and lost ${p}`:o?`${t} left the game and you won ${p}`:l?`You timed out against ${t} and lost ${p}`:d?`${t} timed out and you won ${p}`:u?`You both timed out and nobody won ${p}`:null,y=n?"You won!":a?"You lost!":s?"You left the game":o?`${t} left the game`:l?"You timed out":d?`${t} timed out`:u?"You both timed out":null;Ft.dispatch("sendNotification",{title:y,body:c}),this.emptyBurnerWallet()}this.games[Number(i)]||this.createGame(Number(i)),this.games[Number(i)].outcome=r,this.games[Number(i)].playerA.toLowerCase()!=this.activeAccount.toLowerCase()&&this.games[Number(i)].playerB.toLowerCase()!=this.activeAccount.toLowerCase()||this.createGame("0"),this.setPlayerData(Number(i))},setPlayerData(e){if(this.gameIdsFinished[e.toString().toLowerCase()])return;const t=this.games[Number(e)].playerA.toLowerCase(),n=this.games[Number(e)].playerB.toLowerCase(),a=this.getBasePlayerWinnings(this.games[Number(e)],t),s=this.getBasePlayerWinnings(this.games[Number(e)],n),i=this.getPlayerProtocolFees(this.games[Number(e)],t),r=this.getPlayerProtocolFees(this.games[Number(e)],n),o=_t(this.games[Number(e)].bet,a),l=_t(this.games[Number(e)].bet,s);Ft.commit("addProfileEarnings",{address:t,earnings:a}),Ft.commit("addProfileEarnings",{address:n,earnings:s}),Ft.commit("addProfileFeesGenerated",{address:t,fees:i}),Ft.commit("addProfileFeesGenerated",{address:n,fees:r}),Ft.commit("addProfilePoints",{address:t,points:o}),Ft.commit("addProfilePoints",{address:n,points:l}),Ft.commit("addGamesPlayed",{address:t}),Ft.commit("addGamesPlayed",{address:n}),this.gameIdsFinished[e.toString().toLowerCase()]=!0},handlePlayerCancelledEvent(e,t=!1){Ns.log("PlayerCancelled event:",e);const{gameId:n,playerAddress:a}=e;this.games[Number(n)]||this.createGame(Number(n),a),this.games[Number(n)].outcome=ct.Cancelled,this.games[Number(n)].playerA.toLowerCase()!=this.activeAccount.toLowerCase()&&this.games[Number(n)].playerB.toLowerCase()!=this.activeAccount.toLowerCase()||this.createGame("0"),!0===t&&"boolean"===typeof t&&a.toLowerCase()==this.activeAccount.toLowerCase()&&this.emptyBurnerWallet()},handlePlayerLeftEvent(e,t=!1){Ns.log("Handling Player Left event:",e);const{gameId:n,playerAddress:a}=e;this.games[Number(n)]||this.createGame(Number(n),a),this.getGame(Number(n)).leaver=a.toLowerCase(),!0===t&&"boolean"===typeof t&&a.toLowerCase()==this.activeAccount.toLowerCase()&&this.emptyBurnerWallet()},async subscribeToEvents(){const e=await this.getReadContract(),t=await this.getAccount();Ns.log("Subscribing to events..."),Ns.log("contract:",e);const n=["PlayerRegistered","PlayerWaiting","PlayersMatched","MoveCommitted","MoveRevealed","NewRound","GameOutcome","PlayerCancelled","PlayerLeft"],a={PlayerRegistered:this.handleRegisterEvent,PlayerWaiting:this.handleWaitingEvent,PlayersMatched:this.handlePlayersMatchedEvent,MoveCommitted:this.handleMoveSentEvent,MoveRevealed:this.handleRevealedEvent,NewRound:this.handleNewRoundEvent,GameOutcome:this.handleOutcomeEvent,PlayerCancelled:this.handlePlayerCancelledEvent,PlayerLeft:this.handlePlayerLeftEvent},s=new Set;for(const i of n)Nt.watchContractEvent({address:Fs,abi:Rs,eventName:i,onLogs:e=>{e.forEach((e=>{const n={...e,...e.args};Ns.log("New event detected:",n);const r=`${n.transactionHash}-${i}-${n.logIndex}`;Ns.log(`New NEW ${i} event detected:`,n),s.has(r)||("GameOutcome"!=i&&"PlayerCancelled"!=i&&"PlayerLeft"!=i&&"PlayersMatched"!=i&&"MoveCommitted"!=i||a[i].call(this,n,!0),"NewRound"===i?setTimeout((()=>{a[i].call(this,n,t)}),1e3):a[i].call(this,n,t),s.add(r),this.$store.dispatch("addEvent",{eventName:i,event}))}))}})},async setPassword(){const e=await Ws(),t="0x"+(0,da.sha256)(e);localStorage.setItem("passwordHash",t),localStorage.setItem("password",e)},getPassword(){const e=localStorage.getItem("password");return e},getPasswordHash(){const e=localStorage.getItem("passwordHash");return e},async getActiveGameId(){this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs));try{const e=await this.getWeb3.eth.getAccounts(),t=await this.contractInstance.methods.playerGame(e[0]).call({from:e[0]});return t}catch(e){}},copyAffiliateLink(){const e=new URL(window.location.href);e.searchParams.set("ref",this.getActiveAccount),navigator.clipboard.writeText(e.href),alert("Copied to clipboard!")},copyTextToClipboard(e){var t=document.createElement("textarea");t.style.position="fixed",t.style.top=0,t.style.left=0,t.style.width="2em",t.style.height="2em",t.style.padding=0,t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent",t.value=e,document.body.appendChild(t),t.focus(),t.select();try{var n=document.execCommand("copy"),a=n?"successful":"unsuccessful";Ns.log("Copying text command was "+a)}catch(s){Ns.log("Oops, unable to copy")}document.body.removeChild(t)},copyPasswordGameLink(){const e=this.getPassword(),t=this.selectedBet,n=window.location.protocol+"//"+window.location.host+window.location.pathname,a="?game="+encodeURIComponent(e)+"&bet="+encodeURIComponent(t),s=n+a;this.copyTextToClipboard(s)},async registerAsConsumer(){if(Ns.log("Registering as consumer..."),alert("Registering as consumer..."),this.affiliateContract)try{const e=await this.getWeb3.eth.getAccounts(),t=this.getWeb3.utils.toWei("0.1","gwei"),n=this.getWeb3.estimateGas({from:e[0],to:this.affiliateContract.options.address,data:this.affiliateContract.methods.registerAsConsumer().encodeABI()}),a=localStorage.getItem("affiliateCode");Ns.log("affiliateAddress:",a);const s=await this.affiliateContract.methods.registerAsConsumer(a).send({from:this.activeAccount,gasPrice:t,gasLimit:n});Ns.log("registerAsConsumer result:",s)}catch(e){Ns.error("Error registering as consumer:",e)}},async userMustHave(e,t){Ns.log("checking is user has");const n=await this.getWeb3.eth.getBalance(this.activeAccount);return!(parseInt(n)<parseInt(e))||(await this.setDoesNotHaveFunds(e,t),!1)},async setDoesNotHaveFunds(e,t){this.minimumAmount=1e-18*e,this.onAddFunds=(...e)=>{this.showAddFundsModal=!1,t(...e)},this.showAddFundsModal=!0},async registerGame(){if(this.isJoiningPasswordMatch)await this.joinPasswordMatch(this.$store.state.joiningPassword,this.$store.state.joiningBetAmount);else if(this.playWithFriend)await this.createPasswordGame();else{if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs)),!this.selectedBet)return Ns.log("Please select a bet amount."),void alert("Please select a bet amount.");this.shouldSetAffiliateCode||Ns.log("Not registering as consumer...");try{var e,t,n;Ns.log("Registering game...",this.currentGameId),this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"]||this.createGame(null!==(t=this.currentGameId)&&void 0!==t?t:"0"),this.games[null!==(n=this.currentGameId)&&void 0!==n?n:"0"].states[0][this.getActiveAccount]=yt.Registering;const a=await this.getWeb3.eth.getAccounts(),s=this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether");if(!await this.userMustHave(s,(()=>{})))throw new Error("User does not have enough funds");const i=Number(await this.getWeb3.eth.getGasPrice()),r=5*Number(await this.contractInstance.methods.register().estimateGas({from:a[0],to:this.contractInstance.options.address,value:this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether")})),o=i*r,l=this.balance*10**18;if(l<o)return void this.setDoesNotHaveFunds(o,this.registerGame);if(this.isBurner){this.burnerNonce=await Nt.getTransactionCount({address:this.burnerAddress});const e=this.getWeb3.utils.toWei((this.burnerTopUpAmount+parseFloat(this.selectedBet)).toString(),"ether");Ns.log("totalValue:",e),Ns.log("this.provider",this.provider);await this.contractInstance.methods.registerWithBurner(this.burnerAddress,s).send({from:a[0],value:e,gasPrice:i,gasLimit:r});this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending")}else{await this.contractInstance.methods.register().send({from:a[0],value:s,gasPrice:i,gasLimit:r})}localStorage.setItem("lastBetAmount",this.selectedBet)}catch(r){var a,s,i;this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[0][this.getActiveAccount]=yt.Initial,Ns.error("Error registering game:",r)}}},async createPasswordGame(){if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs)),this.selectedBet)try{var e,t,n;Ns.log("Creating password game...",this.currentGameId),this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"]||this.createGame(null!==(t=this.currentGameId)&&void 0!==t?t:"0"),this.games[null!==(n=this.currentGameId)&&void 0!==n?n:"0"].states[0][this.getActiveAccount]=yt.Registering;const a=this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether");if(!await this.userMustHave(a,(()=>{})))throw new Error("User does not have enough funds");await this.setPassword();const s=this.getPasswordHash(),i=await this.getWeb3.eth.getAccounts(),r=Number(await this.getWeb3.eth.getGasPrice()),o=5*Number(await this.contractInstance.methods.createPasswordMatch(s).estimateGas({from:i[0],to:this.contractInstance.options.address,value:a}));Ns.log("gasLimit:",o);const l=await this.contractInstance.methods.playerGame(i[0]).call({from:i[0]}),d=r*o,u=this.balance*10**18;if(u<d)return Ns.log("is setting does not have funds"),void this.setDoesNotHaveFunds(d,this.createPasswordGame);if(Ns.log("gameId:",l),this.isBurner){const e=this.getWeb3.utils.toWei((this.burnerTopUpAmount+parseFloat(this.selectedBet)).toString(),"ether");await this.burnerContractInstance.methods.createPasswordMatchWithBurner(this.burnerAddress,a,s).send({from:i[0],value:e,gasPrice:r,gasLimit:o});this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending")}else{await this.contractInstance.methods.createPasswordMatch(s).send({from:i[0],value:a,gasPrice:r,gasLimit:o})}localStorage.setItem("lastBetAmount",this.selectedBet)}catch(r){var a,s,i;this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[0][this.getActiveAccount]=yt.Initial,Ns.error("Error registering game:",r)}else alert("Please select a bet amount.")},async joinPasswordMatch(e,t,n=!1){if(n)return this.$store.dispatch("setIsJoiningPasswordMatch",!1),void this.clearQueryString();if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs)),this.selectedBet=t,!this.selectedBet)return Ns.log("Please select a bet amount."),void alert("Please select a bet amount.");this.shouldSetAffiliateCode?await this.registerAsConsumer():Ns.log("Not registering as consumer...");try{var a,s,i;Ns.log("Joining password match...",this.currentGameId),this.$store.dispatch("setIsJoiningPasswordMatch",!0),this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[0][this.getActiveAccount]=yt.Registering;const t=await this.getWeb3.eth.getAccounts(),n=this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether"),r=this.getWeb3.utils.toWei((this.burnerTopUpAmount+parseFloat(this.selectedBet)).toString(),"ether");if(!await this.userMustHave(r,(()=>{})))return;const o=Number(await this.getWeb3.eth.getGasPrice()),l=Number(this.isBurner?Number(await this.burnerContractInstance.methods.joinPasswordMatchWithBurner(this.burnerAddress,n,e).estimateGas({from:t[0],to:this.contractInstance.options.address,value:r})):Number(await this.contractInstance.methods.joinPasswordMatch(e).estimateGas({from:t[0],to:this.contractInstance.options.address,value:n})));this.balance;if(this.isBurner){await this.burnerContractInstance.methods.joinPasswordMatchWithBurner(this.burnerAddress,n,e).send({from:t[0],value:r,gasPrice:o,gasLimit:l});this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending")}else{await this.contractInstance.methods.joinPasswordMatch(e).send({from:t[0],value:n,gasPrice:o,gasLimit:l})}localStorage.setItem("lastBetAmount",this.selectedBet),this.$store.dispatch("setIsJoiningPasswordMatch",!1),this.clearQueryString()}catch(d){var r,o,l;this.games[null!==(r=this.currentGameId)&&void 0!==r?r:"0"]||this.createGame(null!==(o=this.currentGameId)&&void 0!==o?o:"0"),this.games[null!==(l=this.currentGameId)&&void 0!==l?l:"0"].states[0][this.getActiveAccount]=yt.Initial,Ns.error("Error registering game:",d),this.$store.dispatch("setIsJoiningPasswordMatch",!1),this.clearQueryString()}},async sendMove(e=0){const t=3;if(e>=t)return void Ns.log("Max retries reached. Aborting sendMove.");const n=this.gameState;if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs)),this.selectedBet)try{var a,s,i;Ns.log("Sending game...",this.currentGameId),this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[this.currentRound][this.getActiveAccount]=yt.Sending,this.randomString=Ws();const e="0x"+(0,da.sha256)(this.selectedMove+this.randomString);Ns.log("clearMove:",this.selectedMove+this.randomString);const t=await this.getWeb3.eth.getAccounts(),n=this.getWeb3.utils.toWei("0.3","gwei"),r=3e6;if(this.isBurner){this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending"),this.burnerNonce=await Nt.getTransactionCount({address:this.burnerAddress});await this.burnerContractInstance.methods.commit(parseInt(this.currentGameId),e).send({from:this.burnerAddress,gasPrice:n,gasLimit:r,nonce:this.burnerNonce++})}else{const a=await this.contractInstance.methods.commit(parseInt(this.currentGameId),e).send({from:t[0],gasPrice:n,gasLimit:r});Ns.log("Game registered:",a)}localStorage.setItem("lastSentMove",this.selectedMove),localStorage.setItem("lastRandomString",this.randomString)}catch(d){var r,o,l;this.games[null!==(r=this.currentGameId)&&void 0!==r?r:"0"]||this.createGame(null!==(o=this.currentGameId)&&void 0!==o?o:"0"),this.games[null!==(l=this.currentGameId)&&void 0!==l?l:"0"].states[this.getActiveAccount]=n,Ns.error("Error sending move:",d),await this.sendMove(e+1),this.selectedMove="",Ns.error("Error registering move:",d)}else alert("Please select a bet amount.")},async cancelGame(){this.gameState;this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs));try{Ns.log("Cancelling game...",this.currentGameId);const e=await this.getWeb3.eth.getAccounts(),t=Number(await this.getWeb3.eth.getGasPrice()),n=Number(await this.contractInstance.methods.cancel(parseInt(this.currentGameId)).estimateGas({from:e[0],to:this.contractInstance.options.address})),a=t*n,s=this.balance*10**18;if(s<a)return void this.setDoesNotHaveFunds(a,this.cancelGame);const i=await this.contractInstance.methods.cancel(parseInt(this.currentGameId)).send({from:e[0],gasPrice:t,gasLimit:n});Ns.log("Game cancelled:",i)}catch(e){Ns.error("Error cancelling game:",e)}},async leaveGame(){this.gameState;this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs));try{Ns.log("Leaving game...",this.currentGameId);const e=await this.getWeb3.eth.getAccounts(),t=Number(await this.getWeb3.eth.getGasPrice()),n=10*Number(this.isBurner?await this.burnerContractInstance.methods.leave(parseInt(this.currentGameId)).estimateGas({from:e[0],to:this.contractInstance.options.address}):await this.contractInstance.methods.leave(parseInt(this.currentGameId)).estimateGas({from:e[0],to:this.contractInstance.options.address}));if(this.isBurner){this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending"),this.burnerNonce=await Nt.getTransactionCount({address:this.burnerAddress});await this.burnerContractInstance.methods.leave(parseInt(this.currentGameId)).send({from:this.burnerAddress,gasPrice:t,gasLimit:n,nonce:this.burnerNonce++})}else{const a=await this.contractInstance.methods.leave(parseInt(this.currentGameId)).send({from:e[0],gasPrice:t,gasLimit:n});Ns.log("Game left:",a)}}catch(e){Ns.error("Error cancelling game:",e)}},async revealMove(e=0){const t=3;if(e>=t)return void Ns.log("Max retries reached. Aborting revealMove.");this.gameState;this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs));try{this.games[this.currentGameId]||this.createGame(this.currentGameId),this.games[this.currentGameId].states[this.getActiveAccount]=yt.Revealing;const e=await this.getWeb3.eth.getAccounts(),t=`${this.selectedMove}${this.randomString}`,n=this.getWeb3.utils.toWei("0.3","gwei"),a=3e6;if(this.isBurner){this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending"),this.burnerNonce=await Nt.getTransactionCount({address:this.burnerAddress});await this.burnerContractInstance.methods.reveal(parseInt(this.currentGameId),t).send({from:this.burnerAddress,gasPrice:n,gasLimit:a,nonce:this.burnerNonce++})}else{await this.getWeb3Read.eth.getTransactionCount(e[0],"pending"),await this.contractInstance.methods.reveal(parseInt(this.currentGameId),t).send({from:e[0],gasPrice:n,gasLimit:a})}Ns.log("Current gameState:",this.games[this.currentGameId].states[this.getActiveAccount])}catch(n){this.games[this.currentGameId]||this.createGame(this.currentGameId),this.games[this.currentGameId].states[this.getActiveAccount]=yt.Sent,Ns.error("Error revealing move:",n),Ns.log("Retrying revealMove..."),await this.revealMove(e+1)}},async getGameOutcome(){this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Rs,Fs));try{const e=await this.getWeb3.eth.getAccounts(),t=this.getWeb3.utils.toWei("0.1","gwei"),n=3e6,a=await this.contractInstance.methods.getOutcome(this.currentGameId).call({from:e[0],gasPrice:t,gasLimit:n});Ns.log("Game outcome:",a)}catch(e){Ns.error("Error getting game outcome:",e)}},async sleep(e){return new Promise((t=>setTimeout(t,e)))},async fetchPlayerRegisteredEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayerRegistered",{fromBlock:s,toBlock:i});this.playerRegisteredEvents.push(...e),Ns.log("playerRegisteredEvents:",this.playerRegisteredEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayerWaitingEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayerWaiting",{fromBlock:s,toBlock:i});this.playerWaitingEvents.push(...e),Ns.log("playerWaitingEvents:",this.playerWaitingEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayersMatchedEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayersMatched",{fromBlock:s,toBlock:i});this.playersMatchedEvents.push(...e),Ns.log("playersMatchedEvents:",this.playersMatchedEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayersMoveCommittedEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("MoveCommitted",{fromBlock:s,toBlock:i});this.moveCommittedEvents.push(...e),Ns.log("moveCommittedEvents:",this.moveCommittedEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchMoveRevealedEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("MoveRevealed",{fromBlock:s,toBlock:i});this.moveRevealedEvents.push(...e),Ns.log("moveRevealedEvents:",this.moveRevealedEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchNewRoundEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("NewRound",{fromBlock:s,toBlock:i});this.newRoundEvents.push(...e),Ns.log("newRoundEvents:",this.newRoundEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchGameOutcomeEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("GameOutcome",{fromBlock:s,toBlock:i});this.gameOutcomeEvents.push(...e),Ns.log("gameOutcomeEvents:",this.gameOutcomeEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayerCancelledEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayerCancelled",{fromBlock:s,toBlock:i});this.playerCancelledEvents.push(...e),Ns.log("playerCancelledEvents:",this.playerCancelledEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayerEvents(e,t,n){const a=1e4,s=await this.getContract();let i=e,r=Math.min(i+a,t);while(i<=t){const e=await s.getPastEvents(n,{fromBlock:i,toBlock:r});this.playerCancelledEvents.push(...e),Ns.log(n+"events",this.playerCancelledEvents.map((e=>e.returnValues))),i=r+1,r=Math.min(i+a,t)}},addToHandledEvents(e,t){const n=`${e.transactionHash}-${t}-${e.logIndex}`;this.handledEventIds.add(n)},alreadyHandled(e,t){const n=`${e.transactionHash}-${t}-${e.logIndex}`;return this.handledEventIds.has(n)},async processEvents(){const e=await this.getAccount();for(const t of this.playerRegisteredEvents)t&&(this.handleRegisterEvent(t,e),this.addToHandledEvents(t,"PlayerRegistered"));for(const t of this.playerWaitingEvents)t&&(this.handleWaitingEvent(t),this.addToHandledEvents(t,"PlayerWaiting"));for(const t of this.playerCancelledEvents)t&&(this.handlePlayerCancelledEvent(t),this.addToHandledEvents(t,"PlayerCancelled"));for(const t of this.playersMatchedEvents)t&&(this.handlePlayersMatchedEvent(t),this.addToHandledEvents(t,"PlayersMatched"));for(const t of this.moveCommittedEvents)t&&(this.handleMoveSentEvent(t),this.addToHandledEvents(t,"MoveCommitted"));for(const t of this.moveRevealedEvents)t&&(this.handleRevealedEvent(t),this.addToHandledEvents(t,"MoveRevealed"));for(const t of this.newRoundEvents)t&&(this.handleNewRoundEvent(t),this.addToHandledEvents(t,"NewRound"));for(const t of this.gameOutcomeEvents)t&&(this.handleOutcomeEvent(t),this.addToHandledEvents(t,"GameOutcome"))},async checkAffililiateCode(){const e=new URLSearchParams(window.location.search),t=e.get("ref");t&&localStorage.setItem("affiliateCode",t),this.affiliateOfUser=await this.affiliateContract.methods.getAffiliateOfConsumer(this.activeAccount).call(),Ns.log("affiliate of user",this.affiliateOfUser)},clearQueryString(){var e=new URL(window.location.toString());e.search="",window.history.replaceState({},document.title,e.toString()),this.$store.dispatch("setJoiningPassword",""),this.$store.dispatch("setIsJoiningPasswordMatch",!1)},async checkJoiningPassword(){const e=new URLSearchParams(window.location.search),t=e.get("game"),n=e.get("bet");t&&!this.isInGame&&!this.isJoiningGame&&n&&(this.$store.dispatch("setJoiningPassword",t),this.$store.commit("joiningBetAmount",n),Ns.log("joining match with bet amount",n))}}},Hs=(0,In.Z)(Gs,[["render",Xe]]),Ds=Hs;function zs(e,t,n,a,r,o){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Uk)(" Staking screen "),(0,s._)("div",null,[(0,s._)("div",null,"Hands token balance : "+(0,i.zw)(r.handsTokenBalance),1),(0,s._)("div",null,"Your staked amount : "+(0,i.zw)(r.handsStakedBalance),1),(0,s._)("div",null,"Share of total hands staked : "+(0,i.zw)(r.handsStakedBalance/r.totalHandsStakedBalance*100)+"%",1),(0,s._)("div",null,"Your claimable ETH for staking : "+(0,i.zw)(r.claimableEthForStaking),1),(0,s._)("div",null,"Protocol fee revenue : "+(0,i.zw)(r.protocolFeeRevenue),1),(0,s._)("div",null,"Protocol affiliate revenue : "+(0,i.zw)(e.protocolAffiliateRevenue),1),(0,s._)("div",null,"Total hands staked balance : "+(0,i.zw)(r.totalHandsStakedBalance),1),(0,s._)("div",null,[(0,s.Uk)("Your onboarded addresses : "),((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(r.onboardedAddresses,(e=>((0,s.wg)(),(0,s.iD)("div",{key:e},(0,i.zw)(e),1)))),128))]),(0,s._)("div",null,"Claimable Affiliate rewards : "+(0,i.zw)(r.claimableEthForAffiliate),1),(0,s._)("div",null,"Your affiliate link : "+(0,i.zw)(r.affiliateLink),1)]),(0,s._)("button",{onClick:t[0]||(t[0]=(...e)=>o.stake&&o.stake(...e))},"Stake 10 HANDS"),(0,s._)("button",{onClick:t[1]||(t[1]=(...e)=>o.unstake&&o.unstake(...e))},"Unstake 10 HANDS"),(0,s._)("button",{onClick:t[2]||(t[2]=(...e)=>o.claim&&o.claim(...e))},"Claim Staking Rewards"),(0,s._)("button",{onClick:t[3]||(t[3]=(...e)=>o.claimAffiliateRewards&&o.claimAffiliateRewards(...e))},"Claim Affiliate Rewards")])}var $s=n(15941);const Us={components:{},props:{provider:{type:String,default:null}},data(){return{stakingContract:null,handsTokenContract:null,affiliateContract:null,activeAccount:null,handsTokenBalance:0,handsStakedBalance:0,totalHandsStakedBalance:0,claimableEthForStaking:0,claimableEthForAffiliate:0,affiliateLink:null,onboardedAddresses:[],protocolFeeRevenue:0,totalStakedPerBlock:null}},computed:{getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new st.ZPm(this.provider)}},mounted(){$s.log("provider",this.provider),$s.log("mainContracts",nt),this.init()},watch:{},methods:{async init(){await this.setAccount(),await this.setContracts(),this.setHandsTokenBalance(),this.setHandsStakedBalance(),this.setTotalHandsStakedAmount(),this.setClaimableEthForStaking(),this.setClaimableEthForAffiliate(),this.setProtocolFeeRevenue()},async setAccount(){const e=await this.getWeb3.eth.getAccounts();$s.log("accounts",e),this.activeAccount=e[0]},async setContracts(){this.stakingContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),this.handsTokenContract=new this.getWeb3.eth.Contract(nt.deployedAbis.HandsToken,nt.deployedContracts.HandsToken),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async setHandsTokenBalance(){if(!this.handsTokenContract)return 0;const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18,setInterval((async()=>{const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18}),5e3)},async setHandsStakedBalance(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18}),5e3)},async setTotalHandsStakedAmount(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18}),5e3)},async setClaimableEthForStaking(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18}),5e3)},async setClaimableEthForAffiliate(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18,setInterval((async()=>{const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18}),5e3)},async setOnboardedAddresses(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e,setInterval((async()=>{const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e}),5e3)},async setProtocolFeeRevenue(){const e=await this.getWeb3.eth.getBalance(nt.deployedContracts.Bank);this.protocolFeeRevenue=e/10**18,setInterval((async()=>{const e=await this.getWeb3.eth.getBalance(nt.deployedContracts.Bank);this.protocolFeeRevenue=e/10**18}),5e3)},async stake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e7,n=(await this.handsTokenContract.methods.approve(nt.deployedContracts.Staking,this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}),await this.stakingContract.methods.stake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}));return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),$s.log("Staked",n),n}catch(e){return $s.error("Error staking. Message:",e.message),e.reason&&$s.error("Error reason:",e.reason),$s.error("Error stack trace:",e.stack),e}},async unstake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.unstake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),$s.log("Unstaked",n),n}catch(e){return $s.log("Error unstaking",e),e}},async claim(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),$s.log("Claimed",n),n}catch(e){return $s.log("Error claiming",e),e}},async claimAffiliateRewards(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),$s.log("Claimed",n),n}catch(e){return $s.log("Error claiming",e),e}},async registerAsConsumer(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.registerAsConsumer("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266").send({from:this.activeAccount,gasPrice:e,gasLimit:t});return $s.log("Registered as consumer",n),n}catch(e){throw $s.log("Error registering as a consumer:",e),e}},async getBlockNumber(){return await this.getWeb3.eth.getBlockNumber()}}},Js=(0,In.Z)(Us,[["render",zs]]),js=Js;var qs=n(75214),Ys=n(38118);const Zs=e=>((0,s.dD)("data-v-57eb7b6a"),e=e(),(0,s.Cn)(),e),Vs={key:0,class:"modal-container"},Ks={class:"modal"},Qs=Zs((()=>(0,s._)("h2",{style:{"margin-top":"60px"}},"Enable notifications ",-1))),Xs=Zs((()=>(0,s._)("p",{style:{"margin-top":"20px","margin-bottom":"20px"}},"Enable notifications within your browser to receive updates on in game activities.",-1))),ei={class:"modal-button-holder"};function ti(e,t,n,i,r,o){return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[o.show?((0,s.wg)(),(0,s.iD)("div",Vs,[(0,s._)("div",Ks,[Qs,Xs,(0,s._)("div",ei,[(0,s._)("button",{class:"button-dark",style:{width:"200px"},onClick:t[0]||(t[0]=(...e)=>o.enableNotifications&&o.enableNotifications(...e))}," Enable "),(0,s._)("button",{class:"button-light",onClick:t[1]||(t[1]=(...e)=>o.close&&o.close(...e))}," Close ")])])])):(0,s.kq)("",!0)])),_:1})}var ni=n(15941);const ai={methods:{enableNotifications(){this.$store.dispatch("requestNotificationPermission")},close(){this.$store.commit("setIsNotificationsEnabled",!0)}},computed:{show(){return!this.$store.state.isNotificationsEnabled&&this.$store.state.loggedin}},created(){ni.log(this.move)}},si=(0,In.Z)(ai,[["render",ti],["__scopeId","data-v-57eb7b6a"]]),ii=si;var ri=n(15941);const oi="0x1",li="0x118",di="0x10e",ui="0x7A69",pi="0x66eed",ci="0xa4ba",yi={[oi]:"https://rpc.ankr.com/eth",[li]:"https://testnet.era.zksync.dev",[di]:"http://localhost:3050/",[ui]:"http://localhost:8545",[pi]:"https://goerli-rollup.arbitrum.io/rpc",[ci]:"https://empty-proportionate-sunset.nova-mainnet.quiknode.pro/b34c277e5b6c584250278d2aad9b63452bb2188f/"},mi=ci,hi={name:"Home",props:{msg:String},components:{Game:Ds,Staking:js,ProfileIcon:xa,ModalEnableNotifications:ii},computed:(0,ot.rn)(["loggedin","loading","loginButtonStatus","connecting","activeAccount","balance","provider","isInGame","joiningPassword","isJoiningPasswordMatch","leaveText"]),methods:{async leaveGame(){await Ft.state.leaveGame()}},setup(){const e=async()=>{const e=new URLSearchParams(window.location.search),t=e.get("game"),n=e.get("bet");Ft.dispatch("setJoiningPassword",""),Ft.dispatch("setIsJoiningPasswordMatch",!1),t&&n&&(Ft.dispatch("setJoiningPassword",t),Ft.commit("setJoiningBetAmount",n),Ft.dispatch("setIsJoiningPasswordMatch",!0))},t=(0,Rt.iH)(!1),n="BNXP4nqNQ7AgD-kFeqeLjvBNM9RVVJJmhOgd1DVZw89SY7UzYGh_RwXK-YVIVFn8qFU6BbL3krmslFNJPpu71Bs",a=new qs.$L({clientId:n,web3AuthNetwork:"testnet",chainConfig:{chainNamespace:Ys.EN.EIP155,chainId:mi,rpcTarget:yi[mi],displayName:"Arbitrum Nova",blockExplorer:"https://nova.arbiscan.io/",ticker:"ETH",tickerName:"ETH"},uiConfig:{defaultLanguage:"en"}});ri.log("web3auth provider",a.provider),a.initModal(),Ft.commit("setWeb3Auth",a),(0,s.bv)((async()=>{try{ri.log("onMounted"),e(),Ft.dispatch("loginWeb3Auth"),ri.log("provider",Ft.state.provider)}catch(t){ri.log("error",t)}finally{Ft.dispatch("setLoading",!1)}}));const i=async()=>{if(!Ft.state.provider||!Ft.state.activeAccount)return;const e=new rt(Ft.state.provider),t=await e.getBalance();ri.log("balanceEth",t),Ft.dispatch("setBalance",t)},r=async()=>{await i(),setTimeout(r,1e3)};(0,s.YP)((()=>Ft.state.provider),(async(e,t)=>{e&&(await r(),await m()),null==e&&null!=t&&alert("You have disconnected from your wallet. Please reconnect to continue playing.")}),{immediate:!0});const o=async()=>{if(!a)return void f("web3auth not initialized yet");const e=await a.connect();Ft.dispatch("setLoading",!0),Ft.dispatch("setProvider",e),a.provider&&(Ft.dispatch("setProvider",a.provider),ri.log("setProviderTest",window.ethereum),ri.log("setProvider",a.provider),Ft.dispatch("setLoggedIn",!0)),"metamask"===a.connectedAdapterName&&Ft.dispatch("setIsMetamask",!0),f("Logged in Successfully!")},l=async()=>{if(!a)return void f("web3auth not initialized yet");const e=await a.authenticateUser();f(e)},d=async()=>{if(!a)return void f("web3auth not initialized yet");const e=await a.getUserInfo();f(e)},u=async()=>{a?(await a.logout(),Ft.dispatch("setProvider",null),Ft.dispatch("setLoggedIn",!1)):f("web3auth not initialized yet")},p=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e=new rt(Ft.state.provider),t=await e.getChainId();f(t)},c=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e={chainId:"0x5",displayName:"Goerli",chainNamespace:Ys.EN.EIP155,tickerName:"Goerli",ticker:"ETH",decimals:18,rpcTarget:"https://rpc.ankr.com/eth_goerli",blockExplorer:"https://goerli.etherscan.io"};await(null===a||void 0===a?void 0:a.addChain(e)),f("New Chain Added")},y=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");Ys.EN.EIP155;await(null===a||void 0===a?void 0:a.switchChain({chainId:"0x5"})),f("Chain Switched")},m=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e=new rt(Ft.state.provider),t=await e.getAccounts();Ft.dispatch("setActiveAccount",t[0]),f(t)},h=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e=new rt(Ft.state.provider),t=await e.getBalance();f(t)},g=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e=new rt(Ft.state.provider),t=await e.sendTransaction();f(t)},v=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e=new rt(Ft.state.provider),t=await e.signMessage();f(t)},b=async()=>{if(!Ft.state.provider)return void f("provider not initialized yet");const e=new rt(Ft.state.provider),t=await e.getPrivateKey();f(t)};function f(...e){const t=document.querySelector("#console>p");t&&(t.innerHTML=JSON.stringify(e||{},null,2))}return{staking:t,getWeb3:a,login:o,authenticateUser:l,logout:u,getUserInfo:d,getChainId:p,addChain:c,switchChain:y,getAccounts:m,getBalance:h,sendTransaction:g,signMessage:v,getPrivateKey:b}}},gi=(0,In.Z)(hi,[["render",y]]),vi=gi;var bi=n(22483);const fi=n.p+"img/background.ae916ffd.png",wi={key:0,class:""},Ti=(0,s._)("h1",{class:"title-header"}," Welcome to Handsy.io ",-1),ki=(0,s._)("p",{class:"title-paragraph"},[(0,s.Uk)(" Play rock paper scissors with your friends or with random opponents for "),(0,s._)("span",{class:"currency-symbol bolden"},"real money")],-1),Ci={key:1,src:fi,style:{width:"100%",position:"fixed",bottom:"0",left:"0","z-index":"-1"}},Ai={key:2};function Pi(e,t,n,a,r,o){const l=(0,s.up)("Game"),d=(0,s.up)("Staking");return(0,s.wg)(),(0,s.iD)(s.HY,null,[e.loggedin?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("header",wi,[Ti,ki,(0,s._)("button",{class:"button-dark",onClick:t[0]||(t[0]=(...e)=>o.login&&o.login(...e)),style:{cursor:"pointer",width:"270px",height:"86px"}},(0,i.zw)(e.loading?"Logging in...":"Sign Up")+" "+(0,i.zw)(e.joiningPassword?"to join match":""),1)])),e.loggedin?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("img",Ci)),e.loggedin?((0,s.wg)(),(0,s.iD)("div",Ai,[e.staking?(0,s.kq)("",!0):((0,s.wg)(),(0,s.j4)(l,{key:0,provider:e.provider,balance:e.balance},null,8,["provider","balance"])),e.staking?((0,s.wg)(),(0,s.j4)(d,{key:1,provider:e.provider},null,8,["provider"])):(0,s.kq)("",!0)])):(0,s.kq)("",!0)],64)}const Si={name:"Home",props:{msg:String},components:{Game:Ds,Staking:js},computed:(0,ot.rn)(["loggedin","loading","loginButtonStatus","connecting","activeAccount","balance","provider","isJoiningPasswordMatch","joiningPassword","staking"]),methods:{login(){Ft.dispatch("loginWeb3Auth")}}},Ei=(0,In.Z)(Si,[["render",Pi]]),Mi=Ei,Ii={class:"content profile-view"},_i=(0,s._)("p",null,"Player history",-1),Li={class:"profile-display"},Bi={style:{margin:"0","margin-top":"-50px",padding:"0","align-items":"end","margin-bottom":"-20px","font-size":"100px"}},Ni={class:"decimals"},xi=(0,s._)("span",{class:"currency-symbol decimals",style:{margin:"0","margin-left":"10px"}},"ETH",-1),Fi={style:{display:"flex",gap:"20px","align-items":"end"}},Ri={key:0,class:"earnings green"},Wi=(0,s._)("span",{class:"green",style:{"margin-left":"5px"}},"ETH",-1),Oi={key:1,class:"earnings red"},Gi=(0,s._)("span",{class:"red",style:{"margin-left":"5px"}},"ETH",-1),Hi={key:2,class:"green",style:{margin:"0"}},Di={key:3,class:"red",style:{margin:"0"}},zi={class:"blue"},$i={class:"points-button"};function Ui(e,t,n,a,r,o){var l,d,u,p,c,y,m,h,g,v;const b=(0,s.up)("router-link"),f=(0,s.up)("profile-icon"),w=(0,s.up)("profile-item"),T=(0,s.up)("profile-game-list");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",Ii,[(0,s.Wm)(b,{class:"back",to:"/"}),(0,s.Wm)(f,{class:"profile-big",address:o.address,isLarge:!0},null,8,["address"]),_i,(0,s._)("div",Li,[(0,s._)("h1",Bi,[(0,s.Uk)((0,i.zw)(null===(l=this.balance)||void 0===l?void 0:l.toString().split(".")[0])+" ",1),(0,s._)("span",Ni," ."+(0,i.zw)(null!==(d=null===(u=this.balance)||void 0===u||null===(u=u.toString().split(".")[1])||void 0===u?void 0:u.substring(0,4))&&void 0!==d?d:"00"),1),xi]),(0,s._)("div",Fi,[this.earnings>0?((0,s.wg)(),(0,s.iD)("div",Ri,[(0,s.Uk)(" +"+(0,i.zw)(null===(p=this.earnings)||void 0===p?void 0:p.toString().split(".")[0])+" ",1),(0,s._)("span",null," ."+(0,i.zw)(null!==(c=null===(y=this.earnings)||void 0===y||null===(y=y.toString().split(".")[1])||void 0===y?void 0:y.substring(0,4))&&void 0!==c?c:"00"),1),Wi])):this.earnings<=0?((0,s.wg)(),(0,s.iD)("div",Oi,[(0,s.Uk)((0,i.zw)(null===(m=this.earnings)||void 0===m?void 0:m.toString().split(".")[0])+" ",1),(0,s._)("span",null," ."+(0,i.zw)(null!==(h=null===(g=this.earnings)||void 0===g||null===(g=g.toString().split(".")[1])||void 0===g?void 0:g.substring(0,4))&&void 0!==h?h:"00"),1),Gi])):(0,s.kq)("",!0),this.earnings>0?((0,s.wg)(),(0,s.iD)("p",Hi,"earned")):this.earnings<=0?((0,s.wg)(),(0,s.iD)("p",Di,"earned")):(0,s.kq)("",!0)]),(0,s._)("div",zi," (-"+(0,i.zw)(null===(v=this.feesGenerated)||void 0===v?void 0:v.toFixed(4).toString())+" ETH) ",1)]),(0,s._)("div",$i,(0,i.zw)(o.points)+" points",1),(0,s.Wm)(w,{address:o.address},null,8,["address"])]),(0,s.Wm)(T,{games:o.games,address:o.address},null,8,["games","address"])],64)}const Ji=e=>((0,s.dD)("data-v-7a85bc24"),e=e(),(0,s.Cn)(),e),ji={class:"table-content"},qi={style:{}},Yi=Ji((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"prize-symbol-table"}),(0,s._)("p",null,"Time")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Result")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Score")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Earned")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Rounds")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"rounds-symbol-table"}),(0,s._)("p",null,"Opponent")])])])],-1))),Zi={class:"time"},Vi={class:"result"},Ki={key:0,class:"grey winnings"},Qi={key:1,class:"winnings red"},Xi={key:2,class:"winnings green"},er={key:3,class:"winnings green"},tr={key:4,class:"winnings red"},nr={class:"score"},ar={key:0,class:"winnings green"},sr={class:"blue"},ir={key:1,class:"winnings red"},rr={class:"rounds"},or={class:"player"};function lr(e,t,n,a,r,o){const l=(0,s.up)("profile-item");return(0,s.wg)(),(0,s.iD)("div",ji,[(0,s._)("table",qi,[Yi,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>{var n,a,r;return(0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",Zi,(0,i.zw)(o.timeString(e.time)),1),(0,s._)("td",Vi,[o.wasCancelled(e)?((0,s.wg)(),(0,s.iD)("div",Ki,"Cancelled")):o.isLeaver(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Qi,"Left")):o.isOpponentLeaver(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Xi,"Opponent Left")):o.isWinner(e,this.address)?((0,s.wg)(),(0,s.iD)("div",er,"Won")):o.isLoser(e,this.address)?((0,s.wg)(),(0,s.iD)("div",tr,"Lost")):(0,s.kq)("",!0)]),(0,s._)("td",nr,(0,i.zw)(e.points[e.playerA])+" : "+(0,i.zw)(null!==(n=e.points[e.playerB])&&void 0!==n?n:0),1),(0,s._)("td",{class:(0,i.C_)(["earned",{"earned-positive":o.isWinner(e,this.address),"earned-negative":o.isLoser(e,this.address)}])},[o.isWinner(e,this.address)?((0,s.wg)(),(0,s.iD)("div",ar,[(0,s.Uk)("+"+(0,i.zw)(e.bet)+" ETH ",1),(0,s._)("span",sr,"(-"+(0,i.zw)(o.getApplicationFee(e))+")",1)])):o.isLoser(e,this.address)?((0,s.wg)(),(0,s.iD)("div",ir,(0,i.zw)(o.getPlayerWinnings(e,this.address))+" ETH ",1)):(0,s.kq)("",!0)],2),(0,s._)("td",rr,(0,i.zw)(Object.keys(e.moves).length),1),(0,s._)("td",or,[(0,s.Wm)(l,{address:(null===(a=this.address)||void 0===a?void 0:a.toLowerCase())==(null===(r=e.playerA)||void 0===r?void 0:r.toLowerCase())?e.playerB:e.playerA},null,8,["address"])])])})),128))])])])}var dr=n(15941);const ur={components:{GameMove:Ut,ProfileItem:Ln},data(){return{selectedTab:"Completed"}},props:{address:{type:String},games:{type:Array}},computed:{selectedData(){return dr.log("profile game list",this.games),this.games}},methods:{timeString(e){const t=this.$store.state.currentTime;return Mt(e,t)},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))},getWinnings(e){return(e-2*e*At).toFixed(4)},getApplicationFee(e){const t=e.bet;return 2*t*At},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return dr.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(dr.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s},wasCancelled(e){const t=e.outcome;return t==ct.Cancelled},isLeaver(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return a?e.outcome==ct.PlayerALeft:e.outcome==ct.PlayerBLeft},isOpponentLeaver(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return a?e.outcome==ct.PlayerBLeft:e.outcome==ct.PlayerALeft},isWinner(e,t){const n=this.getPlayerWinnings(e,t);return dr.log("getting winnings for player",n,t),n>0},isLoser(e,t){const n=this.getPlayerWinnings(e,t);return n<0}}},pr=(0,In.Z)(ur,[["render",lr],["__scopeId","data-v-7a85bc24"]]),cr=pr;var yr=n(15941);const mr=.05,hr={components:{ProfileItem:Ln,ProfileGameList:cr,ProfileIcon:xa},data(){return{balance:0}},async mounted(){this.$store.dispatch("setBalanceOf",this.address);const e=new rt(this.$store.state.provider),t=await e.getBalanceOf(this.address);let n={...this.$store.state.balances};n[this.address.toLowerCase()]=t,yr.log("balances",t),yr.log("balances",n),this.$store.commit("setBalances",n),this.balance=t,yr.log("mounted")},methods:{timeString(e){const t=this.$store.state.currentTime;return timeAgo(e,t)},getBaseWinnings(e){return e},getWinnings(e){return(e-2*e*mr).toFixed(4)},getApplicationFee(e){const t=e.bet;return 2*t*mr},getPlayerPoints(e,t){return e.points[t]},getBasePlayerWinnings(e,t){var n;const a=e.bet,s=this.getBaseWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return yr.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(yr.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s},getPlayerProtocolFees(e,t){var n;e.bet;const a=this.getApplicationFee(e),s=e.outcome,i=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return s==ct.Cancelled?(yr.log("cancelled"),0):s==ct.PlayerALeft&&i?0:s==ct.PlayerBLeft&&i?a:s!=ct.PlayerALeft||i?s!=ct.PlayerBLeft||i?s==ct.Draw?0:s==ct.PlayerA&&i?a:s==ct.PlayerB&&i?0:s!=ct.PlayerA||i?s!=ct.PlayerB||i?s==ct.PlayerATimeout&&i?0:s==ct.PlayerBTimeout&&i?a:s!=ct.PlayerATimeout||i?s!=ct.PlayerBTimeout||i?s==ct.BothTimeout?0:void 0:0:a:a:0:0:a},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return yr.log("getting player winnings",e,t,s,i,r),i==ct.Cancelled?(yr.log("cancelled"),0):i==ct.PlayerALeft&&r?-a:i==ct.PlayerBLeft&&r?s:i!=ct.PlayerALeft||r?i!=ct.PlayerBLeft||r?i==ct.Draw?0:i==ct.PlayerA&&r?s:i==ct.PlayerB&&r?-a:i!=ct.PlayerA||r?i!=ct.PlayerB||r?i==ct.PlayerATimeout&&r?-a:i==ct.PlayerBTimeout&&r?s:i!=ct.PlayerATimeout||r?i!=ct.PlayerBTimeout||r?i==ct.BothTimeout?0:void 0:-a:s:s:-a:-a:s}},computed:{provider(){return this.$store.state.provider},points(){return this.$store.getters.getPoints(this.address)},address(){return this.$route.params.id},truncatedAddress(){return this.address.substring(0,6)+"..."+this.address.substring(this.address.length-4,this.address.length)},games(){return Object.values(this.$store.state.games).filter((e=>"0"!=e.gameId&&(e.playerA.toLowerCase()==this.address.toLowerCase()||e.playerB.toLowerCase()==this.address.toLowerCase())&&e.outcome!=ct.None&&e.outcome!=ct.Cancelled&&""!=e.playerB&&""!=e.playerA)).sort(((e,t)=>{var n,a;return parseInt(null!==(n=t.time)&&void 0!==n?n:0)-parseInt(null!==(a=e.time)&&void 0!==a?a:0)}))},completedGames(){return yr.log("completed games",this.games.filter((e=>e.outcome!=ct.None))),this.games.filter((e=>e.outcome!=ct.None))},earnings(){let e=0;for(let t of this.games){const n=this.getBasePlayerWinnings(t,this.address);yr.log("earnings value: for",this.address,n,t.outcome),e+=parseFloat(n)}return yr.log("earnings",e),e},feesGenerated(){let e=0;for(let t of this.games){const n=this.getPlayerProtocolFees(t,this.address);yr.log("fees value: for",this.address,n,t.outcome),e+=parseFloat(n)}return yr.log("fees",e),e}},props:{},watch:{provider:{handler(){this.$store.dispatch("setBalanceOf",this.address)},immediate:!0},address:{async handler(){const e=new rt(this.$store.state.provider),t=await e.getBalanceOf(this.address);let n={...this.$store.state.balances};n[this.address.toLowerCase()]=t,yr.log("balances",t),yr.log("balances",n),this.$store.commit("setBalances",n),this.balance=t,yr.log("mounted")},immediate:!0}}},gr=(0,In.Z)(hr,[["render",Ui]]),vr=gr,br={style:{gap:"50px"},class:"content staking-view"},fr={style:{"margin-bottom":"56"},class:"profile-big"},wr=(0,s._)("p",null,"Your balance",-1),Tr={style:{display:"flex","justify-content":"center",gap:"40px","align-items":"end"}},kr={style:{margin:"0","margin-top":"-20px","margin-bottom":"-20px",padding:"0","align-items":"end","font-size":"70px"}},Cr=(0,s._)("span",{style:{"font-size":"35px"},class:"currency-symbol"},"HANDS",-1),Ar=(0,s._)("button",{style:{"margin-top":"60px","margin-bottom":"90px"},class:"button-dark"}," Buy HANDS ",-1),Pr={class:"stake-statistics"},Sr={style:{display:"flex",gap:"20px","align-items":"center","flex-direction":"column"}},Er=(0,s._)("p",null,"Total staked",-1),Mr={style:{display:"flex",gap:"20px","align-items":"center","flex-direction":"column"}},Ir=(0,s._)("p",null,"Protocol Revenue",-1),_r=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),Lr={class:"reward-statistics"},Br={class:"card"},Nr=(0,s._)("p",null,"Your stake",-1),xr=(0,s._)("span",{class:"currency-symbol"},"HANDS",-1),Fr={style:{display:"flex"}},Rr={class:"card"},Wr=(0,s._)("p",null,"Your rewards",-1);function Or(e,t,n,a,r,o){var l,d,u;const p=(0,s.up)("router-link"),c=(0,s.up)("profile-icon"),y=(0,s.up)("modal-stake"),m=(0,s.Q2)("modal");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",br,[(0,s.Wm)(p,{class:"back",to:"/"}),(0,s._)("div",fr,[(0,s.Wm)(c,{address:r.activeAccount,isLarge:!0},null,8,["address"])]),wr,(0,s._)("div",Tr,[(0,s._)("h2",kr,[(0,s.Uk)((0,i.zw)(null===(l=this.handsTokenBalance)||void 0===l?void 0:l.toString().split(".")[0])+"."+(0,i.zw)(null!==(d=null===(u=this.handsTokenBalance)||void 0===u||null===(u=u.toString().split(".")[1])||void 0===u?void 0:u.substring(0,4))&&void 0!==d?d:"00")+" ",1),Cr])]),Ar,(0,s._)("div",Pr,[(0,s._)("div",Sr,[Er,(0,s._)("h2",null,(0,i.zw)(r.totalHandsStakedBalance)+" HANDS",1)]),(0,s._)("div",Mr,[Ir,(0,s._)("h2",null,[(0,s.Uk)((0,i.zw)(r.protocolFeeRevenue)+" ",1),_r])])]),(0,s._)("div",Lr,[(0,s._)("div",Br,[Nr,(0,s._)("h1",null,[(0,s.Uk)((0,i.zw)(r.handsStakedBalance)+" ",1),xr]),(0,s._)("div",Fr,[(0,s._)("button",{onClick:t[0]||(t[0]=(...e)=>o.showStakeModal&&o.showStakeModal(...e)),class:"button-dark"}," Stake "),(0,s._)("button",{onClick:t[1]||(t[1]=(...e)=>o.showUnstakeModal&&o.showUnstakeModal(...e)),class:"button-light"}," Unstake ")])]),(0,s._)("div",Rr,[Wr,(0,s._)("h1",null,(0,i.zw)(r.claimableEthForStaking)+" ETH",1),(0,s._)("button",{onClick:t[2]||(t[2]=(...e)=>o.claim&&o.claim(...e)),class:"button-dark"}," Claim ")])])]),(0,s.wy)(((0,s.wg)(),(0,s.j4)(y,{show:r.showModal,"onUpdate:show":t[3]||(t[3]=e=>r.showModal=e),isStake:r.isStake,"onUpdate:isStake":t[4]||(t[4]=e=>r.isStake=e)},{default:(0,s.w5)((()=>[(0,s.Uk)(" Hello world ")])),_:1},8,["show","isStake"])),[[m,r.stakeFunction,"stakeFunction"]])],64)}n(278);const Gr=e=>((0,s.dD)("data-v-59e95c08"),e=e(),(0,s.Cn)(),e),Hr={key:0,class:"modal-container"},Dr={class:"modal"},zr={key:0,style:{"margin-top":"30px"}},$r=Gr((()=>(0,s._)("span",{style:{color:"#E19885"}},"HANDS",-1))),Ur={key:1,style:{"margin-top":"30px"}},Jr=Gr((()=>(0,s._)("span",{style:{color:"#E19885"}},"HANDS",-1))),jr={class:"modal-button-holder"};function qr(e,t,n,i,r,o){return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[n.show?((0,s.wg)(),(0,s.iD)("div",Hr,[(0,s._)("div",Dr,[n.isStake?((0,s.wg)(),(0,s.iD)("h2",zr,[(0,s.Uk)("Stake "),$r])):((0,s.wg)(),(0,s.iD)("h2",Ur,[(0,s.Uk)("Unstake "),Jr])),(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[0]||(t[0]=e=>r.amount=e),type:"number",placeholder:"Amount",class:"input"},null,512),[[a.nr,r.amount]]),(0,s._)("div",jr,[n.isStake?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"button-dark",onClick:t[1]||(t[1]=(...e)=>o.stake&&o.stake(...e))}," Stake ")):((0,s.wg)(),(0,s.iD)("button",{key:1,class:"button-dark",onClick:t[2]||(t[2]=(...e)=>o.unstake&&o.unstake(...e))}," Unstake ")),(0,s._)("button",{class:"button-light",onClick:t[3]||(t[3]=(...e)=>o.toggleShow&&o.toggleShow(...e))}," Close ")])])])):(0,s.kq)("",!0)])),_:1})}var Yr=n(15941);const Zr={data(){return{amount:0}},model:{prop:"show",event:"update:show"},props:{show:{type:Boolean,default:!1},isStake:{type:Boolean,default:!0},stakeFunction:{type:Function,default:()=>{}}},methods:{toggleShow(){this.$emit("update:show",!this.show)},stake(){this.$store.dispatch("stake",this.amount.toString())},unstake(){this.$store.dispatch("unstake",this.amount.toString())}},computed:{isStaking(){return this.$store.state.isStaking},isUnstaking(){return this.$store.state.isUnstaking}},created(){Yr.log(this.move)}},Vr=(0,In.Z)(Zr,[["render",qr],["__scopeId","data-v-59e95c08"]]),Kr=Vr,Qr=e=>((0,s.dD)("data-v-7299c0bf"),e=e(),(0,s.Cn)(),e),Xr={style:{margin:"0 80px",overflow:"auto",width:"90vw","text-align":"center",display:"flex","align-items":"center"}},eo={style:{"border-collapse":"collapse","min-width":"90vw"}},to=Qr((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Date")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Protocol Revenue")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Your earnings")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Your stake")])])])],-1))),no={class:"result"},ao={class:"score"},so={class:"earned"},io={class:"rounds"};function ro(e,t,n,a,r,o){return(0,s.wg)(),(0,s.iD)("div",Xr,[(0,s._)("table",eo,[to,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>((0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",no,(0,i.zw)(o.timeString(e.timestamp)),1),(0,s._)("td",ao,(0,i.zw)(e.amount)+" ETH",1),(0,s._)("td",so,(0,i.zw)(e.yourStake/e.totalStaked*e.amount)+" ETH",1),(0,s._)("td",io,(0,i.zw)(e.yourStake)+" / "+(0,i.zw)(e.totalStaked)+" HANDS",1)])))),128))])])])}var oo=n(15941);const lo={components:{GameMove:Ut,ProfileItem:Ln},data(){return{selectedTab:"Completed"}},props:{events:{type:Array},address:{type:String}},computed:{selectedData(){return oo.log("profile game list",this.events),this.events}},methods:{timeString(e){const t=this.$store.state.currentTime;return Mt(e,t)},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}}},uo=(0,In.Z)(lo,[["render",ro],["__scopeId","data-v-7299c0bf"]]),po=uo;var co=n(15941);const yo={components:{ModalStake:Kr,ListStaking:po,ProfileIcon:xa},data(){return{stakingContract:null,handsTokenContract:null,affiliateContract:null,activeAccount:null,handsTokenBalance:0,handsStakedBalance:0,totalHandsStakedBalance:0,stakerAmount:0,claimableEthForStaking:0,claimableEthForAffiliate:0,affiliateLink:null,onboardedAddresses:[],protocolFeeRevenue:0,totalStakedPerBlock:null,showModal:!1,isStake:!1,stakeFunction:()=>{co.log("stakeFunction")},yourStakeAtBlock:{},totalStakeAtBlock:{},recivedFundsList:[],handledEventIds:new Set}},computed:{triggerProcessEvents(){return this.$store.state.triggerProcessEvents},stakeEvents(){return this.$store.state.stakeEvents},unstakeEvents(){return this.$store.state.unstakeEvents},recievedFundsEvents(){return this.$store.state.recievedFundsEvents},processedRecievedFundsEvents(){return this.recivedFundsList.map((e=>{var t;const n=null===(t=Object.keys(this.totalStakeAtBlock))||void 0===t?void 0:t.reduce(((t,n)=>n<=e.blockNumber&&n>t?n:t),0),a=this.getTotalStakeAtBlock(n),s=this.getYourStakeAtBlock(n);return{...e,totalStaked:a,yourStake:s}}))},provider(){return this.$store.state.provider},getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new st.ZPm(this.provider)},getWeb3Read(){return new st.ZPm(new st.ZPm.providers.HttpProvider(kt))}},mounted(){co.log("provider",this.provider),co.log("mainContracts",nt)},watch:{provider:{handler(e,t){co.log("provider changed",e),e&&(co.log("provider changed",e),this.init())},immediate:!0},triggerProcessEvents:{handler(){this.processEvents()},immediate:!0},activeAccount:{handler(){this.processEvents()},immediate:!0}},methods:{async init(){await this.setAccount(),await this.setContracts(),this.setHandsTokenBalance(),this.setHandsStakedBalance(),this.setTotalHandsStakedAmount(),this.setClaimableEthForStaking(),this.setClaimableEthForAffiliate(),this.setProtocolFeeRevenue(),this.subscribeToEvents()},async setAccount(){const e=await this.getWeb3.eth.getAccounts();co.log("accounts",e),this.activeAccount=e[0]},async setContracts(){this.stakingContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),this.$store.commit("setStakeContract",this.stakingContract),this.handsTokenContract=new this.getWeb3.eth.Contract(nt.deployedAbis.HandsToken,nt.deployedContracts.HandsToken),this.$store.commit("setHandsTokenContract",this.handsTokenContract),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async setHandsTokenBalance(){if(!this.handsTokenContract)return 0;const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18,setInterval((async()=>{const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18}),5e3)},async setHandsStakedBalance(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18}),5e3)},async setTotalHandsStakedAmount(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18}),5e3)},async setClaimableEthForStaking(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18}),5e3)},async setClaimableEthForAffiliate(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18,setInterval((async()=>{const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18}),5e3)},async setOnboardedAddresses(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e,setInterval((async()=>{const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e}),5e3)},async setProtocolFeeRevenue(){const e=await this.stakingContract.methods.getReceivedFundsForStaking().call();this.protocolFeeRevenue=e/10**18,co.log("getting recieved funds for staking",this.protocolFeeRevenue),setInterval((async()=>{const e=await this.stakingContract.methods.getReceivedFundsForStaking().call();this.protocolFeeRevenue=e/10**18,co.log("getting recieved funds for staking",this.protocolFeeRevenue)}),5e3)},addToHandledEvents(e,t){const n=`${e.transactionHash}-${t}-${e.logIndex}`;this.handledEventIds.add(n)},async stake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e7,n=(await this.handsTokenContract.methods.approve(nt.deployedContracts.Staking,this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}),await this.stakingContract.methods.stake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}));return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),co.log("Staked",n),n}catch(e){return co.error("Error staking. Message:",e.message),e.reason&&co.error("Error reason:",e.reason),co.error("Error stack trace:",e.stack),e}},async unstake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.unstake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),co.log("Unstaked",n),n}catch(e){return co.log("Error unstaking",e),e}},showStakeModal(){this.showModal=!0,this.isStake=!0,this.stakeFunction=this.stake},showUnstakeModal(){this.showModal=!0,this.isStake=!1,this.stakeFunction=this.unstake},async claim(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),co.log("Claimed",n),n}catch(e){return co.log("Error claiming",e),e}},async claimAffiliateRewards(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),co.log("Claimed",n),n}catch(e){return co.log("Error claiming",e),e}},async registerAsConsumer(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.registerAsConsumer("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266").send({from:this.activeAccount,gasPrice:e,gasLimit:t});return co.log("Registered as consumer",n),n}catch(e){throw co.log("Error registering as a consumer:",e),e}},handleStakingEvent(e){co.log("recieved Staking event stakerman",e);const{staker:t,amount:n}=e.returnValues,a=e.blockNumber,s=n/10**18;this.yourStakeAtBlock[t.toLowerCase()]?this.yourStakeAtBlock[t.toLowerCase()][a]+=parseInt(s):(this.yourStakeAtBlock[t.toLowerCase()]={},this.yourStakeAtBlock[t.toLowerCase()][a]=parseInt(s)),this.totalStakeAtBlock[a]?this.totalStakeAtBlock[a]+=parseInt(s):this.totalStakeAtBlock[a]=parseInt(s),co.log("your stake at block",this.yourStakeAtBlock),co.log("total stake at block",this.totalStakeAtBlock)},handleUnstakingEvent(e){co.log("Unstaking event",e);const{staker:t,amount:n}=e.returnValues,a=e.blockNumber;this.yourStakeAtBlock[t.toLowerCase()]?this.yourStakeAtBlock[t.toLowerCase()][a]-=parseInt(realAmount):(this.yourStakeAtBlock[t.toLowerCase()]={},this.yourStakeAtBlock[t.toLowerCase()][a]=-parseInt(realAmount)),this.totalStakeAtBlock[a]?this.totalStakeAtBlock[a]-=parseInt(n):this.totalStakeAtBlock[a]=parseInt(n)},async handleRecievedFundsForStaking(e){var t;co.log("Recieved funds for staking event",e);const{amount:n}=e.returnValues,a=await this.getWeb3Read.eth.getBlock(e.blockNumber),s=a.timestamp,i=n/10**18,r=null===(t=Object.keys(this.totalStakeAtBlock))||void 0===t?void 0:t.reduce(((t,n)=>n<=e.blockNumber&&n>t?n:t),0);this.recivedFundsList.push({blockNumber:r,timestamp:s,amount:i}),co.log("recieved your stake at block",this.yourStakeAtBlock),co.log("recieved funds list",this.recivedFundsList)},async subscribeToEvents(){const e=this.stakingContract,t=this.activeAccount;co.log("Polling for events..."),co.log("contract:",e);const n=["Staked","Unstaked","ReceivedFundsForStaking"],a={Staked:this.handleStakingEvent,Unstaked:this.handleUnstakingEvent,ReceivedFundsForStaking:this.handleRecievedFundsForStaking},s=new Set;for(const i of n)e.events[i]().on("data",(e=>{const n=`${e.transactionHash}-${i}-${e.logIndex}`;s.has(n)||(co.log(`New ${i} event detected:`,e),a[i].call(this,e,t),s.add(n),this.$store.dispatch("addEvent",{eventName:i,event:e}))})).on("error",(e=>{co.error(`Error on event ${i}:`,e)}))},async fetchStakeEvents(e,t){const n=5e4,a=this.stakingContract;this.stakeEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){co.log(`Fetching stake events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("Staked",{fromBlock:s,toBlock:i});this.stakeEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},async fetchUnstakeEvents(e,t){const n=5e4,a=this.stakingContract;this.unstakeEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){co.log(`Fetching unstake events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("Unstaked",{fromBlock:s,toBlock:i});this.unstakeEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},async fetchRecievedFundsEvents(e,t){const n=5e4,a=this.stakingContract;this.recievedFundsEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){co.log(`Fetching recieved funds events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("ReceivedFundsForStaking",{fromBlock:s,toBlock:i});this.recievedFundsEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},processEvents(){this.yourStakeAtBlock={},this.totalStakeAtBlock={},this.recivedFundsList=[],this.handledEventIds=new Set,this.stakeEvents.forEach((e=>{this.handleStakingEvent(e),this.addToHandledEvents(e,"Staked")})),this.unstakeEvents.forEach((e=>{this.handleUnstakingEvent(e),this.addToHandledEvents(e,"Unstaked")})),this.recievedFundsEvents.forEach((e=>{this.handleRecievedFundsForStaking(e),this.addToHandledEvents(e,"ReceivedFundsForStaking")}))},async fetchPastEvents(){const e=32000576,t=await this.getWeb3.eth.getBlockNumber();await this.fetchStakeEvents(e,t),await this.fetchUnstakeEvents(e,t),await this.fetchRecievedFundsEvents(e,t),this.processEvents()},getYourStakeAtBlock(e){var t;const n=Object.keys(this.yourStakeAtBlock[null===(t=this.activeAccount)||void 0===t?void 0:t.toLowerCase()]||{}),a=n.reduce(((t,n)=>n<=e&&n>t?n:t),0);return this.yourStakeAtBlock[a]},getTotalStakeAtBlock(e){const t=Object.keys(this.totalStakeAtBlock),n=t.reduce(((t,n)=>n<=e&&n>t?n:t),0);return this.totalStakeAtBlock[n]},async getBlockNumber(){return await this.getWeb3.eth.getBlockNumber()}}},mo=(0,In.Z)(yo,[["render",Or]]),ho=mo,go={class:"content profile-view"},vo=(0,s._)("h2",null,"Rankings",-1);function bo(e,t,n,a,i,r){const o=(0,s.up)("router-link"),l=(0,s.up)("ranking-list");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",go,[(0,s.Wm)(o,{class:"back",to:"/"}),vo]),(0,s.Wm)(l,{rankings:r.rankings},null,8,["rankings"])],64)}const fo=e=>((0,s.dD)("data-v-07125b04"),e=e(),(0,s.Cn)(),e),wo={class:"table-content"},To={style:{}},ko=fo((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"prize-symbol-table"}),(0,s._)("p",null,"Rank")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Player")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Earnings")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Games Played")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Points")])])])],-1))),Co={class:"rank"},Ao={class:"player"},Po={key:0,class:"winnings green"},So={key:1,class:"winnings red"},Eo={class:"games-played"},Mo={class:"points"},Io={style:{},class:"points-button"};function _o(e,t,n,a,r,o){const l=(0,s.up)("profile-item");return(0,s.wg)(),(0,s.iD)("div",wo,[(0,s._)("table",To,[ko,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>((0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",Co,(0,i.zw)(t+1),1),(0,s._)("td",Ao,[(0,s.Wm)(l,{address:e.address},null,8,["address"])]),e.earnings>0?((0,s.wg)(),(0,s.iD)("td",Po,"+"+(0,i.zw)(e.earnings)+" ETH",1)):e.earnings<=0?((0,s.wg)(),(0,s.iD)("td",So,(0,i.zw)(e.earnings)+" ETH ",1)):(0,s.kq)("",!0),(0,s._)("td",Eo,(0,i.zw)(e.gamesPlayed),1),(0,s._)("td",Mo,[(0,s._)("div",null,[(0,s._)("div",Io,(0,i.zw)(e.points)+" points",1)])])])))),128))])])])}var Lo=n(15941);const Bo={components:{ProfileItem:Ln},data(){return{selectedTab:"Completed"}},props:{rankings:{type:Array}},computed:{selectedData(){return Lo.log("profile game list",this.rankings),this.rankings}},methods:{}},No=(0,In.Z)(Bo,[["render",_o],["__scopeId","data-v-07125b04"]]),xo=No;var Fo=n(15941);const Ro={components:{RankingList:xo},data(){return{balance:0}},async mounted(){},methods:{},computed:{provider(){return this.$store.state.provider},address(){return this.$route.params.id},truncatedAddress(){return this.address.substring(0,6)+"..."+this.address.substring(this.address.length-4,this.address.length)},rankings(){return Fo.log("profile list",this.$store.state.profiles),Object.values(this.$store.state.profiles).sort(((e,t)=>t.points-e.points))}},props:{},watch:{}},Wo=(0,In.Z)(Ro,[["render",bo]]),Oo=Wo,Go=[{path:"/",name:"home",component:Mi},{path:"/profile/:id",name:"profile",component:vr},{path:"/staking",name:"staking",component:ho},{path:"/rankings",name:"rankings",component:Oo}],Ho=(0,bi.p7)({history:(0,bi.PO)("/"),routes:Go}),Do=Ho;(0,a.ri)(vi).use(Ft).use(Do).mount("#app")},47123:()=>{},78446:()=>{},25880:()=>{},35883:()=>{},86401:()=>{},16556:()=>{},784:()=>{},69494:()=>{},93179:()=>{},80950:()=>{},46601:()=>{},89214:()=>{},8623:()=>{},42480:()=>{},7748:()=>{},85568:()=>{},89519:()=>{},89568:()=>{},40127:()=>{},27790:()=>{},6506:()=>{},56619:()=>{},28325:()=>{},24654:()=>{},77108:()=>{},71156:()=>{},52361:()=>{},94616:()=>{},22644:()=>{},55024:()=>{},33523:()=>{},87500:()=>{}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var i=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.m=e,(()=>{n.amdO={}})(),(()=>{var e=[];n.O=(t,a,s,i)=>{if(!a){var r=1/0;for(u=0;u<e.length;u++){for(var[a,s,i]=e[u],o=!0,l=0;l<a.length;l++)(!1&i||r>=i)&&Object.keys(n.O).every((e=>n.O[e](a[l])))?a.splice(l--,1):(o=!1,i<r&&(r=i));if(o){e.splice(u--,1);var d=s();void 0!==d&&(t=d)}}return t}i=i||0;for(var u=e.length;u>0&&e[u-1][2]>i;u--)e[u]=e[u-1];e[u]=[a,s,i]}})(),(()=>{n.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;return n.d(t,{a:t}),t}})(),(()=>{n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}})(),(()=>{n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[]))})(),(()=>{n.u=e=>"js/"+e+"."+{52:"40906378",97:"6d3b2de0",127:"67f4d40f",159:"4a2e57fe",363:"d9a97fbe",387:"0e8bc239",422:"2be6f278",488:"582dff07",512:"ff94f0d2",529:"7f866bf9",530:"956f8cd7",565:"49cb2cc8",598:"f09fedd5",614:"91b28489",657:"fcc46617",747:"d9ea8248",869:"aa8f0a88",897:"dfefd357"}[e]+".js"})(),(()=>{n.miniCssF=e=>{}})(),(()=>{n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{n.hmd=e=>(e=Object.create(e),e.children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e)})(),(()=>{n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{var e={},t="Handsy.io:";n.l=(a,s,i,r)=>{if(e[a])e[a].push(s);else{var o,l;if(void 0!==i)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var p=d[u];if(p.getAttribute("src")==a||p.getAttribute("data-webpack")==t+i){o=p;break}}o||(l=!0,o=document.createElement("script"),o.charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.setAttribute("data-webpack",t+i),o.src=a),e[a]=[s];var c=(t,n)=>{o.onerror=o.onload=null,clearTimeout(y);var s=e[a];if(delete e[a],o.parentNode&&o.parentNode.removeChild(o),s&&s.forEach((e=>e(n))),t)return t(n)},y=setTimeout(c.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=c.bind(null,o.onerror),o.onload=c.bind(null,o.onload),l&&document.head.appendChild(o)}}})(),(()=>{n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}})(),(()=>{n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e)})(),(()=>{n.p="/"})(),(()=>{var e={143:0};n.f.j=(t,a)=>{var s=n.o(e,t)?e[t]:void 0;if(0!==s)if(s)a.push(s[2]);else{var i=new Promise(((n,a)=>s=e[t]=[n,a]));a.push(s[2]=i);var r=n.p+n.u(t),o=new Error,l=a=>{if(n.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var i=a&&("load"===a.type?"missing":a.type),r=a&&a.target&&a.target.src;o.message="Loading chunk "+t+" failed.\n("+i+": "+r+")",o.name="ChunkLoadError",o.type=i,o.request=r,s[1](o)}};n.l(r,l,"chunk-"+t,t)}},n.O.j=t=>0===e[t];var t=(t,a)=>{var s,i,[r,o,l]=a,d=0;if(r.some((t=>0!==e[t]))){for(s in o)n.o(o,s)&&(n.m[s]=o[s]);if(l)var u=l(n)}for(t&&t(a);d<r.length;d++)i=r[d],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(u)},a=self["webpackChunkHandsy_io"]=self["webpackChunkHandsy_io"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})();var a=n.O(void 0,[998],(()=>n(91970)));a=n.O(a)})();
//# sourceMappingURL=app.c2b4b566.js.map