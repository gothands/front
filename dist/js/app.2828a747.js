(()=>{var e={40090:(e,t,n)=>{"use strict";n(88674),n(17727);var a=n(49242),s=n(73396),i=n(87139);const r=(0,s._)("div",{class:"title hide-for-mobile"}," Handsy.io ",-1),o={class:"show-for-mobile"},l={style:{display:"flex","align-items":"center"}},d=(0,s._)("div",{class:"title",style:{}}," Handsy.io ",-1),u={class:"nav-right"},c=(0,s._)("span",{class:"grey"},"Ranking ",-1),p=(0,s._)("svg",{xmlns:"http://www.w3.org/2000/svg",height:"1em",viewBox:"0 0 448 512"},[(0,s._)("path",{d:"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z"})],-1),y={style:{display:"flex","align-items":"center","justify-content":"center",width:"100%"}},m={key:0,class:"joining-password"};function h(e,t,n,a,h,g){const v=(0,s.up)("router-link"),f=(0,s.up)("profile-icon"),w=(0,s.up)("router-view");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("nav",null,[r,(0,s._)("div",o,[(0,s._)("div",l,[d,e.isInGame?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"button-light",style:{"margin-top":"-10px"},onClick:t[0]||(t[0]=(...e)=>g.leaveGame&&g.leaveGame(...e))}," Leave ")):(0,s.kq)("",!0)])]),(0,s._)("div",u,[!e.isInGame&&e.loggedin?((0,s.wg)(),(0,s.j4)(v,{key:0,to:"/",style:{display:"flex","align-items":"center",gap:"10px"}},{default:(0,s.w5)((()=>[c,p])),_:1})):(0,s.kq)("",!0),!e.isInGame&&e.loggedin?((0,s.wg)(),(0,s.j4)(v,{key:1,to:"/staking"},{default:(0,s.w5)((()=>[(0,s.Uk)("Staking")])),_:1})):(0,s.kq)("",!0),e.isInGame?((0,s.wg)(),(0,s.iD)("button",{key:2,class:"button-light hide-for-mobile-real",onClick:t[1]||(t[1]=(...e)=>g.leaveGame&&g.leaveGame(...e))}," Leave ")):(0,s.kq)("",!0),e.loggedin?((0,s.wg)(),(0,s.j4)(f,{key:3,class:"profile",address:e.activeAccount,isMedium:!0},null,8,["address"])):(0,s.kq)("",!0)])]),(0,s._)("div",y,[e.joiningPassword?((0,s.wg)(),(0,s.iD)("p",m," Joining match: "+(0,i.zw)(e.joiningPassword.toUpperCase())+" ... ",1)):(0,s.kq)("",!0)]),(0,s.Wm)(w)],64)}n(74916),n(38862);const g={class:"content"},v={key:0,style:{display:"flex","align-items":"center"}},f=(0,s._)("p",null,"Syncing events",-1),w=(0,s._)("div",{class:"small-loading"},null,-1),b=[f,w],k={key:1},T={style:{margin:"0","margin-bottom":"6px"}},C={style:{margin:"0","margin-bottom":"22px"}},A={class:"decimals"},S=(0,s._)("span",{class:"currency-symbol decimals",style:{margin:"0","margin-left":"10px"}},"ETH",-1),E={class:"address-container"},M={key:2,style:{width:"100%"}},P={class:"game-view"},I={key:0,class:"game-move-controls"},_={class:"hide-for-mobile-real",style:{display:"flex",gap:"20px"}},R={class:"address-container hide-for-mobile-real"},B={class:"profile-mini"},L={class:"address"},F={class:"player-balance"},x={key:2,class:"hide-for-mobile"},W={style:{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"}},O={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},G={class:"address-container",style:{display:"flex","align-items":"center"}},H={class:"address",style:{"font-size":"18px"}},D={class:"player-balance-small"},N={key:1,class:"game-move-controls"},z={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"15px","justify-content":"center"}},U={key:0,class:"small-loading"},$={key:1,class:"checkmark"},J={key:2,style:{opacity:"0.5"}},j={style:{display:"flex","align-items":"center",gap:"1px"}},q={style:{opacity:"0.5","font-weight":"bolder"}},V=(0,s._)("div",{class:"point"},null,-1),Y={class:"hide-for-mobile-real",style:{display:"flex",gap:"20px"}},Z={class:"address-container hide-for-mobile-real"},K={class:"profile-mini"},Q={class:"address"},X={class:"player-balance"},ee={key:2,class:"hide-for-mobile"},te={style:{display:"flex","justify-content":"center",gap:"10px"}},ne=(0,s._)("p",null,"Rock",-1),ae=(0,s._)("p",null,"Paper",-1),se=(0,s._)("p",null,"Scissors",-1),ie={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},re={class:"address-container",style:{display:"flex","align-items":"center"}},oe={class:"address",style:{"font-size":"18px"}},le={class:"player-balance-small"},de={class:"middle-game-view"},ue=(0,s._)("p",{class:"hide-for-mobile"},"Your bet is",-1),ce={class:"hide-for-mobile",style:{margin:"0","margin-bottom":"22px"}},pe={class:"decimals"},ye=(0,s._)("span",{class:"currency-symbol decimals",style:{margin:"0","margin-left":"10px"}},"ETH",-1),me={class:"hide-for-mobile",style:{opacity:"0.5"}},he={class:"show-for-mobile",style:{opacity:"0.5","font-size":"small"}},ge={style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},ve={class:"show-for-mobile",style:{margin:"0","font-size":"25px","letter-spacing":"-1px","font-weight":"800"}},fe=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),we={class:"game-move-controls opponent-view"},be={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"20px","justify-content":"center"}},ke={class:"address-container",style:{display:"flex","align-items":"center"}},Te={class:"address",style:{"font-size":"18px"}},Ce={class:"player-balance-small"},Ae={class:"game-move-controls"},Se={class:"hide-for-mobile-real",style:{display:"flex",gap:"20px"}},Ee={class:"address-container hide-for-mobile-real"},Me={class:"profile-mini"},Pe={class:"address"},Ie={class:"player-balance hide-for-mobile"},_e={key:3,class:"hide-for-mobile"},Re={key:4,class:"loading hide-for-mobile"},Be={key:5,class:"checkmark hide-for-mobile"},Le={class:"show-for-mobile",style:{display:"flex","flex-direction":"row","align-items":"center",gap:"15px","justify-content":"center"}},Fe={key:0,class:"small-loading"},xe={key:1,class:"small-checkmark"},We={key:2,style:{opacity:"0.5"}},Oe={style:{display:"flex","align-items":"center",gap:"1px"}},Ge={style:{opacity:"0.5","font-weight":"bolder"}},He=(0,s._)("div",{class:"point"},null,-1),De={key:3,class:"content"},Ne={class:"button-holder"},ze=(0,s._)("div",{class:"plus-symbol"},null,-1),Ue=(0,s._)("div",null,"Add Funds",-1),$e=[ze,Ue],Je=["value"],je=["value"],qe=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),Ve=(0,s._)("span",{style:{color:"#E19885","font-weight":"bold","text-decoration":"underline",cursor:"pointer"}},"Switch",-1),Ye={key:1,style:{display:"flex","flex-direction":"column","align-items":"center","margin-top":"-70px"}},Ze=(0,s._)("p",null,"Your wager is",-1),Ke={style:{margin:"0"}},Qe=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),Xe=(0,s._)("p",{style:{opacity:"0.5"}},"Waiting for opponent ...",-1),et=(0,s._)("div",{class:"searching"},null,-1);function tt(e,t,n,r,o,l){var d,u,c,p,y,m,h,f,w;const ze=(0,s.up)("Modal"),Ue=(0,s.up)("ModalAddFunds"),tt=(0,s.up)("profile-item"),nt=(0,s.up)("profile-item-burner"),at=(0,s.up)("GameMove"),st=(0,s.up)("profile-icon"),it=(0,s.up)("game-list");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(ze,{show:o.showModal,"onUpdate:show":t[0]||(t[0]=e=>o.showModal=e),winnerPoints:o.winnerPoints,"onUpdate:winnerPoints":t[1]||(t[1]=e=>o.winnerPoints=e),loserPoints:o.loserPoints,"onUpdate:loserPoints":t[2]||(t[2]=e=>o.loserPoints=e),win:o.winModal,"onUpdate:win":t[3]||(t[3]=e=>o.winModal=e),bet:o.selectedBet,"onUpdate:bet":t[4]||(t[4]=e=>o.selectedBet=e),leaver:o.leaverModal,"onUpdate:leaver":t[5]||(t[5]=e=>o.leaverModal=e),timeout:o.timeoutModal,"onUpdate:timeout":t[6]||(t[6]=e=>o.timeoutModal=e),player:this.activeAccount,"onUpdate:player":t[7]||(t[7]=e=>this.activeAccount=e)},{default:(0,s.w5)((()=>[(0,s.Uk)(" Hello world ")])),_:1},8,["show","winnerPoints","loserPoints","win","bet","leaver","timeout","player"]),(0,s.Wm)(Ue,{show:o.showAddFundsModal,"onUpdate:show":t[8]||(t[8]=e=>o.showAddFundsModal=e),minimumFundsToAdd:o.minimumAmount,callback:o.onAddFunds},null,8,["show","minimumFundsToAdd","callback"]),(0,s._)("div",g,[l.fetchingEvents?((0,s.wg)(),(0,s.iD)("div",v,b)):(0,s.kq)("",!0),l.isInGame||l.isWaiting?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",k,[(0,s._)("p",T,[(0,s.Uk)("Your balance   "),(0,s._)("span",{onClick:t[9]||(t[9]=e=>this.$store.dispatch("clearAndReload"))},"↻")]),(0,s._)("h1",C,[(0,s.Uk)((0,i.zw)(null===(d=this.balance)||void 0===d?void 0:d.toString().split(".")[0])+" ",1),(0,s._)("span",A," ."+(0,i.zw)(null!==(u=null===(c=this.balance)||void 0===c||null===(p=c.toString().split(".")[1])||void 0===p?void 0:p.substring(0,4))&&void 0!==u?u:"00"),1),S]),(0,s._)("div",E,[(0,s.Wm)(tt,{address:this.activeAccount,alwaysShow:!0},null,8,["address"]),(0,s.Uk)("   "),l.isBurner?((0,s.wg)(),(0,s.j4)(nt,{key:0,address:this.burnerAddress,balance:l.burnerBalance},null,8,["address","balance"])):(0,s.kq)("",!0)])])),l.isInGame?((0,s.wg)(),(0,s.iD)("div",M,[(0,s._)("div",P,[l.shouldMove?((0,s.wg)(),(0,s.iD)("div",I,[(0,s._)("div",_,[(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=1})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=2})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=3})},null,2)]),l.bothRevealed?((0,s.wg)(),(0,s.j4)(at,{key:0,move:o.selectedMove},null,8,["move"])):((0,s.wg)(),(0,s.j4)(at,{key:1,move:4})),(0,s._)("div",R,[(0,s._)("div",B,[(0,s.Wm)(st,{address:l.yourAddress,isMini:!0},null,8,["address"])]),(0,s._)("p",L,(0,i.zw)(l.truncateAddress(l.yourAddress)),1)]),(0,s._)("div",F,(0,i.zw)(l.balance)+" ETH ",1),l.isMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",x,(0,i.zw)(l.yourTimeLeft),1)),(0,s._)("div",W,[(0,s.Wm)(at,{class:"hide-for-mobile",isNormal:!0,move:o.selectedMove},null,8,["move"]),(0,s._)("p",null,(0,i.zw)(1==o.selectedMove?"Rock":2==o.selectedMove?"Paper":"Scissors"),1)]),(0,s._)("div",O,[(0,s._)("div",G,[(0,s.Wm)(st,{address:l.yourAddress,isSuperMini:!0},null,8,["address"]),(0,s._)("p",H,(0,i.zw)(l.smallTruncate(l.yourAddress)),1)]),(0,s._)("div",D,(0,i.zw)(l.balance)+" ETH ",1)])])):((0,s.wg)(),(0,s.iD)("div",N,[(0,s._)("div",z,[l.isMoveSent?((0,s.wg)(),(0,s.iD)("div",$)):((0,s.wg)(),(0,s.iD)("div",U)),l.isMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("p",J,(0,i.zw)(l.yourTimeLeft),1)),(0,s._)("div",j,[(0,s._)("p",q,(0,i.zw)(l.yourCurrentPoints),1),V])]),(0,s._)("div",Y,[(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=1})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=2})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.yourCurrentPoints>=3})},null,2)]),l.bothRevealed?((0,s.wg)(),(0,s.j4)(at,{key:0,class:"hide-for-mobile",move:o.selectedMove},null,8,["move"])):((0,s.wg)(),(0,s.j4)(at,{key:1,class:"hide-for-mobile",move:4})),(0,s._)("div",Z,[(0,s._)("div",K,[(0,s.Wm)(st,{address:l.yourAddress,isMini:!0},null,8,["address"])]),(0,s._)("p",Q,(0,i.zw)(l.truncateAddress(l.yourAddress)),1)]),(0,s._)("div",X,(0,i.zw)(l.balance)+" ETH ",1),l.isMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",ee,(0,i.zw)(l.yourTimeLeft),1)),(0,s._)("div",te,[(0,s._)("div",{style:(0,i.j5)([{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"},{"border-color":l.isRock?"yellow":"inherit"}]),onClick:t[10]||(t[10]=(...e)=>l.onRock&&l.onRock(...e))},[(0,s.Wm)(at,{isNormal:!0,move:1}),ne],4),(0,s._)("div",{style:(0,i.j5)([{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"},{"border-color":l.isPaper?"yellow":"inherit"}]),onClick:t[11]||(t[11]=(...e)=>l.onPaper&&l.onPaper(...e))},[(0,s.Wm)(at,{isNormal:!0,move:2}),ae],4),(0,s._)("div",{style:(0,i.j5)([{display:"flex","flex-direction":"column",gap:"10px","align-items":"center"},{"border-color":l.isScissors?"yellow":"inherit"}]),onClick:t[12]||(t[12]=(...e)=>l.onScissors&&l.onScissors(...e))},[(0,s.Wm)(at,{isNormal:!0,move:3}),se],4)]),(0,s._)("div",ie,[(0,s._)("div",re,[(0,s.Wm)(st,{address:l.yourAddress,isSuperMini:!0},null,8,["address"]),(0,s._)("p",oe,(0,i.zw)(l.smallTruncate(l.yourAddress)),1)]),(0,s._)("div",le,(0,i.zw)(l.balance)+" ETH ",1)])])),(0,s._)("div",de,[ue,(0,s._)("h1",ce,[(0,s.Uk)((0,i.zw)(null===(y=this.selectedBet)||void 0===y?void 0:y.toString().split(".")[0])+" ",1),(0,s._)("span",pe," ."+(0,i.zw)(null!==(m=null===(h=this.selectedBet)||void 0===h||null===(f=h.toString().split(".")[1])||void 0===f?void 0:f.substring(0,4))&&void 0!==m?m:"00"),1),ye]),(0,s._)("p",me,(0,i.zw)(l.roundStateString),1),(0,s._)("p",he,(0,i.zw)(l.roundStateString),1),(0,s._)("div",ge,[(0,s._)("h4",ve,[(0,s.Uk)((0,i.zw)(this.selectedBet)+" ",1),fe])])]),(0,s._)("div",we,[(0,s._)("div",be,[(0,s._)("div",ke,[(0,s.Wm)(st,{address:l.opponentAddress,isSuperMini:!0},null,8,["address"]),(0,s._)("p",Te,(0,i.zw)(l.smallTruncate(l.opponentAddress)),1)]),(0,s._)("div",Ce,(0,i.zw)(l.opponentBalance)+" ETH ",1)]),(0,s._)("div",Ae,[(0,s._)("div",Se,[(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.opponentCurrentPoints>=1})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.opponentCurrentPoints>=2})},null,2),(0,s._)("div",{class:(0,i.C_)({point:!0,"point-active":l.opponentCurrentPoints>=3})},null,2)]),l.bothRevealed?((0,s.wg)(),(0,s.j4)(at,{key:0,class:"flip",move:l.opponentMove},null,8,["move"])):l.isOpponentMoveSent?((0,s.wg)(),(0,s.j4)(at,{key:1,class:"flip",move:4})):((0,s.wg)(),(0,s.j4)(at,{key:2,class:"flip",move:4})),(0,s._)("div",Ee,[(0,s._)("div",Me,[(0,s.Wm)(st,{address:l.opponentAddress,isMini:!0},null,8,["address"])]),(0,s._)("p",Pe,(0,i.zw)(l.truncateAddress(l.opponentAddress)),1)]),(0,s._)("div",Ie,(0,i.zw)(l.opponentBalance)+" ETH ",1),l.isOpponentMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",_e,(0,i.zw)(l.opponentTimeLeft),1)),l.isOpponentMoveSent?((0,s.wg)(),(0,s.iD)("div",Be)):((0,s.wg)(),(0,s.iD)("div",Re))]),(0,s._)("div",Le,[l.isOpponentMoveSent?((0,s.wg)(),(0,s.iD)("div",xe)):((0,s.wg)(),(0,s.iD)("div",Fe)),l.isOpponentMoveSent?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("p",We,(0,i.zw)(l.opponentTimeLeft),1)),(0,s._)("div",Oe,[(0,s._)("p",Ge,(0,i.zw)(l.opponentCurrentPoints),1),He])])])])])):((0,s.wg)(),(0,s.iD)("div",De,[(0,s._)("div",Ne,[l.isRegistering||l.isWaiting?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("button",{key:0,id:"addFundsButton",class:"button-light",onClick:t[13]||(t[13]=(...e)=>l.toggleAddFundsModal&&l.toggleAddFundsModal(...e))},$e)),(0,s._)("div",null,[l.isWaiting?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("button",{key:0,id:"playButton",class:"button-dark",onClick:t[16]||(t[16]=(...e)=>l.registerGame&&l.registerGame(...e))},[(0,s._)("div",null,(0,i.zw)(l.isRegistering?"Creating...":l.isJoiningPasswordMatch?`Join Match ${null===(w=l.joiningPassword)||void 0===w?void 0:w.toUpperCase()}`:o.playWithFriend?"Create Match":"Play random")+"   ",1),l.isJoiningPasswordMatch?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("select",{key:0,class:"selector",style:{"margin-right":"-25px"},value:this.selectedBet,onInput:t[14]||(t[14]=e=>o.selectedBet=e.target.value),onClick:t[15]||(t[15]=(0,a.iM)((()=>{}),["stop"]))},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.wagerSteps,(e=>((0,s.wg)(),(0,s.iD)("option",{key:e,value:e},[(0,s.Uk)((0,i.zw)(e)+" ",1),qe,(0,s.Uk)("   ")],8,je)))),128))],40,Je))])),l.isRegistering||l.isWaiting||l.isJoiningPasswordMatch?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("p",{key:1,onClick:t[17]||(t[17]=(...e)=>l.togglePlayWithFriend&&l.togglePlayWithFriend(...e)),class:"toggle-text",style:{"margin-top":"30px",cursor:"pointer"}},[(0,s.Uk)((0,i.zw)(o.playWithFriend?"Play with random instead?":"Play with friend instead?")+" ",1),Ve]))]),l.isWaiting?((0,s.wg)(),(0,s.iD)("div",Ye,[Ze,(0,s._)("h1",Ke,[(0,s.Uk)((0,i.zw)(this.selectedBet)+" ",1),Qe]),Xe,et,(0,s._)("button",{class:"button-light",onClick:t[18]||(t[18]=(...e)=>l.cancelGame&&l.cancelGame(...e))}," Cancel ")])):(0,s.kq)("",!0)]),l.isWaiting&&o.playWithFriend?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"button-dark",onClick:t[19]||(t[19]=(...e)=>l.copyPasswordGameLink&&l.copyPasswordGameLink(...e))}," Copy game link ")):(0,s.kq)("",!0)]))]),l.isInGame?(0,s.kq)("",!0):((0,s.wg)(),(0,s.j4)(it,{key:0,activeData:l.activeGames,completedData:l.completedGames,pendingData:l.pendingGames},null,8,["activeData","completedData","pendingData"]))],64)}n(2707),n(21703),n(57658);const nt=JSON.parse('{"dependencyContracts":{"wETH":"0x3ccA24e1A0e49654bc3482ab70199b7400eb7A3a","vault":"0xfC3c03385dA8D5Adfb8BDF5f5fe156fb5B3a6Ee2","forwarderRegistry":"0x1055780Bd25e2F698E7c9a95FBaf4cb565A23A14","master":"0x9035E63C5Ac74dE843F176BE6B9869cA2385C61d","feeRegistry":"0xF3a4d6E6581e12Dc5b0eCd6EA3d483fF09c3cAE0","feeRecipient":"0x8a7E4b12Fb1914d91A84fe66e7B0e899DE291167","feeManager":"0x4768d649Da9927a8b3842108117eC0ca7Bc6953f","classicFactory":"0x22F4D93be0E8C0C081e74c0d5e697B64eEA007FF","stableFactory":"0xe4C7fBB0a626ed208021ccabA6Be1566905E2dFc","router":"0x97b985951FD3e0C1d996421CC783d46c12d00082"},"dependencyAbis":{"wETH":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"vault":[{"inputs":[{"internalType":"address","name":"_wETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"TransferFromFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFlashLoanFeePercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"ERC3156_CALLBACK_SUCCESS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"depositETH","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"flashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"flashLoanFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoanMultiple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_flashLoanFeeRecipient","type":"address"}],"name":"setFlashLoanFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferAndDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"mode","type":"uint8"}],"name":"withdrawAlternative","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"master":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"},{"internalType":"address","name":"_forwarderRegistry","type":"address"},{"internalType":"address","name":"_feeManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NotWhitelistedFactory","type":"error"},{"inputs":[],"name":"PoolAlreadyExists","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"factory","type":"address"},{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"uint16","name":"poolType","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"RegisterPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"SetFactoryWhitelisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newFeeManager","type":"address"}],"name":"UpdateFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newForwarderRegistry","type":"address"}],"name":"UpdateForwarderRegistry","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"forwarderRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeRecipient","outputs":[{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getProtocolFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFactoryWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint16","name":"poolType","type":"uint16"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"registerPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"setFactoryWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newFeeManager","type":"address"}],"name":"setFeeManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newForwarderRegistry","type":"address"}],"name":"setForwarderRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"classicFactory":[{"inputs":[{"internalType":"address","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidTokens","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeployData","outputs":[{"internalType":"bytes","name":"deployData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"swapFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"stableFactory":[{"inputs":[{"internalType":"address","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidTokens","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeployData","outputs":[{"internalType":"bytes","name":"deployData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"swapFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"router":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"},{"internalType":"address","name":"_wETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApproveFailed","type":"error"},{"inputs":[],"name":"Expired","type":"error"},{"inputs":[],"name":"NotEnoughLiquidityMinted","type":"error"},{"inputs":[],"name":"TooLittleReceived","type":"error"},{"inputs":[],"name":"TransferFromFailed","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"addLiquidity2","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct IRouter.SplitPermitParams[]","name":"permits","type":"tuple[]"}],"name":"addLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct SyncSwapRouter.TokenInput[]","name":"inputs","type":"tuple[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct IRouter.SplitPermitParams[]","name":"permits","type":"tuple[]"}],"name":"addLiquidityWithPermit2","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256[]","name":"minAmounts","type":"uint256[]"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"burnLiquidity","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"amounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"name":"burnLiquiditySingle","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IRouter.ArrayPermitParams","name":"permit","type":"tuple"}],"name":"burnLiquiditySingleWithPermit","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256[]","name":"minAmounts","type":"uint256[]"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"},{"components":[{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IRouter.ArrayPermitParams","name":"permit","type":"tuple"}],"name":"burnLiquidityWithPermit","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"amounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"enteredPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"enteredPoolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"isPoolEntered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"selfPermit2","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"selfPermit2IfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"stakingPool","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalf","type":"address"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"internalType":"struct IRouter.SwapStep[]","name":"steps","type":"tuple[]"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"internalType":"struct IRouter.SwapPath[]","name":"paths","type":"tuple[]"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"callback","type":"address"},{"internalType":"bytes","name":"callbackData","type":"bytes"}],"internalType":"struct IRouter.SwapStep[]","name":"steps","type":"tuple[]"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"internalType":"struct IRouter.SwapPath[]","name":"paths","type":"tuple[]"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"approveAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct IRouter.SplitPermitParams","name":"permit","type":"tuple"}],"name":"swapWithPermit","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"amountOut","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"feeManager":[{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint16","name":"poolType","type":"uint16"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetDefaultProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint16","name":"poolType","type":"uint16"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetDefaultSwapFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousFeeRecipient","type":"address"},{"indexed":true,"internalType":"address","name":"newFeeRecipient","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetPoolProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint24","name":"fee","type":"uint24"}],"name":"SetTokenSwapFee","type":"event"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"defaultProtocolFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"defaultSwapFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getProtocolFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"poolProtocolFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"poolType","type":"uint16"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setDefaultProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"poolType","type":"uint16"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setDefaultSwapFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setPoolProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setTokenSwapFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"tokenSwapFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"feeRecipient":[{"inputs":[{"internalType":"address","name":"_feeRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"InvalidFeeSender","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"distributor","type":"address"}],"name":"AddFeeDistributor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint16","name":"feeType","type":"uint16"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeRate","type":"uint256"}],"name":"NotifyFees","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"distributor","type":"address"}],"name":"RemoveFeeDistributor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"epochDuration","type":"uint256"}],"name":"SetEpochDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"feeRegistry","type":"address"}],"name":"SetFeeRegistry","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"distributor","type":"address"}],"name":"addFeeDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"distributeFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"epochDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeDistributors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeDistributorsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"feeTokenData","outputs":[{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"epoch","type":"uint256"}],"name":"feeTokensLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"fees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ts","type":"uint256"}],"name":"getEpochStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFeeDistributor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"feeType","type":"uint16"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"feeRate","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"notifyFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"distributor","type":"address"},{"internalType":"bool","name":"updateArray","type":"bool"}],"name":"removeFeeDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_epochDuration","type":"uint256"}],"name":"setEpochDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRegistry","type":"address"}],"name":"setFeeRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"}],"feeRegistry":[{"inputs":[{"internalType":"address","name":"_master","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bool","name":"isWhitelisted","type":"bool"}],"name":"SetSenderWhitelisted","type":"event"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"isFeeSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isSenderWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"isWhitelisted","type":"bool"}],"name":"setSenderWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"forwardRegistry":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"forwarder","type":"address"}],"name":"AddForwarder","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"forwarder","type":"address"}],"name":"RemoveForwarder","type":"event"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"addForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"removeForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"classicPool":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Expired","type":"error"},{"inputs":[],"name":"InsufficientLiquidityMinted","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"Overflow","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reserve0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reserve1","type":"uint256"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"burn","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"_amounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"burnSingle","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"_tokenAmount","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFee","outputs":[{"internalType":"uint24","name":"_protocolFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256","name":"_reserve0","type":"uint256"},{"internalType":"uint256","name":"_reserve1","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"_swapFee","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"invariantLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"permit2","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolType","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"swap","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount","name":"_tokenAmount","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]},"deployedContracts":{"HandsToken":"0x28616647024a2D2bfb7C0a3242AB8cdBE557cE02","Bank":"0x78818E6c0943a0ea558b025cdF7Ca3D4e6500bba","Staking":"0x8F2239BA3Ac708A125059A71d8ca01C1C44e35b5","Hands":"0xAeeFE4874680F21af2EBfe73C180abf54365aB15","Affiliate":"0x67f4455a4aeb357209456AcF97B4E4909917FA96","Session":"0xF326D135BaC6464846CA824e190da033e079b814"},"deployedAbis":{"HandsToken":[{"inputs":[{"internalType":"address","name":"_premintReceiver","type":"address"},{"internalType":"uint256","name":"_premintAmount","type":"uint256"},{"internalType":"uint256","name":"_cap","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"SUPPLY_CAP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"status","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"Bank":[{"inputs":[{"internalType":"address","name":"_stakingContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stakerAmount","type":"uint256"}],"name":"FundsReceived","type":"event"},{"inputs":[],"name":"receiveFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"Staking":[{"inputs":[{"internalType":"address","name":"_handsTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ReceivedFundsForStaking","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addReceivedFundsForStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bankContract","outputs":[{"internalType":"contract Bank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cumulativeRewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReceivedFundsForStaking","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_bankContractAddress","type":"address"}],"name":"setBankContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"stakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakers","outputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"lastCumulativeRewardRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReceivedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unclaimedRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"updateRewardsFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"viewClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewTotalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"Hands":[{"inputs":[{"internalType":"address","name":"_bankContractAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"enum Hands.Outcomes","name":"outcome","type":"uint8"}],"name":"GameOutcome","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"MoveCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"enum Hands.Moves","name":"move","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"MoveRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pointsA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pointsB","type":"uint256"}],"name":"NewRound","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"}],"name":"PlayerCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"}],"name":"PlayerLeft","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"name","type":"bytes32"}],"name":"PlayerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bet","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"first","type":"bool"}],"name":"PlayerWaiting","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"playerA","type":"address"},{"indexed":true,"internalType":"address","name":"playerB","type":"address"}],"name":"PlayersMatched","type":"event"},{"inputs":[],"name":"BET_MIN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_POINTS_PER_ROUND","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MOVE_TIMEOUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMEOUT_MARGIN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"bytes32","name":"encrMove","type":"bytes32"}],"name":"commit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"passwordHash","type":"bytes32"}],"name":"createPasswordMatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"burner","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"bytes32","name":"passwordHash","type":"bytes32"}],"name":"createPasswordMatchWithBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"fundBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getBurner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_burner","type":"address"}],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"password","type":"string"}],"name":"joinPasswordMatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"burner","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"string","name":"password","type":"string"}],"name":"joinPasswordMatchWithBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"leave","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"playerGame","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"register","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"burner","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"}],"name":"registerWithBurner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"string","name":"clearMove","type":"string"}],"name":"reveal","outputs":[{"internalType":"enum Hands.Moves","name":"","type":"uint8"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_burner","type":"address"}],"name":"setBurner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"waitingPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"Affiliate":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"consumer","type":"address"},{"indexed":true,"internalType":"address","name":"affiliate","type":"address"}],"name":"ConsumerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"affiliate","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"affiliate","type":"address"},{"indexed":true,"internalType":"address","name":"consumer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardRecieved","type":"event"},{"inputs":[],"name":"MAX_FEE_SHARE_PER_AFFILIATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"affiliates","outputs":[{"internalType":"uint256","name":"receivedFunds","type":"uint256"},{"internalType":"uint256","name":"lastClaimedBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bankContract","outputs":[{"internalType":"contract Bank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"address","name":"consumer","type":"address"},{"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"calculateAndAddAffiliateShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"consumer","type":"address"}],"name":"getAffiliateOfConsumer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"}],"name":"getConsumersOfAffiliate","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getReceivedFundsForAffiliateInBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"},{"internalType":"uint256","name":"startBlock","type":"uint256"},{"internalType":"uint256","name":"endBlock","type":"uint256"}],"name":"getReceivedFundsForAffiliateInPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliate","type":"address"}],"name":"registerAsConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_bankContract","type":"address"}],"name":"setBankContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalReceived","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"affiliateAddress","type":"address"}],"name":"viewClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"Session":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"OnSession","type":"event"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"}]}}');var at=n(82482),st=n(21832),it=n.n(st),rt=n(15941);class ot{constructor(e){(0,at.Z)(this,"provider",void 0),this.provider=e}async getChainId(){try{const e=new(it())(this.provider),t=await e.eth.getChainId();return t.toString()}catch(e){return e}}async getAccounts(){try{const e=new(it())(this.provider),t=await e.eth.getAccounts();return t}catch(e){return e}}async getBalance(){try{const e=new(it())(this.provider),t=(await e.eth.getAccounts())[0],n=e.utils.fromWei(await e.eth.getBalance(t),"ether");return n}catch(e){return rt.log("error getting balance",e),"0"}}async getBalanceOf(e){try{rt.log("getting balance of",e),rt.log("getting balance of with provider",this.provider);const t=new(it())(this.provider),n=t.utils.fromWei(await t.eth.getBalance(e),"ether");return n}catch(t){return rt.log("error getting balance of",t),"0"}}async sendTransaction(){try{const e=new(it())(this.provider),t=(await e.eth.getAccounts())[0],n=t,a=e.utils.toWei("0.001","ether"),s=await e.eth.sendTransaction({from:t,to:n,value:a,maxPriorityFeePerGas:"5000000",maxFeePerGas:"6000000"});return s}catch(e){return e}}async signMessage(){try{const e=new(it())(this.provider),t=(await e.eth.getAccounts())[0],n="YOUR_MESSAGE",a=await e.eth.personal.sign(n,t,"test password!");return a}catch(e){return e}}async getPrivateKey(){try{const e=await this.provider.request({method:"eth_private_key"});return e}catch(e){return e}}}var lt=n(44870);const dt={None:0,Rock:1,Paper:2,Scissors:3,LoadingMark:4,CheckMark:5},ut={None:0,PlayerA:1,PlayerB:2,Draw:3,PlayerALeft:4,PlayerBLeft:5,PlayerATimeout:6,PlayerBTimeout:7,BothTimeout:8,Cancelled:9},ct={Initial:0,Registering:1,Waiting:2,Matched:3,Sending:4,Sent:5,Revealing:6,Revealed:7,Finished:8},pt="0x1",yt="0x118",mt="0x10e",ht="0x7A69",gt="0x66eed",vt="0xa4ba",ft={[pt]:"https://cloudflare-eth.com",[yt]:"https://testnet.era.zksync.dev",[mt]:"http://localhost:3050/",[ht]:"http://localhost:8545",[gt]:"https://arb-goerli.g.alchemy.com/v2/4nMlurweValICpl10ChbP5LIk39MSwf1",[vt]:"https://nova.arbitrum.io/rpc"},wt=gt,bt="https://arb-goerli.g.alchemy.com/v2/4nMlurweValICpl10ChbP5LIk39MSwf1",kt=34700240,Tt=.05,Ct=120,At='\n<svg fill="#000000" width="100%" height="100%" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg">\n  <path d="M200,76H188V64a35.9767,35.9767,0,0,0-60-26.804A35.96779,35.96779,0,0,0,69.26855,54.54492,35.97777,35.97777,0,0,0,20,88v40a108,108,0,0,0,216,0V112A36.04061,36.04061,0,0,0,200,76ZM152,52a12.01343,12.01343,0,0,1,12,12V76H140V64A12.01343,12.01343,0,0,1,152,52ZM92,64a12,12,0,0,1,24,0v40a12,12,0,0,1-24,0V64ZM44,88a12,12,0,0,1,24,0v16a12,12,0,0,1-24,0Zm168,40A84.003,84.003,0,0,1,44.61035,138.15381,35.95752,35.95752,0,0,0,80,130.804a35.90058,35.90058,0,0,0,43.6499,3.33715,36.31106,36.31106,0,0,0,6.3833,6.36231A51.8053,51.8053,0,0,0,116,176a12,12,0,0,0,24,0,28.03146,28.03146,0,0,1,28-28,12,12,0,0,0,0-24H152a12.01343,12.01343,0,0,1-12-12V100h60a12.01343,12.01343,0,0,1,12,12Z"/>\n</svg>',St='\n<svg fill="#000000" width="100%" height="100%" viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg"><path d="M 25.1289 53.5117 C 33.3789 53.5117 39.1680 49.0352 42.2851 40.2461 L 46.4102 28.6445 C 47.4414 25.7149 46.5039 23.3008 44.0664 22.4102 C 41.8867 21.6133 39.7305 22.5508 38.6992 24.9649 L 37.1758 28.7149 C 37.1289 28.8086 37.0586 28.8789 36.9649 28.8789 C 36.8476 28.8789 36.8008 28.7852 36.8008 28.6680 L 36.8008 9.8711 C 36.8008 7.1289 35.0898 5.4180 32.4649 5.4180 C 31.5039 5.4180 30.6367 5.7461 29.9805 6.3555 C 29.6758 3.9649 28.1289 2.4883 25.8086 2.4883 C 23.5351 2.4883 21.9414 4.0117 21.5898 6.3086 C 21.0039 5.7227 20.1602 5.4180 19.3164 5.4180 C 16.8789 5.4180 15.2617 7.1055 15.2617 9.7071 L 15.2617 12.3086 C 14.6289 11.6524 13.6914 11.3008 12.6836 11.3008 C 10.2461 11.3008 8.5586 13.1055 8.5586 15.7305 L 8.5586 35.8633 C 8.5586 46.8320 15.2149 53.5117 25.1289 53.5117 Z M 25.0117 50.2539 C 16.7149 50.2539 11.6524 44.9336 11.6524 35.4883 L 11.6524 16.0586 C 11.6524 15.0742 12.2851 14.3711 13.2695 14.3711 C 14.2305 14.3711 14.9336 15.0742 14.9336 16.0586 L 14.9336 28.0352 C 14.9336 28.9024 15.6367 29.4883 16.3867 29.4883 C 17.1836 29.4883 17.9102 28.9024 17.9102 28.0352 L 17.9102 10.1289 C 17.9102 9.1211 18.5430 8.4414 19.5039 8.4414 C 20.4883 8.4414 21.1680 9.1211 21.1680 10.1289 L 21.1680 26.8398 C 21.1680 27.7071 21.8711 28.2930 22.6445 28.2930 C 23.4414 28.2930 24.1680 27.7071 24.1680 26.8398 L 24.1680 7.2227 C 24.1680 6.2383 24.8242 5.5117 25.8086 5.5117 C 26.7461 5.5117 27.4258 6.2383 27.4258 7.2227 L 27.4258 26.8398 C 27.4258 27.6602 28.0820 28.2930 28.9024 28.2930 C 29.6992 28.2930 30.4024 27.6602 30.4024 26.8398 L 30.4024 10.1289 C 30.4024 9.1211 31.0820 8.4414 32.0430 8.4414 C 33.0273 8.4414 33.6836 9.1211 33.6836 10.1289 L 33.6836 33.1914 C 33.6836 34.2695 34.3633 35.0430 35.3476 35.0430 C 36.1914 35.0430 36.8945 34.6680 37.4336 33.4961 L 40.6211 26.3711 C 41.0430 25.3633 41.8867 24.8476 42.7539 25.1758 C 43.6914 25.5508 44.0195 26.4414 43.5742 27.6602 L 39.4258 39.2383 C 36.5664 47.2305 31.5508 50.2539 25.0117 50.2539 Z"/></svg>\n',Et='\n<svg fill="#000000" width="100%" height="100%" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 15 2 C 13.355469 2 12 3.355469 12 5 L 12 6.53125 L 11.875 6.125 C 11.398438 4.550781 9.699219 3.648438 8.125 4.125 C 6.550781 4.601563 5.648438 6.300781 6.125 7.875 L 8.71875 16.3125 C 8.53125 16.386719 8.328125 16.472656 8.125 16.59375 C 7.289063 17.09375 6.34375 18.105469 6.0625 19.71875 C 5.851563 20.914063 6.082031 21.964844 6.25 22.53125 C 6.25 22.542969 6.25 22.550781 6.25 22.5625 L 7.03125 25.0625 C 7.933594 27.996094 10.652344 30 13.71875 30 L 19 30 C 22.855469 30 26 26.855469 26 23 L 26 13.09375 C 26 13.050781 26 13.011719 26 12.96875 C 26 12.949219 26 12.925781 26 12.90625 C 26 12.894531 26 12.886719 26 12.875 C 25.992188 12.84375 25.980469 12.8125 25.96875 12.78125 C 25.878906 11.679688 25.210938 10.652344 24.125 10.21875 C 23.371094 9.917969 22.578125 9.960938 21.875 10.25 C 21.550781 9.636719 21.027344 9.117188 20.34375 8.84375 C 19.558594 8.53125 18.722656 8.582031 18 8.90625 L 18 5 C 18 3.355469 16.644531 2 15 2 Z M 15 4 C 15.566406 4 16 4.433594 16 5 L 16 11.59375 L 14.96875 14.21875 C 14.820313 14.589844 14.75 14.992188 14.75 15.375 L 10.65625 15.90625 L 8.0625 7.28125 C 7.898438 6.742188 8.179688 6.195313 8.71875 6.03125 C 9.257813 5.867188 9.804688 6.179688 9.96875 6.71875 L 12.03125 13.5625 L 13.15625 13.21875 L 14 13.21875 L 14 5 C 14 4.433594 14.433594 4 15 4 Z M 19.1875 10.625 C 19.316406 10.621094 19.464844 10.636719 19.59375 10.6875 C 20.117188 10.898438 20.367188 11.476563 20.15625 12 L 19.09375 14.65625 L 19.09375 14.6875 L 18.6875 15.71875 C 18.667969 15.773438 18.621094 15.796875 18.59375 15.84375 C 18.085938 15.449219 17.445313 15.195313 16.78125 15.1875 C 16.792969 15.113281 16.78125 15.042969 16.8125 14.96875 L 18.3125 11.25 C 18.46875 10.855469 18.800781 10.632813 19.1875 10.625 Z M 22.96875 12 C 23.101563 12 23.242188 12.011719 23.375 12.0625 C 23.769531 12.21875 23.992188 12.574219 24 12.96875 C 24 12.980469 24 12.988281 24 13 C 24 13.121094 23.984375 13.253906 23.9375 13.375 L 22.8125 16.15625 C 22.601563 16.679688 22.023438 16.929688 21.5 16.71875 C 20.976563 16.507813 20.757813 15.929688 20.96875 15.40625 L 22.03125 12.75 C 22.046875 12.710938 22.046875 12.664063 22.0625 12.625 C 22.167969 12.363281 22.359375 12.164063 22.59375 12.0625 C 22.710938 12.011719 22.835938 12 22.96875 12 Z M 16.5 17.15625 C 17.027344 17.03125 17.53125 17.347656 17.65625 17.875 C 17.734375 18.199219 17.691406 18.363281 17.59375 18.53125 C 17.496094 18.699219 17.289063 18.90625 16.84375 19.0625 L 12 20.3125 C 11.703125 20.390625 11.460938 20.601563 11.339844 20.878906 C 11.21875 21.160156 11.230469 21.480469 11.375 21.75 L 12.28125 23.40625 C 12.546875 23.890625 13.15625 24.066406 13.640625 23.796875 C 14.125 23.53125 14.300781 22.921875 14.03125 22.4375 L 13.75 21.9375 L 17.4375 20.96875 C 17.46875 20.960938 17.5 20.949219 17.53125 20.9375 C 18.304688 20.667969 18.925781 20.207031 19.3125 19.5625 C 19.628906 19.035156 19.75 18.421875 19.6875 17.8125 C 19.980469 18.128906 20.355469 18.390625 20.78125 18.5625 C 21.925781 19.019531 23.183594 18.730469 24 17.90625 L 24 23 C 24 25.773438 21.773438 28 19 28 L 13.71875 28 C 11.519531 28 9.585938 26.570313 8.9375 24.46875 L 8.1875 21.96875 C 8.105469 21.699219 7.941406 20.753906 8.0625 20.0625 C 8.25 18.988281 8.71875 18.574219 9.15625 18.3125 C 9.59375 18.050781 9.90625 18.03125 9.90625 18.03125 C 9.925781 18.03125 9.949219 18.03125 9.96875 18.03125 L 16.40625 17.1875 C 16.4375 17.179688 16.46875 17.167969 16.5 17.15625 Z"/></svg>\n';var Mt=n(15941);const Pt={data(){return{Rock:At,Paper:St,Scissors:Et}},props:{move:Number,isSmall:{default:!1},isNormal:{default:!1}},created(){Mt.log(this.move)}},It=Object.assign(Pt,{__name:"GameMove",setup(e){return(t,n)=>e.move==(0,lt.SU)(dt).Rock?((0,s.wg)(),(0,s.iD)("div",{key:0,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Rock"])},null,2)):e.move==(0,lt.SU)(dt).Paper?((0,s.wg)(),(0,s.iD)("div",{key:1,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Paper"])},null,2)):e.move==(0,lt.SU)(dt).Scissors?((0,s.wg)(),(0,s.iD)("div",{key:2,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Scissors"])},null,2)):e.move==(0,lt.SU)(dt).LoadingMark?((0,s.wg)(),(0,s.iD)("div",{key:3,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","None"])},null,2)):e.move==(0,lt.SU)(dt).CheckMark?((0,s.wg)(),(0,s.iD)("div",{key:4,class:(0,i.C_)([e.isSmall?"small":e.isNormal?"normal":"large","Rock"])},null,2)):(0,s.kq)("",!0)}}),_t=It,Rt=_t,Bt=e=>((0,s.dD)("data-v-5cb811c5"),e=e(),(0,s.Cn)(),e),Lt={style:{margin:"120px 50px",overflow:"auto"}},Ft={style:{"border-collapse":"collapse"}},xt=Bt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Score")])],-1))),Wt=Bt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Time")])],-1))),Ot=Bt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Player 1")])],-1))),Gt=Bt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Player 2")])],-1))),Ht=Bt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"prize-symbol-table"}),(0,s._)("p",null,"Prize")])],-1))),Dt=Bt((()=>(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"rounds-symbol-table"}),(0,s._)("p",null,"Rounds")])],-1))),Nt={class:"tabs-container"},zt={class:"tabs"},Ut=["onClick"],$t={class:"score"},Jt={class:"time"},jt={class:"player"},qt={key:0,class:"grey winnings"},Vt={key:1,class:"winnings red"},Yt={key:2,class:"winnings red"},Zt={key:3,class:"winnings green"},Kt={class:"blue"},Qt={key:4,class:"winnings red"},Xt={class:"player"},en={key:0,class:"winnings red"},tn={key:1,class:"winnings red"},nn={key:2,class:"winnings green"},an={class:"blue"},sn={key:3,class:"winnings red"},rn={class:"prize"},on={class:"round",colspan:"2"},ln={class:"rounds-container"};function dn(e,t,n,a,r,o){const l=(0,s.up)("profile-item"),d=(0,s.up)("game-move");return(0,s.wg)(),(0,s.iD)("div",Lt,[(0,s._)("table",Ft,[(0,s._)("thead",null,[(0,s._)("tr",null,[xt,Wt,Ot,Gt,Ht,Dt,(0,s._)("th",null,[(0,s._)("div",Nt,[(0,s._)("div",zt,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(r.tabs,((e,t)=>((0,s.wg)(),(0,s.iD)("button",{key:t,onClick:t=>r.selectedTab=e,class:(0,i.C_)({active:r.selectedTab===e})},(0,i.zw)(e),11,Ut)))),128))])])])])]),(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>{var n;return(0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",$t,(0,i.zw)(e.points[e.playerA])+" : "+(0,i.zw)(null!==(n=e.points[e.playerB])&&void 0!==n?n:0),1),(0,s._)("td",Jt,(0,i.zw)(o.timeString(e.time)),1),(0,s._)("td",jt,[(0,s._)("div",null,[(0,s.Wm)(l,{address:e.playerA},null,8,["address"]),o.wasCancelled(e)?((0,s.wg)(),(0,s.iD)("div",qt,"Cancelled")):o.isTimedOut(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",Vt,"Timeout")):o.isLeaver(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",Yt,"Left")):o.isWinner(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",Zt,[(0,s.Uk)("+"+(0,i.zw)(e.bet)+" ETH ",1),(0,s._)("span",Kt,"(-"+(0,i.zw)(o.getApplicationFee(e))+")",1)])):o.isLoser(e,e.playerA)?((0,s.wg)(),(0,s.iD)("div",Qt,(0,i.zw)(o.getPlayerWinnings(e,e.playerA))+" ETH ",1)):(0,s.kq)("",!0)])]),(0,s._)("td",Xt,[(0,s._)("div",null,[(0,s.Wm)(l,{address:e.playerB},null,8,["address"]),o.isLeaver(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",en,"Left")):o.isTimedOut(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",tn,"Timeout")):o.isWinner(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",nn,[(0,s.Uk)(" +"+(0,i.zw)(e.bet)+" ETH ",1),(0,s._)("span",an,"(-"+(0,i.zw)(o.getApplicationFee(e))+")",1)])):o.isLoser(e,e.playerB)?((0,s.wg)(),(0,s.iD)("div",sn,(0,i.zw)(o.getPlayerWinnings(e,e.playerB))+" ETH ",1)):(0,s.kq)("",!0)])]),(0,s._)("td",rn,(0,i.zw)(e.bet)+" ETH",1),(0,s._)("td",on,[(0,s._)("ul",ln,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(e.moves,((t,n)=>((0,s.wg)(),(0,s.iD)("div",{key:n,class:"rounds-list"},[Object.keys(t).length>1?((0,s.wg)(),(0,s.iD)(s.HY,{key:0},[(0,s.Wm)(d,{isSmall:!0,move:t[e.playerA]},null,8,["move"]),(0,s.Uk)(" : "),(0,s.Wm)(d,{isSmall:!0,move:t[e.playerB]},null,8,["move"])],64)):(0,s.kq)("",!0)])))),128))])])])})),128))])])])}const un={class:"profile-mini",ref:"profileMini"};function cn(e,t,n,a,r,o){const l=(0,s.up)("router-link");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Wm)(l,{class:"player-item",to:"/profile/"+n.address},{default:(0,s.w5)((()=>[(0,s._)("div",un,null,512),(0,s._)("p",null,(0,i.zw)(o.user),1)])),_:1},8,["to"])])}var pn=n(8606),yn=n.n(pn),mn=n(15941);const hn={props:{address:{type:String,required:!0},alwaysShow:{type:Boolean,default:!1}},computed:{isYou(){var e,t;return mn.log("is you",null===(e=this.address)||void 0===e?void 0:e.toLowerCase(),this.$store.state.activeAccount.toLowerCase()),(null===(t=this.address)||void 0===t?void 0:t.toLowerCase())==this.$store.state.activeAccount.toLowerCase()},user(){return this.isYou&&!this.alwaysShow?"You":this.truncateAddress(this.address)}},methods:{updateJazzicon(){var e;const t=parseInt(null===(e=this.address)||void 0===e?void 0:e.slice(2,10),16),n=yn()(32,t),a=this.$refs.profileMini;a.innerHTML="",a.appendChild(n),mn.log("updated jazzicon")},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}},watch:{address:"updateJazzicon"},mounted(){this.updateJazzicon()}};var gn=n(40089);const vn=(0,gn.Z)(hn,[["render",cn]]),fn=vn;var wn=n(15941);function bn(e,t){const n=t-e;return n<60?n+" secs ago":n<3600?Math.floor(n/60)+" mins ago":n<86400?Math.floor(n/3600)+" hr ago":Math.floor(n/86400)+" days ago"}function kn(e){var t=document.createElement("textarea");t.style.position="fixed",t.style.top=0,t.style.left=0,t.style.width="2em",t.style.height="2em",t.style.padding=0,t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent",t.value=e,document.body.appendChild(t),t.focus(),t.select();try{var n=document.execCommand("copy"),a=n?"successful":"unsuccessful";wn.log("Copying text command was "+a)}catch(s){wn.log("Oops, unable to copy")}document.body.removeChild(t)}var Tn=n(15941);const Cn=.05,An={components:{GameMove:Rt,ProfileItem:fn},data(){return{tabs:["Completed","Active","Pending"],selectedTab:"Completed"}},props:{activeData:{type:Array,default:()=>Array(10).fill({score:"Score",time:(new Date).toLocaleString(),player1:"Player 1",player2:"Player 2",prize:"Prize",rounds:["Round 1","Round 2"]})},completedData:{type:Array,default:()=>Array(10).fill({score:"Score",time:(new Date).toLocaleString(),player1:"Player 1",player2:"Player 2",prize:"Completed",rounds:["Round 1","Round 2"]})},pendingData:{type:Array,default:()=>Array(10).fill({score:"Score",time:(new Date).toLocaleString(),player1:"Player 1",player2:"Player 2",prize:"Pending",rounds:["Round 1","Round 2"]})}},computed:{selectedData(){switch(Tn.log("selected tab",this.selectedTab),this.selectedTab){case"Active":return Tn.log("active data",this.activeData),this.activeData;case"Completed":return Tn.log("completed data",this.completedData),this.completedData;case"Pending":return Tn.log("pending data",this.pendingData),this.pendingData;default:return[]}}},methods:{truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))},timeString(e){const t=this.$store.state.currentTime;return bn(e,t)},getWinnings(e){return(e-2*e*Cn).toFixed(4)},getApplicationFee(e){const t=e.bet;return 2*t*Cn},getPlayerPoints(e,t){return e.points[t]},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Tn.log("getting player winnings",e,t,s,i,r),i==ut.Cancelled?(Tn.log("cancelled"),0):i==ut.PlayerALeft&&r?-a:i==ut.PlayerBLeft&&r?s:i!=ut.PlayerALeft||r?i!=ut.PlayerBLeft||r?i==ut.Draw?0:i==ut.PlayerA&&r?s:i==ut.PlayerB&&r?-a:i!=ut.PlayerA||r?i!=ut.PlayerB||r?i==ut.PlayerATimeout&&r?-a:i==ut.PlayerBTimeout&&r?s:i!=ut.PlayerATimeout||r?i!=ut.PlayerBTimeout||r?i==ut.BothTimeout?0:void 0:-a:s:s:-a:-a:s},wasCancelled(e){const t=e.outcome;return t==ut.Cancelled},isLeaver(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return a?e.outcome==ut.PlayerALeft:e.outcome==ut.PlayerBLeft},isTimedOut(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return(a?e.outcome==ut.PlayerATimeout:e.outcome==ut.PlayerBTimeout)||e.outcome==ut.BothTimeout},isWinner(e,t){const n=this.getPlayerWinnings(e,t);return Tn.log("getting winnings for player",n,t),n>0},isLoser(e,t){const n=this.getPlayerWinnings(e,t);return n<0},getColorBasedOnWinnings(e,t){const n=this.getPlayerWinnings(e,t);return n>0?"green":n<0?"red":"grey"}}},Sn=(0,gn.Z)(An,[["render",dn],["__scopeId","data-v-5cb811c5"]]),En=Sn,Mn={key:0,class:"modal-container"},Pn={class:"modal"},In={key:0,class:"trophy"},_n={key:1},Rn={style:{color:"#E19885","font-weight":"bold"}},Bn={style:{color:"#c5edff","font-weight":"bold"}},Ln={key:2},Fn={style:{color:"#E19885","font-weight":"bold"}},xn={key:3,style:{"margin-top":"60px"}},Wn={style:{color:"#E19885","font-weight":"bold"}},On={key:4},Gn={key:5},Hn={key:6},Dn={key:7},Nn={key:8,style:{margin:"0","margin-bottom":"24px",padding:"0"}},zn={style:{color:"#E19885"}},Un={key:9,style:{margin:"0","margin-bottom":"24px",padding:"0"}},$n={style:{color:"#E19885"}},Jn={class:"modal-button-holder"};function jn(e,t,n,r,o,l){return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[n.show?((0,s.wg)(),(0,s.iD)("div",Mn,[(0,s._)("div",Pn,[l.isWinner?((0,s.wg)(),(0,s.iD)("div",In)):(0,s.kq)("",!0),l.isWinner?((0,s.wg)(),(0,s.iD)("h4",_n,[(0,s.Uk)("You won! "),(0,s._)("span",Rn,(0,i.zw)(l.getBaseWinnings(n.bet))+" ETH",1),(0,s.Uk)(),(0,s._)("span",Bn," (-"+(0,i.zw)(l.getApplicationFee(n.bet))+" ETH)",1)])):l.isDraw?((0,s.wg)(),(0,s.iD)("h4",Ln,[(0,s.Uk)("Nobody wins. "),(0,s._)("span",Fn,(0,i.zw)(n.bet)+" ETH",1)])):((0,s.wg)(),(0,s.iD)("h4",xn,[(0,s.Uk)("You lose! "),(0,s._)("span",Wn,(0,i.zw)(n.bet)+" ETH",1)])),l.isLeaver&&!l.noOneLeft?((0,s.wg)(),(0,s.iD)("p",On,"Because you left the game!")):l.opponentIsLeaver&&!l.noOneLeft?((0,s.wg)(),(0,s.iD)("p",Gn,"Because your opponent left the game! ")):l.isTimedOut?((0,s.wg)(),(0,s.iD)("p",Hn,"Because you didn't make a move in time!")):l.opponentTimedOut?((0,s.wg)(),(0,s.iD)("p",Dn,"Because your opponent didn't make a move in time!")):(0,s.kq)("",!0),l.isWinner?((0,s.wg)(),(0,s.iD)("h1",Nn,[(0,s._)("span",zn,(0,i.zw)(n.winnerPoints),1),(0,s.Uk)(" : "+(0,i.zw)(n.loserPoints),1)])):((0,s.wg)(),(0,s.iD)("h1",Un,[(0,s._)("span",$n,(0,i.zw)(n.loserPoints),1),(0,s.Uk)(" : "+(0,i.zw)(n.winnerPoints),1)])),(0,s._)("div",Jn,[(0,s._)("button",{class:"button-light",onClick:t[0]||(t[0]=(...e)=>l.toggleShow&&l.toggleShow(...e))}," Homepage "),(0,s._)("button",{class:"button-dark",onClick:t[1]||(t[1]=(...e)=>l.toggleShow&&l.toggleShow(...e))}," Close ")])])])):(0,s.kq)("",!0)])),_:1})}var qn=n(15941);const Vn=.05,Yn={model:{prop:"show",event:"update:show"},props:{player:{type:String,default:null},show:{type:Boolean,default:!1},win:{type:Boolean,default:!0},winnerPoints:{type:Number,default:0},loserPoints:{type:Number,default:0},bet:{type:Number,default:0},leaver:{type:String,default:null},timeout:{type:String,default:null}},methods:{getBaseWinnings(e){return e},getWinnings(e){return(e-2*e*Vn).toFixed(4)},getApplicationFee(e){return 2*e*Vn},toggleShow(){this.$emit("update:show",!this.show)}},computed:{isWinner(){return this.win||null!=this.leaver&&this.leaver.toLowerCase()!=this.player.toLowerCase()||this.opponentTimedOut&&!this.isTimedOut},isDraw(){return"both"==this.timeout},isLeaver(){var e,t;return qn.log("Modal stats: isLeaver: "+this.leaver+" player: "+this.player),(null===(e=this.leaver)||void 0===e?void 0:e.toLowerCase())==(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())},isTimedOut(){var e,t;return(null===(e=this.timeout)||void 0===e?void 0:e.toLowerCase())==(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())||"both"==this.timeout},opponentIsLeaver(){var e,t;return qn.log("Modal stats: isLeaver: "+this.leaver+" player: "+this.player),(null===(e=this.leaver)||void 0===e?void 0:e.toLowerCase())!=(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())&&null!=this.leaver},opponentTimedOut(){var e,t;return(null===(e=this.timeout)||void 0===e?void 0:e.toLowerCase())!=(null===(t=this.player)||void 0===t?void 0:t.toLowerCase())&&null!=this.timeout},bothTimedOut(){return null!=this.leaver&&null==this.player},noOneLeft(){return qn.log("Modal stats: isLeaver: "+this.leaver+" player: "+this.player),null==this.leaver}},created(){qn.log(this.move)}},Zn=(0,gn.Z)(Yn,[["render",jn],["__scopeId","data-v-78ba4558"]]),Kn=Zn;var Qn=n(68451),Xn=n(30066),ea=n(57138),ta=n(20065),na=n(15941);const aa=(0,ta.MT)({state(){let e={},t=localStorage.getItem("games");return t&&(e=JSON.parse(t)),{loggedin:!1,loading:!1,loginButtonStatus:"",connecting:!1,activeAccount:"",balance:"0",balances:{},provider:null,web3auth:null,onboard:null,wallets:null,isMetamask:!1,web3ReadProvider:new(it())(new(it().providers.HttpProvider)(bt)),games:e,isInGame:!1,isJoiningPasswordMatch:!1,joiningPassword:null,joiningBetAmount:null,leaveGame:()=>{na.log("leaveGame not set")},addFundsMessage:"Adding Funds...",stakeContract:null,handsTokenContract:null,currentTime:Math.floor(Date.now()/1e3),triggerProcessEvents:!1,isFetchingEvents:!1,lastFetchedBlock:kt,handledEventIds:new Set,playerRegisteredEvents:[],playerWaitingEvents:[],playersMatchedEvents:[],moveCommittedEvents:[],moveRevealedEvents:[],newRoundEvents:[],gameOutcomeEvents:[],playerCancelledEvents:[],playerLeftEvents:[],stakeEvents:[],unstakeEvents:[],recievedFundsEvents:[]}},getters:{balance:e=>t=>e.balances[t]||"0"},mutations:{setLoggedIn(e,t){e.loggedin=t},setLoading(e,t){e.loading=t},setLoginButtonStatus(e,t){e.loginButtonStatus=t},setConnecting(e,t){e.connecting=t},setActiveAccount(e,t){e.activeAccount=t},setBalance(e,t){e.balance=t},setBalances(e,t){e.balances=t},setProvider(e,t){e.provider=t},setWeb3Auth(e,t){e.web3auth=t},setIsMetamask(e,t){e.isMetamask=t},setOnboard(e,t){e.onboard=t},setWallets(e,t){e.wallets=t},setGames(e,t){e.games=t,localStorage.setItem("games",JSON.stringify(e.games))},setIsInGame(e,t){e.isInGame=t},setLeaveGame(e,t){e.leaveGame=t},setIsJoiningPasswordMatch(e,t){e.isJoiningPasswordMatch=t},setJoiningPassword(e,t){e.joiningPassword=t},setJoiningBetAmount(e,t){e.joiningBetAmount=t},setAddFundsMessage(e,t){e.addFundsMessage=t},setHandsTokenContract(e,t){e.handsTokenContract=t},setStakeContract(e,t){e.stakeContract=t},setCurrentTime(e,t){e.currentTime=t},triggerProcessEvents(e,t){e.triggerProcessEvents=t},setIsFetchingEvents(e,t){e.isFetchingEvents=t},setLastFetchBlock(e,t){e.lastFetchedBlock=t},setHandledEventIds(e,t){e.handledEventIds=t},setPlayerRegisteredEvents(e,t){e.playerRegisteredEvents=t},setPlayerWaitingEvents(e,t){e.playerWaitingEvents=t},setPlayersMatchedEvents(e,t){e.playersMatchedEvents=t},setMoveCommittedEvents(e,t){e.moveCommittedEvents=t},setMoveRevealedEvents(e,t){e.moveRevealedEvents=t},setNewRoundEvents(e,t){e.newRoundEvents=t},setGameOutcomeEvents(e,t){e.gameOutcomeEvents=t},setPlayerCancelledEvents(e,t){e.playerCancelledEvents=t},setPlayerLeftEvents(e,t){e.playerLeftEvents=t},setStakeEvents(e,t){e.stakeEvents=t},setUnstakeEvents(e,t){e.unstakeEvents=t},setRecievedFundsEvents(e,t){e.recievedFundsEvents=t}},actions:{setLoggedIn({commit:e},t){e("setLoggedIn",t)},setLoading({commit:e},t){e("setLoading",t)},setLoginButtonStatus({commit:e},t){e("setLoginButtonStatus",t)},setConnecting({commit:e},t){e("setConnecting",t)},setActiveAccount({commit:e},t){e("setActiveAccount",t)},setBalance({commit:e},t){e("setBalance",t)},setProvider({commit:e},t){e("setProvider",t),na.log("setProvider",t)},setWeb3Auth({commit:e},t){e("setWeb3Auth",t)},setIsMetamask({commit:e},t){e("setIsMetamask",t)},async setBalanceOf({commit:e,state:t},n){const a=new ot(t.provider),s=await a.getBalanceOf(n);let i={...t.balances};i[n.toLowerCase()]=s,na.log("balances",s),e("setBalances",i)},async login({commit:e,state:t}){if(!t.onboard)return void na.error("Onboard not set");e("setLoading",!0);const n=await t.onboard.connectWallet();na.log("wallets",n),e("setWallets",n),n[0]?(await t.onboard.setChain({chainId:wt}),e("setLoggedIn",!0),e("setProvider",n[0].provider),e("setIsMetamask",!0)):e("setLoggedIn",!1)},async loginWeb3Auth({commit:e,state:t}){na.log("loginWeb3Auth");const n=t.web3auth;if(!n)return void na.error("web3auth not set");const a=await n.connect();aa.dispatch("setLoading",!0),aa.dispatch("setProvider",a),n.provider&&(aa.dispatch("setProvider",n.provider),na.log("setProvider",n.provider),aa.dispatch("setLoggedIn",!0)),"metamask"===n.connectedAdapterName&&aa.dispatch("setIsMetamask",!0)},setGames({commit:e},t){e("setGames",t)},setIsInGame({commit:e},t){e("setIsInGame",t)},setLeaveGame({commit:e},t){e("setLeaveGame",t)},setIsJoiningPasswordMatch({commit:e},t){e("setIsJoiningPasswordMatch",t)},setJoiningPassword({commit:e},t){e("setJoiningPassword",t)},setStakeContract({commit:e},t){e("setStakeContract",t)},setHandsTokenContract({commit:e},t){e("setHandsTokenContract",t)},async stake({commit:e,state:t},n){try{const e=new(it())(t.provider),a=e.utils.toWei("0.1","gwei"),s=3e7,i=(await t.handsTokenContract.methods.approve(nt.deployedContracts.Staking,e.utils.toWei(n,"ether")).send({from:t.activeAccount,gasPrice:a,gasLimit:s}),await t.stakeContract.methods.stake(e.utils.toWei(n,"ether")).send({from:t.activeAccount,gasPrice:a,gasLimit:s}));return await e.eth.getTransactionReceipt(i.transactionHash),na.log("Staked",i),i}catch(a){return na.error("Error staking. Message:",a),a&&na.error("Error reason:",a),na.error("Error stack trace:",a),a}},async unstake({commit:e,state:t},n){try{const e=new(it())(t.provider),a=e.utils.toWei("0.1","gwei"),s=3e7,i=await t.stakeContract.methods.unstake(e.utils.toWei(n,"ether")).send({from:t.activeAccount,gasPrice:a,gasLimit:s});return await e.eth.getTransactionReceipt(i.transactionHash),na.log("Unstaked",i),i}catch(a){return na.error("Error unstaking. Message:",a),a&&na.error("Error reason:",a),na.error("Error stack trace:",a),a}},setTime({commit:e,state:t}){setInterval((()=>{e("setCurrentTime",Math.floor(Date.now()/1e3))}),1e3)},addEvent({commit:e,state:t},{eventName:n,event:a}){switch(n){case"PlayerRegistered":e("setPlayerRegisteredEvents",[...t.playerRegisteredEvents,a]),localStorage.setItem("playerRegisteredEvents",JSON.stringify(t.playerRegisteredEvents));break;case"PlayerWaiting":e("setPlayerWaitingEvents",[...t.playerWaitingEvents,a]),localStorage.setItem("playerWaitingEvents",JSON.stringify(t.playerWaitingEvents));break;case"PlayersMatched":e("setPlayersMatchedEvents",[...t.playersMatchedEvents,a]),localStorage.setItem("playersMatchedEvents",JSON.stringify(t.playersMatchedEvents));break;case"MoveCommitted":e("setMoveCommittedEvents",[...t.moveCommittedEvents,a]),localStorage.setItem("moveCommittedEvents",JSON.stringify(t.moveCommittedEvents));break;case"MoveRevealed":e("setMoveRevealedEvents",[...t.moveRevealedEvents,a]),localStorage.setItem("moveRevealedEvents",JSON.stringify(t.moveRevealedEvents));break;case"NewRound":e("setNewRoundEvents",[...t.newRoundEvents,a]),localStorage.setItem("newRoundEvents",JSON.stringify(t.newRoundEvents));break;case"GameOutcome":e("setGameOutcomeEvents",[...t.gameOutcomeEvents,a]),localStorage.setItem("gameOutcomeEvents",JSON.stringify(t.gameOutcomeEvents));break;case"PlayerCancelled":e("setPlayerCancelledEvents",[...t.playerCancelledEvents,a]),localStorage.setItem("playerCancelledEvents",JSON.stringify(t.playerCancelledEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;case"PlayerLeft":e("setPlayerLeftEvents",[...t.playerLeftEvents,a]),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents));break;default:break}},cacheEvents({commit:e,state:t}){localStorage.setItem("playerRegisteredEvents",JSON.stringify(t.playerRegisteredEvents)),localStorage.setItem("playerWaitingEvents",JSON.stringify(t.playerWaitingEvents)),localStorage.setItem("playersMatchedEvents",JSON.stringify(t.playersMatchedEvents)),localStorage.setItem("moveCommittedEvents",JSON.stringify(t.moveCommittedEvents)),localStorage.setItem("moveRevealedEvents",JSON.stringify(t.moveRevealedEvents)),localStorage.setItem("newRoundEvents",JSON.stringify(t.newRoundEvents)),localStorage.setItem("gameOutcomeEvents",JSON.stringify(t.gameOutcomeEvents)),localStorage.setItem("playerCancelledEvents",JSON.stringify(t.playerCancelledEvents)),localStorage.setItem("playerLeftEvents",JSON.stringify(t.playerLeftEvents)),localStorage.setItem("stakeEvents",JSON.stringify(t.stakeEvents)),localStorage.setItem("unstakeEvents",JSON.stringify(t.unstakeEvents)),localStorage.setItem("recievedFundsEvents",JSON.stringify(t.recievedFundsEvents))},uncacheEvents({commit:e,state:t}){e("setPlayerRegisteredEvents",JSON.parse(localStorage.getItem("playerRegisteredEvents")||"[]")),e("setPlayerWaitingEvents",JSON.parse(localStorage.getItem("playerWaitingEvents")||"[]")),e("setPlayersMatchedEvents",JSON.parse(localStorage.getItem("playersMatchedEvents")||"[]")),e("setMoveCommittedEvents",JSON.parse(localStorage.getItem("moveCommittedEvents")||"[]")),e("setMoveRevealedEvents",JSON.parse(localStorage.getItem("moveRevealedEvents")||"[]")),e("setNewRoundEvents",JSON.parse(localStorage.getItem("newRoundEvents")||"[]")),e("setGameOutcomeEvents",JSON.parse(localStorage.getItem("gameOutcomeEvents")||"[]")),e("setPlayerCancelledEvents",JSON.parse(localStorage.getItem("playerCancelledEvents")||"[]")),e("setPlayerLeftEvents",JSON.parse(localStorage.getItem("playerLeftEvents")||"[]")),e("setStakeEvents",JSON.parse(localStorage.getItem("stakeEvents")||"[]")),e("setUnstakeEvents",JSON.parse(localStorage.getItem("unstakeEvents")||"[]")),e("setRecievedFundsEvents",JSON.parse(localStorage.getItem("recievedFundsEvents")||"[]"))},initLastFetchedBlock({commit:e}){const t=localStorage.getItem("lastFetchedBlock");t&&e("setLastFetchBlock",t)},setLastFetchBlock({commit:e,state:t},n){e("setLastFetchBlock",n),localStorage.setItem("lastFetchedBlock",n)},initHandledEventIds({commit:e}){const t=localStorage.getItem("handledEventIds");t&&e("setHandledEventIds",new Set(JSON.parse(t)))},setHandledEventIds({commit:e,state:t},n){e("setHandledEventIds",n),localStorage.setItem("handledEventIds",JSON.stringify(Array.from(n)))},addHandledEventId({commit:e,state:t},n){const a=new Set(t.handledEventIds);a.add(n),e("setHandledEventIds",a)},async fetchEvents({commit:e,state:t,dispatch:n}){e("setIsFetchingEvents",!0),n("initLastFetchedBlock"),n("initHandledEventIds"),n("uncacheEvents");const a=t.web3ReadProvider,s=new a.eth.Contract(nt.deployedAbis.Hands,nt.deployedContracts.Hands),i=new a.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),r=t.lastFetchedBlock,o=await a.eth.getBlockNumber(),l=1e6;let d=r,u=Math.min(d+l,o);while(d<=o){na.log("fetched fetching events from block",d,"to block",u);const a=await s.getPastEvents("PlayerRegistered",{fromBlock:d,toBlock:u}),r=await s.getPastEvents("PlayerWaiting",{fromBlock:d,toBlock:u}),c=await s.getPastEvents("PlayersMatched",{fromBlock:d,toBlock:u}),p=await s.getPastEvents("MoveCommitted",{fromBlock:d,toBlock:u}),y=await s.getPastEvents("MoveRevealed",{fromBlock:d,toBlock:u}),m=await s.getPastEvents("NewRound",{fromBlock:d,toBlock:u}),h=await s.getPastEvents("GameOutcome",{fromBlock:d,toBlock:u}),g=await s.getPastEvents("PlayerCancelled",{fromBlock:d,toBlock:u}),v=await s.getPastEvents("PlayerLeft",{fromBlock:d,toBlock:u}),f=await i.getPastEvents("Staked",{fromBlock:d,toBlock:u}),w=await i.getPastEvents("Unstaked",{fromBlock:d,toBlock:u}),b=await i.getPastEvents("ReceivedFundsForStaking",{fromBlock:d,toBlock:u});na.log("fetched",a.length,"PlayerRegistered events"),na.log("fetched",r.length,"PlayerWaiting events"),na.log("fetched",c.length,"PlayersMatched events"),na.log("fetched",p.length,"MoveCommitted events"),na.log("fetched",y.length,"MoveRevealed events"),na.log("fetched",m.length,"NewRound events"),na.log("fetched",h.length,"GameOutcome events"),na.log("fetched",g.length,"PlayerCancelled events"),na.log("fetched",v.length,"PlayerLeft events"),na.log("fetched",f.length,"Staked events"),na.log("fetched",w.length,"Unstaked events"),na.log("fetched",b.length,"ReceivedFundsForStaking events"),e("setPlayerRegisteredEvents",[...t.playerRegisteredEvents,...a]),e("setPlayerWaitingEvents",[...t.playerWaitingEvents,...r]),e("setPlayersMatchedEvents",[...t.playersMatchedEvents,...c]),e("setMoveCommittedEvents",[...t.moveCommittedEvents,...p]),e("setMoveRevealedEvents",[...t.moveRevealedEvents,...y]),e("setNewRoundEvents",[...t.newRoundEvents,...m]),e("setGameOutcomeEvents",[...t.gameOutcomeEvents,...h]),e("setPlayerCancelledEvents",[...t.playerCancelledEvents,...g]),e("setPlayerLeftEvents",[...t.playerLeftEvents,...v]),e("setStakeEvents",[...t.stakeEvents,...f]),e("setUnstakeEvents",[...t.unstakeEvents,...w]),e("setRecievedFundsEvents",[...t.recievedFundsEvents,...b]),n("setLastFetchBlock",u),n("cacheEvents"),d=u+1,u=Math.min(d+l,o),e("triggerProcessEvents",!t.triggerProcessEvents)}e("setIsFetchingEvents",!1)},clearAndReload(){localStorage.clear(),location.reload()}},modules:{}});aa.dispatch("setTime"),aa.dispatch("fetchEvents");const sa=aa;var ia=n(45262),ra=n(36482),oa=n(90744),la=n(68367),da=n(15941);function ua(e){return/^0x[0-9a-f]*$/i.test(e)}function ca(){const e=ia.O(32);return ra.Dv(e)}function pa(e){const t=new oa.w5(e);return t.address}function ya(e,t){if(!ua(e))throw da.error("Private key found in cache is not valid hex",{privateKey:e,cacheKey:t}),new Error(`Private key found in cache (${t}) is not valid hex`);pa(e)}function ma(e="handsy:burnerWallet"){const t=localStorage.getItem(e);null!=t&&ya(t,e);const n=null!=t?new la.X(t):(()=>{const t=ca();return da.log("New burner wallet created:",pa(t)),localStorage.setItem(e,t),new la.X(t)})();return window.addEventListener("storage",(function t(a){n.closed?window.removeEventListener("storage",t):a.key===e&&a.storageArea===localStorage&&(a.newValue?(ya(a.newValue,e),n.next(a.newValue)):da.warn("Burner wallet removed from cache! You may need to reload to create a new wallet."))})),n}const ha=["to"],ga=(0,s._)("div",{class:"burner-icon"},null,-1),va={class:"burner-address"},fa={class:"burner-funds"};function wa(e,t,n,a,r,o){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("div",{onClick:t[0]||(t[0]=(...e)=>o.copy&&o.copy(...e)),class:"burner-item",to:"/profile/"+n.address},[ga,(0,s._)("p",va,(0,i.zw)(o.truncateAddress(n.address)),1),(0,s._)("p",fa,(0,i.zw)(n.balance)+"ETH",1)],8,ha)])}const ba={props:{address:{type:String,required:!0},balance:{type:String,required:!0}},methods:{copy(){navigator.clipboard.writeText(this.address)},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}}},ka=(0,gn.Z)(ba,[["render",wa]]),Ta=ka,Ca={ref:"profileAppend",class:"profile-icon",style:{"border-radius":"10000px"}};function Aa(e,t,n,a,i,r){return(0,s.wg)(),(0,s.iD)("div",Ca,null,512)}var Sa=n(15941);const Ea={props:{address:{type:String,required:!0},isMini:{type:Boolean,default:!1},isSuperMini:{type:Boolean,default:!1},isMedium:{type:Boolean,default:!1},isLarge:{type:Boolean,default:!1}},computed:{isYou(){var e,t;return Sa.log("is you",null===(e=this.address)||void 0===e?void 0:e.toLowerCase(),this.$store.state.activeAccount.toLowerCase()),(null===(t=this.address)||void 0===t?void 0:t.toLowerCase())==this.$store.state.activeAccount.toLowerCase()},user(){return this.isYou&&!this.alwaysShow?"You":this.truncateAddress(this.address)}},methods:{updateJazzicon(){var e;const t=parseInt(null===(e=this.address)||void 0===e?void 0:e.slice(2,10),16);Sa.log("isSuperMini",this.isSuperMini);const n=this.isMini?32:this.isMedium?72:this.isLarge?250:this.isSuperMini?20:32,a=yn()(n,t),s=this.$refs.profileAppend;s.innerHTML="",s.appendChild(a),Sa.log("updated jazzicon")},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}},watch:{address:"updateJazzicon"},mounted(){this.updateJazzicon()}},Ma=(0,gn.Z)(Ea,[["render",Aa]]),Pa=Ma,Ia={key:0,class:"modal-container"},_a={class:"modal-add-funds"};function Ra(e,t,n,i,r,o){const l=(0,s.up)("funds-manager"),d=(0,s.up)("funds-manager-embedded");return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[n.show?((0,s.wg)(),(0,s.iD)("div",Ia,[(0,s._)("div",_a,[o.isBurner?((0,s.wg)(),(0,s.j4)(l,{key:0,minimumFundsToAdd:n.minimumFundsToAdd,callback:n.callback,closeCallBack:o.toggleShow},null,8,["minimumFundsToAdd","callback","closeCallBack"])):((0,s.wg)(),(0,s.j4)(d,{key:1,minimumFundsToAdd:n.minimumFundsToAdd,callback:n.callback,closeCallBack:o.toggleShow},null,8,["minimumFundsToAdd","callback","closeCallBack"]))])])):(0,s.kq)("",!0)])),_:1})}var Ba=n(70520),La=n(11167),Fa=n(15941);const xa={class:"home"},Wa=(0,s._)("h2",{style:{}},"Transfer Funds to L2",-1),Oa={class:"green",style:{"margin-top":"-15px","margin-bottom":"20px","font-size":"20px"}},Ga={style:{display:"flex","justify-content":"space-between"}},Ha={style:{display:"flex","flex-direction":"column","align-items":"start"}},Da=(0,s._)("div",null,"From",-1),Na=["label","value"],za={style:{margin:"0","font-size":"15px","font-weight":"100",color:"gray","text-align":"center"}},Ua={style:{display:"flex","flex-direction":"column","align-items":"start"}},$a=(0,s._)("div",null,"To",-1),Ja=["label","value"],ja={style:{margin:"0","font-size":"15px","font-weight":"100",color:"gray","text-align":"center"}},qa={class:"home-item"},Va=(0,s._)("div",null,"Input amount",-1),Ya={key:0,class:"amounts-error"},Za={key:1,class:"amounts"},Ka={class:"transfer-list__result"},Qa={style:{"margin-top":"20px","text-align":"center",display:"flex","justify-content":"center",gap:"20px"}},Xa=["disabled"],es={key:0,class:"loading"},ts=(0,s._)("a",{href:"https://www.orbiter.finance/?source=Ethereum&dest=Arbitrum%20Nova"},"Or use to Orbiter",-1),ns=(0,s.aZ)({__name:"FundsManager",props:{minimumFundsToAdd:{type:Number,required:!1,default:.01},callback:{type:Function,required:!1,default:()=>{}},closeCallBack:{type:Function,required:!1,default:()=>{}}},setup(e){const t=e,n=(0,lt.qj)({tokens:[],fromChains:[],toChains:[],tokenAddress:"",fromChainId:void 0,toChainId:void 0,amount:.01,amounts:void 0,amountsError:"",transferList:[],collapseActive:0,transferring:!1,complete:!1,sentToBridge:!1,sentToDestination:!1,fromBalance:"0",toBalance:"0"}),r=(0,s.Fl)((()=>{if(t.minimumFundsToAdd){const e=sa.state.isJoiningPasswordMatch,n=sa.state.joiningPassword;return e?`Add atleast ${t.minimumFundsToAdd} ETH to join match ${n}`:`Add atleast ${t.minimumFundsToAdd} ETH to complete that transaction`}return""})),o=(0,s.Fl)((()=>t.closeCallBack)),l=(0,s.Fl)((()=>n.tokens.find((e=>e.address.toLowerCase()==n.tokenAddress.toLowerCase())))),d=(0,s.Fl)((()=>n.fromChains.find((e=>e.id==n.fromChainId)))),u=(0,s.Fl)((()=>n.toChains.find((e=>e.id==n.toChainId)))),c=async()=>{const e=3;for(let a=0;a<e;a++)try{n.fromChainId&&(n.fromBalance=await v(g.selectedAddress,n.fromChainId.toString())),n.toChainId&&(n.toBalance=await v(g.selectedAddress,"42170"));break}catch(t){if(Fa.error("Error fetching balance. Attempt:",a+1,t),a===e-1)throw t}},p=(window.location.href,"Mainnet"),y=new La.Bridge(p),m=async()=>{var e,t,a;const s=await y.supports(d.value,u.value),i="Mainnet"==p?"42170":"421611";n.fromChains=s.fromChains,n.toChains=s.toChains.filter((e=>e.networkId==i)),Fa.log("toChains",n.toChains),Fa.log("initial toChains",s.toChains),n.fromChainId=null===(e=n.fromChains.find(((e,t)=>!d.value&&0==t||d.value.id==e.id)))||void 0===e?void 0:e.id,n.toChainId=null===(t=n.toChains.find(((e,t)=>!u.value&&0==t||u.value.id==e.id)))||void 0===t?void 0:t.id,Fa.log("to chains",n.toChains),n.tokens=s.tokens.map((e=>{if(n.fromChainId==e.chainId)return e})).filter((e=>void 0!==e)),n.tokenAddress=null===(a=n.tokens.find(((e,t)=>!l.value&&0==t||l.value.address==e.address)))||void 0===a?void 0:a.address,await c()};m();const h=async()=>{if(n.amount)try{n.amounts=await y.getAmounts(l.value,d.value,u.value,n.amount),n.amountsError=""}catch(e){n.amounts=void 0,n.amountsError=e.message}},g=window.ethereum,v=async(e,t)=>{var n;let a="0x"+Number(t).toString(16),s=null!==(n=ft[a])&&void 0!==n?n:ft["0x1"];Fa.log("providerEndpoint",s);const i=new(it())(new(it().providers.HttpProvider)(s)),r=await i.eth.getBalance(e),o=parseFloat(i.utils.fromWei(r,"ether")).toFixed(6);return o},f=async(e,t)=>{const a=await v(e,t);while(1){const s=await v(e,t);if(parseFloat(s)-parseFloat(a)>=.6*n.amount)return!0;await new Promise((e=>setTimeout(e,5e3)))}},w=async()=>{try{var e;if(n.transferring=!0,"Testnet"==p)return n.complete=!0,n.transferring=!1,await new Promise((e=>setTimeout(e,1e3))),void t.callback();await y.transfer(new Ba.Q(g).getSigner(),l.value,d.value,u.value,n.amount);n.sentToBridge=!0,await f(sa.state.activeAccount,null===(e=u.value)||void 0===e?void 0:e.networkId),await c(),n.complete=!0,n.transferring=!1,await sa.state.onboard.setChain({chainId:wt}),await new Promise((e=>setTimeout(e,1e3))),t.callback()}catch(a){n.complete=!1,n.transferring=!1,alert(a.message)}};return(0,s.YP)((()=>[n.tokenAddress,n.fromChainId,n.toChainId]),(()=>{m(),h()})),(0,s.YP)((()=>n.amount),(()=>{h()})),(e,t)=>{const l=(0,s.up)("el-collapse");return(0,s.wg)(),(0,s.iD)("div",xa,[Wa,(0,s._)("p",Oa,(0,i.zw)((0,lt.SU)(r)),1),(0,s._)("div",Ga,[(0,s._)("div",Ha,[Da,(0,s.wy)((0,s._)("select",{class:"input-select","onUpdate:modelValue":t[0]||(t[0]=e=>n.fromChainId=e),placeholder:"Select",size:"large"},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(n.fromChains,(e=>((0,s.wg)(),(0,s.iD)("option",{key:e.id,label:e.name.charAt(0).toUpperCase()+e.name.slice(1),value:e.id},null,8,Na)))),128))],512),[[a.bM,n.fromChainId]]),(0,s._)("p",za,"Balance: "+(0,i.zw)(n.fromBalance)+" ETH",1)]),(0,s._)("div",Ua,[$a,(0,s.wy)((0,s._)("select",{class:"input-select","onUpdate:modelValue":t[1]||(t[1]=e=>n.toChainId=e),placeholder:"Select",size:"large"},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(n.toChains,(e=>((0,s.wg)(),(0,s.iD)("option",{key:e.id,label:e.name.charAt(0).toUpperCase()+e.name.slice(1),value:e.id},null,8,Ja)))),128))],512),[[a.bM,n.toChainId]]),(0,s._)("p",ja,"Balance: "+(0,i.zw)(n.toBalance)+" ETH",1)])]),(0,s._)("div",qa,[Va,(0,s.wy)((0,s._)("input",{size:"large",class:"input","onUpdate:modelValue":t[2]||(t[2]=e=>n.amount=e)},null,512),[[a.nr,n.amount]])]),n.amountsError?((0,s.wg)(),(0,s.iD)("p",Ya,(0,i.zw)(n.amountsError),1)):(0,s.kq)("",!0),n.amounts?((0,s.wg)(),(0,s.iD)("p",Za,[(0,s.Uk)(" Pay Amount: "),(0,s._)("span",null,(0,i.zw)(n.amounts.payAmountHm),1),(0,s.Uk)(" Recieve Amount: "),(0,s._)("span",null,(0,i.zw)(n.amounts.receiveAmountHm),1)])):(0,s.kq)("",!0),n.transferList.length>0?((0,s.wg)(),(0,s.j4)(l,{key:2,class:"home-item",modelValue:n.collapseActive,"onUpdate:modelValue":t[3]||(t[3]=e=>n.collapseActive=e)},{default:(0,s.w5)((()=>[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(n.transferList,((e,t)=>((0,s.wg)(),(0,s.iD)("div",{key:t},[(0,s.Uk)((0,i.zw)(`token: ${e.token.name}, fromChain: ${e.fromChain.name}, toChain: ${e.toChain.name}, amount: ${e.amount}`)+" ",1),(0,s._)("h1",Ka,(0,i.zw)(JSON.stringify(e.result)),1)])))),128))])),_:1},8,["modelValue"])):(0,s.kq)("",!0),(0,s._)("div",Qa,[(0,s._)("button",{class:"button-light",onClick:t[4]||(t[4]=()=>{(0,lt.SU)(o)()})}," Cancel "),(0,s._)("button",{disabled:""!=n.amountsError||n.transferring||n.complete,size:"large",onClick:w,class:"button-dark",style:{padding:"0 90px"}},[(0,s.Uk)((0,i.zw)(n.complete?"Complete":n.transferring?"Transferring":"Transfer")+" ",1),n.transferring?((0,s.wg)(),(0,s.iD)("div",es)):(0,s.kq)("",!0)],8,Xa)]),ts])}}}),as=ns,ss=as;var is=n(15941);const rs={class:"home"},os=(0,s.uE)('<h2 style="">Fund wallet</h2><p>Get some ETH onto your Arbitrum Nova account</p><p class="grey" style="text-align:start;">Step 1</p><div class="card-small"><h4>Bridge ETH to Arb Nova</h4><a style="cursor:pointer;" target="_blank" href="https://www.orbiter.finance/?source=Ethereum&amp;dest=Arbitrum%20Nova">Bridge</a></div><p class="grey" style="text-align:start;">Step 2</p>',5),ls={class:"card-small"},ds=(0,s._)("h4",null,"Deposit bridged ETH to wallet",-1),us={class:"grey"},cs={style:{"margin-top":"20px","text-align":"center",display:"flex","justify-content":"end",gap:"20px"}},ps=(0,s.aZ)({__name:"FundsManagerEmbedded",props:{minimumFundsToAdd:{type:Number,required:!1,default:.01},callback:{type:Function,required:!1,default:()=>{}},closeCallBack:{type:Function,required:!1,default:()=>{}}},setup(e){const t=e,n=(0,lt.qj)({tokens:[],fromChains:[],toChains:[],tokenAddress:"",fromChainId:void 0,toChainId:void 0,amount:.01,amounts:void 0,amountsError:"",transferList:[],collapseActive:0,transferring:!1,complete:!1,sentToBridge:!1,sentToDestination:!1,fromBalance:"0",toBalance:"0"}),a=(0,s.Fl)((()=>sa.state.balance)),r=((0,s.Fl)((()=>{if(t.minimumFundsToAdd){const e=sa.state.isJoiningPasswordMatch,n=sa.state.joiningPassword;return e?`Add atleast ${t.minimumFundsToAdd} ETH to join match ${n}`:`Add atleast ${t.minimumFundsToAdd} ETH to complete that transaction`}return""})),(0,s.Fl)((()=>t.closeCallBack))),o=(0,s.Fl)((()=>n.tokens.find((e=>e.address.toLowerCase()==n.tokenAddress.toLowerCase())))),l=(0,s.Fl)((()=>n.fromChains.find((e=>e.id==n.fromChainId)))),d=(0,s.Fl)((()=>n.toChains.find((e=>e.id==n.toChainId)))),u=async()=>{const e=3;for(let a=0;a<e;a++)try{n.fromChainId&&(n.fromBalance=await g(h.selectedAddress,n.fromChainId.toString())),n.toChainId&&(n.toBalance=await g(h.selectedAddress,"42170"));break}catch(t){if(is.error("Error fetching balance. Attempt:",a+1,t),a===e-1)throw t}},c=(window.location.href,"Mainnet"),p=new La.Bridge(c),y=async()=>{var e,t,a;const s=await p.supports(l.value,d.value),i="Mainnet"==c?"42170":"421611";n.fromChains=s.fromChains,n.toChains=s.toChains.filter((e=>e.networkId==i)),is.log("toChains",n.toChains),is.log("initial toChains",s.toChains),n.fromChainId=null===(e=n.fromChains.find(((e,t)=>!l.value&&0==t||l.value.id==e.id)))||void 0===e?void 0:e.id,n.toChainId=null===(t=n.toChains.find(((e,t)=>!d.value&&0==t||d.value.id==e.id)))||void 0===t?void 0:t.id,is.log("to chains",n.toChains),n.tokens=s.tokens.map((e=>{if(n.fromChainId==e.chainId)return e})).filter((e=>void 0!==e)),n.tokenAddress=null===(a=n.tokens.find(((e,t)=>!o.value&&0==t||o.value.address==e.address)))||void 0===a?void 0:a.address,await u()};y();const m=async()=>{if(n.amount)try{n.amounts=await p.getAmounts(o.value,l.value,d.value,n.amount),n.amountsError=""}catch(e){n.amounts=void 0,n.amountsError=e.message}},h=window.ethereum,g=async(e,t)=>{var n;let a="0x"+Number(t).toString(16),s=null!==(n=ft[a])&&void 0!==n?n:ft["0x1"];is.log("providerEndpoint",s);const i=new(it())(new(it().providers.HttpProvider)(s)),r=await i.eth.getBalance(e),o=parseFloat(i.utils.fromWei(r,"ether")).toFixed(6);return o};return(0,s.YP)((()=>[n.tokenAddress,n.fromChainId,n.toChainId]),(()=>{y(),m()})),(0,s.YP)((()=>n.amount),(()=>{m()})),(e,t)=>((0,s.wg)(),(0,s.iD)("div",rs,[os,(0,s._)("div",ls,[ds,(0,s._)("a",{style:{cursor:"pointer"},onClick:t[0]||(t[0]=()=>{(0,lt.SU)(kn)((0,lt.SU)(sa).state.activeAccount)})},"Copy address")]),(0,s._)("p",us,"Your balance "+(0,i.zw)((0,lt.SU)(a))+" ETH",1),(0,s._)("div",cs,[(0,s._)("button",{class:"button-light",onClick:t[1]||(t[1]=()=>{(0,lt.SU)(r)()})}," Cancel ")])]))}}),ys=ps,ms=ys;var hs=n(15941);const gs={data(){return{amount:0}},components:{FundsManager:ss,FundsManagerEmbedded:ms},model:{prop:"show",event:"update:show"},props:{show:{type:Boolean,default:!1},minimumFundsToAdd:{type:Number,default:null},callback:{type:Function,default:()=>{}}},methods:{toggleShow(){this.$emit("update:show",!this.show),hs.log("callers callback"),this.callback(!0)}},computed:{isBurner(){return this.$store.state.isMetaMask}},created(){hs.log(this.move)}},vs=(0,gn.Z)(gs,[["render",Ra],["__scopeId","data-v-224fbf1a"]]),fs=vs;var ws=n(15941);function bs(e){return e==ct.Waiting?"Waiting":e==ct.Sending?"Sending move":e==ct.Revealing?"Revealing move":e==ct.Revealed?"Revealed move":e==ct.Matched?"Matched with opponent":e==ct.Initial?"":e==ct.Finished?"Game complete":""}const ks=nt.deployedContracts.Hands,Ts=nt.deployedAbis.Hands;function Cs(){return Math.random().toString(36).substring(2,15)}function As(e,t){return e==t?ut.Draw:e==dt.Rock?t==dt.Paper?ut.PlayerB:ut.PlayerA:e==dt.Paper?t==dt.Scissors?ut.PlayerB:ut.PlayerA:e==dt.Scissors?t==dt.Rock?ut.PlayerB:ut.PlayerA:void 0}const Ss={components:{GameMove:Rt,GameList:En,Modal:Kn,ProfileItem:fn,ProfileItemBurner:Ta,ModalAddFunds:fs,ProfileIcon:Pa},props:{provider:{type:String,default:null},balance:{type:Number,default:null}},data(){return{stripeClientSecret:null,initialized:!1,games:{},lastBlockSearched:0,selectedMove:"",selectedBet:"",randomString:"",contractInstance:null,contractReadInstance:null,pastGames:[],wagerSteps:["0.01","0.1","1","5","10"],sliderIndex:0,_lastGameId:-1,activeAccount:null,rampSdk:null,affiliateContract:null,affiliateOfUser:null,playWithFriend:null,leaverModal:null,timeoutModal:null,showModal:!1,showAddFundsModal:!1,winnerPoints:0,loserPoints:0,winModal:!1,handledEventIds:new Set,burnerTopUpAmount:.002,burnerAddress:null,burnerPrivateKey:null,burnerContractInstance:null,burnerNonce:0,lastFetchedBlock:kt,onAddFunds:()=>{ws.log("onAddFunds"),this.showAddFundsModal=!1},minimumAmount:0}},computed:{isJoiningPasswordMatch(){return this.$store.state.isJoiningPasswordMatch},joiningPassword(){return this.$store.state.joiningPassword},triggerProcessEvents(){return this.$store.state.triggerProcessEvents},fetchingEvents(){return this.$store.state.isFetchingEvents},playerRegisteredEvents(){return this.$store.state.playerRegisteredEvents},playerWaitingEvents(){return this.$store.state.playerWaitingEvents},playersMatchedEvents(){return this.$store.state.playersMatchedEvents},moveCommittedEvents(){return this.$store.state.moveCommittedEvents},moveRevealedEvents(){return this.$store.state.moveRevealedEvents},newRoundEvents(){return this.$store.state.newRoundEvents},gameOutcomeEvents(){return this.$store.state.gameOutcomeEvents},playerCancelledEvents(){return this.$store.state.playerCancelledEvents},playerLeftEvents(){return this.$store.state.playerLeftEvents},isMetamask(){return this.$store.state.isMetamask},isBurner(){return null!=this.burnerAddress&&null!=this.burnerPrivateKey&&null!=this.burnerContractInstance},getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new(it())(this.provider)},getWeb3Read(){return new(it())(new(it().providers.WebsocketProvider)("wss://maximum-shy-meme.arbitrum-goerli.discover.quiknode.pro/9e608d37bed73e216df881fc52b358d41236b29e/"))},getWeb3Read2(){return new(it())(new(it().providers.HttpProvider)(bt))},balance(){const e=this.$store.state.balance;return(Math.round(100*e)/100).toFixed(2)},opponentBalance(){const e=this.$store.state.balances[this.opponentAddress.toLowerCase()];return(Math.round(100*e)/100).toFixed(2)},burnerBalance(){var e;const t=this.$store.state.balances[null===(e=this.burnerAddress)||void 0===e?void 0:e.toLowerCase()];return(Math.round(100*t)/100).toFixed(2)},isRock(){return this.selectedMove===dt.Rock},isPaper(){return this.selectedMove===dt.Paper},isScissors(){return this.selectedMove===dt.Scissors},gameState(){var e,t,n,a,s;if(ws.log("gameState",this.currentGameId,this.games),!this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"])return ct.Initial;if(this.games[null!==(t=this.currentGameId)&&void 0!==t?t:"0"].outcome!=ut.None)return ct.Initial;const i=this.games[null!==(n=this.currentGameId)&&void 0!==n?n:"0"].round;return null!==(a=this.games[null!==(s=this.currentGameId)&&void 0!==s?s:"0"].states[i][this.getActiveAccount.toLowerCase()])&&void 0!==a?a:ct.Matched},yourGameStateToString(){switch(this.gameState){case ct.Initial:return"Initial";case ct.Waiting:return"Waiting for opponent";case ct.Sending:return"Sending move";case ct.Sent:return"Sent move";case ct.Revealing:return"Revealing move";case ct.Revealed:return"Revealed move";case ct.Matched:return"Matched";case ct.Finished:return"Game complete";default:return""}},isSent(){return this.gameState==ct.Sent},isRegistering(){return this.gameState==ct.Registering},isWaiting(){return this.gameState==ct.Waiting},isRevealing(){return this.gameState==ct.Revealing},isRevealed(){return this.gameState==ct.Revealed},roundStateString(){return this.bothRevealed?this.isWinner?"You won!":this.isLoser?"You lost!":"Draw!":this.isSent?this.isSent&&!this.isOpponentMoveSent?"Waiting for opponent":this.isRevealing?"Revealing move":this.isRevealed&&!this.isOpponentMoveRevealed?"Waiting for opponent reveal":null:"Choose your move"},isOpponentMoveRevealed(){return this.opponentState==ct.Revealed},bothRevealed(){return this.isRevealed&&this.isOpponentMoveRevealed},isInGame(){return"0"!=this.currentGameId&&this.gameState!=ct.Initial&&this.gameState!=ct.Registering&&this.gameState!=ct.Waiting},isMoveSent(){return this.gameState==ct.Sent||this.gameState==ct.Revealing||this.gameState==ct.Revealed},isOpponentMoveSent(){return this.opponentState==ct.Sent||this.opponentState==ct.Revealing||this.opponentState==ct.Revealed},isGameFinished(){return this.gameState==ct.Finished},currentRound(){var e;return this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"].round},opponentMove(){var e;return this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"].moves[this.currentRound][this.getOpponentAccount]},isWinner(){return As(this.selectedMove,this.opponentMove)==ut.PlayerA},isLoser(){return As(this.selectedMove,this.opponentMove)==ut.PlayerB},currentGameId(){var e;const t=Object.values(this.games).sort(((e,t)=>t.gameId-e.gameId));ws.log("currentGameId",t);const n=t.find((e=>e.outcome==ut.None&&(e.playerA.toLowerCase()==this.activeAccount.toLowerCase()||e.playerB==this.getActiveAccount)));return ws.log("games ordered by gameId",t),ws.log("currentGameId",n),null!==(e=null===n||void 0===n?void 0:n.gameId)&&void 0!==e?e:"0"},previousGame(){const e=Object.values(this.games).sort(((e,t)=>t.gameId-e.gameId)),t=e.find((e=>e.gameId!==this.currentGameId&&e.outcome!=ut.None));return ws.log("games ordered by gameId",e),ws.log("previous game",t),t},previousGameWager(){var e,t;return null!==(e=null===(t=this.previousGame)||void 0===t?void 0:t.bet)&&void 0!==e?e:0},currentWager(){var e,t;return null!==(e=null===(t=this.games[this.currentGameId])||void 0===t?void 0:t.bet)&&void 0!==e?e:0},previousGamePoints(){var e,t,n;return ws.log("previousGamePoints",null===(e=this.previousGame)||void 0===e?void 0:e.points[this.getActiveAccount.toLowerCase()]),null!==(t=null===(n=this.previousGame)||void 0===n?void 0:n.points[this.getActiveAccount.toLowerCase()])&&void 0!==t?t:0},previousGameOpponent(){var e,t,n,a,s;const i=null===(e=this.previousGame)||void 0===e||null===(t=e.playerA)||void 0===t?void 0:t.toLowerCase(),r=null===(n=this.previousGame)||void 0===n||null===(a=n.playerB)||void 0===a?void 0:a.toLowerCase();return i===(null===this||void 0===this||null===(s=this.getActiveAccount)||void 0===s?void 0:s.toLowerCase())?r:i},yourCurrentPoints(){var e,t,n;return null!==(e=null===(t=this.games[this.currentGameId])||void 0===t?void 0:t.points[null===(n=this.getActiveAccount)||void 0===n?void 0:n.toLowerCase()])&&void 0!==e?e:0},opponentCurrentPoints(){var e,t,n;return null!==(e=null===(t=this.games[this.currentGameId])||void 0===t?void 0:t.points[null===(n=this.opponentAddress)||void 0===n?void 0:n.toLowerCase()])&&void 0!==e?e:0},previousGameOpponentPoints(){var e,t,n;return null!==(e=null===(t=this.previousGame)||void 0===t?void 0:t.points[null===(n=this.previousGameOpponent)||void 0===n?void 0:n.toLowerCase()])&&void 0!==e?e:0},wonLastGame(){return this.previousGamePoints>this.previousGameOpponentPoints},yourAddress(){return this.getActiveAccount},yourMove(){return this.selectedMove},opponentAddress(){var e,t,n,a,s;const i=null===(e=this.games[this.currentGameId])||void 0===e||null===(t=e.playerA)||void 0===t?void 0:t.toLowerCase(),r=null===(n=this.games[this.currentGameId])||void 0===n||null===(a=n.playerB)||void 0===a?void 0:a.toLowerCase();return i===(null===this||void 0===this||null===(s=this.getActiveAccount)||void 0===s?void 0:s.toLowerCase())?r:i},opponentMove(){var e,t,n,a;const s=null===(e=this.opponentAddress)||void 0===e?void 0:e.toLowerCase(),i=this.currentGameId;return null!==(t=null===(n=this.games[null===i||void 0===i?void 0:i.toLowerCase()])||void 0===n||null===(a=n.moves[this.currentRound])||void 0===a?void 0:a[null===s||void 0===s?void 0:s.toLowerCase()])&&void 0!==t?t:dt.None},opponentState(){var e,t,n,a,s,i,r;const o=null===(e=this.opponentAddress)||void 0===e?void 0:e.toLowerCase(),l=null===this||void 0===this?void 0:this.currentGameId,d=null!==(t=null===(n=this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"])||void 0===n?void 0:n.round)&&void 0!==t?t:0;return ws.log("opponentState",null===(s=this.games[null===l||void 0===l?void 0:l.toLowerCase()])||void 0===s?void 0:s.states[d][null===o||void 0===o?void 0:o.toLowerCase()]),null!==(i=null===(r=this.games[null===l||void 0===l?void 0:l.toLowerCase()])||void 0===r?void 0:r.states[d][null===o||void 0===o?void 0:o.toLowerCase()])&&void 0!==i?i:ct.Initial},opponentStateToString(){switch(this.opponentState){case ct.Initial:return"Choosing move";case ct.Registering:return"Registering";case ct.Waiting:return"Waiting";case ct.Matched:return"Choosing move";case ct.Sending:return"Sending";case ct.Sent:return"Sent";case ct.Revealing:return"Revealing";case ct.Revealed:return"Revealed";case ct.Finished:return"Finished";default:return"Unknown"}},isMoveSending(){return this.gameState==ct.Sending},yourTimeLeft(){const e=this.games[this.currentGameId],t=null===e||void 0===e?void 0:e.timeOfMatched;ws.log("timeOfStart",t);const n=this.$store.state.currentTime,a=t?Ct-(n-t):0;if(a<0)return"time out";const s=Math.floor(a/60),i=a%60,r=`${s}:${i.toString().padStart(2,"0")}`;return r},opponentTimeLeft(){const e=this.games[this.currentGameId],t=null===e||void 0===e?void 0:e.timeOfMatched,n=this.$store.state.currentTime,a=t?Ct-(n-t):0;if(a<0)return"time out";const s=Math.floor(a/60),i=a%60,r=`${s}:${i.toString().padStart(2,"0")}`;return r},shouldReveal(){return ws.log("shouldReveal",this.isMoveSent,this.isOpponentMoveSent,this.isGameFinished,this.isRevealing),this.isMoveSent&&this.isOpponentMoveSent&&!this.isGameFinished&&!this.isRevealing&&this.initialized&&!this.isRevealed},shouldMove(){return(this.isMoveSent||this.isMoveSending)&&this.isInGame},shouldSetAffiliateCode(){const e=localStorage.getItem("affiliateCode");return e&&this.affiliateOfUser==ea.d},pendingGames(){const e=Object.values(this.games);return e.filter((e=>e.outcome==ut.None&&""==e.playerB&&"0"!=e.gameId)).sort(((e,t)=>t.time-e.time))},activeGames(){const e=Object.values(this.games);return e.filter((e=>e.outcome==ut.None&&""!=e.playerB&&"0"!=e.gameId)).sort(((e,t)=>t.time-e.time))},completedGames(){const e=Object.values(this.games);return e.filter((e=>e.outcome!=ut.None&&"0"!=e.gameId)).sort(((e,t)=>{var n,a;return parseInt(null!==(n=t.time)&&void 0!==n?n:0)-parseInt(null!==(a=e.time)&&void 0!==a?a:0)}))}},async mounted(){ws.log("provider",this.provider),this.initialized=!1,ws.log("ramp sdk",Xn["default"]);const e=localStorage.getItem("lastSentMove"),t=localStorage.getItem("lastRandomString"),n=localStorage.getItem("lastBetAmount"),a=localStorage.getItem("playWithRandom");e&&(this.selectedMove=e),n?(this.selectedBet=null!==n&&void 0!==n?n:this.wagerSteps[0],this.sliderIndex=this.wagerSteps.indexOf(parseFloat(this.selectedBet))):(this.selectedBet=this.wagerSteps[0],this.sliderIndex=0),t&&(this.randomString=t),this.playWithFriend="true"!==a,ws.log("playWithFriend",this.playWithFriend),ws.log("playWithFriend localStorage",localStorage.getItem("playWithRandom")),this.subscribeToEvents(),this.initialized=!0,await this.getAccount(),await this.checkAffililiateCode(),await this.checkJoiningPassword()},watch:{triggerProcessEvents:{handler(){this.processEvents()},immediate:!0},games:{handler(e,t){ws.log("yourGameState",bs(this.gameState)),ws.log("games changed",this.games[this.currentGameId]),sa.dispatch("setGames",this.games),ws.log("store games",sa.state.games)},deep:!0},isInGame:{handler(e,t){e&&(this.$store.dispatch("setBalanceOf",this.opponentAddress),ws.log("isInGame",e)),this.$store.dispatch("setIsInGame",e),this.$store.dispatch("setLeaveGame",this.leaveGame)},deep:!0,immediate:!0},shouldReveal:{handler(e,t){e&&(ws.log("is calling revealMove"),this.revealMove())},deep:!0},isMetamask:{handler(e,t){if(e){this.burnerPrivateKey=ma().value;const e=this.getWeb3.eth.accounts.privateKeyToAccount(this.burnerPrivateKey);this.getWeb3.eth.accounts.wallet.add(e),this.burnerAddress=e.address,this.burnerContractInstance=new this.getWeb3.eth.Contract(Ts,ks,{from:this.burnerAddress}),this.$store.dispatch("setBalanceOf",this.burnerAddress)}},immediate:!0}},methods:{getLastFetchBlock(){var e;return null!==(e=localStorage.getItem("lastFetchedBlock"))&&void 0!==e?e:kt},cacheEvents(){localStorage.setItem("playerRegisteredEvents",JSON.stringify(this.playerRegisteredEvents)),localStorage.setItem("playerWaitingEvents",JSON.stringify(this.playerWaitingEvents)),localStorage.setItem("playersMatchedEvents",JSON.stringify(this.playersMatchedEvents)),localStorage.setItem("moveCommittedEvents",JSON.stringify(this.moveCommittedEvents)),localStorage.setItem("moveRevealedEvents",JSON.stringify(this.moveRevealedEvents)),localStorage.setItem("newRoundEvents",JSON.stringify(this.newRoundEvents)),localStorage.setItem("gameOutcomeEvents",JSON.stringify(this.gameOutcomeEvents)),localStorage.setItem("playerCancelledEvents",JSON.stringify(this.playerCancelledEvents)),localStorage.setItem("playerLeftEvents",JSON.stringify(this.playerLeftEvents))},uncacheEvents(){var e,t,n,a,s,i,r,o,l;this.playerRegisteredEvents=null!==(e=JSON.parse(localStorage.getItem("playerRegisteredEvents")))&&void 0!==e?e:[],this.playerWaitingEvents=null!==(t=JSON.parse(localStorage.getItem("playerWaitingEvents")))&&void 0!==t?t:[],this.playersMatchedEvents=null!==(n=JSON.parse(localStorage.getItem("playersMatchedEvents")))&&void 0!==n?n:[],this.moveCommittedEvents=null!==(a=JSON.parse(localStorage.getItem("moveCommittedEvents")))&&void 0!==a?a:[],this.moveRevealedEvents=null!==(s=JSON.parse(localStorage.getItem("moveRevealedEvents")))&&void 0!==s?s:[],this.newRoundEvents=null!==(i=JSON.parse(localStorage.getItem("newRoundEvents")))&&void 0!==i?i:[],this.gameOutcomeEvents=null!==(r=JSON.parse(localStorage.getItem("gameOutcomeEvents")))&&void 0!==r?r:[],this.playerCancelledEvents=null!==(o=JSON.parse(localStorage.getItem("playerCancelledEvents")))&&void 0!==o?o:[],this.playerLeftEvents=null!==(l=JSON.parse(localStorage.getItem("playerLeftEvents")))&&void 0!==l?l:[],ws.log("uncached events",this.playerRegisteredEvents,this.playerWaitingEvents,this.playersMatchedEvents,this.moveCommittedEvents,this.moveRevealedEvents,this.newRoundEvents,this.gameOutcomeEvents,this.playerCancelledEvents,this.playerLeftEvents)},toggleAddFundsModal(){this.showAddFundsModal=!this.showAddFundsModal},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))},smallTruncate(e){return(null===e||void 0===e?void 0:e.slice(0,4))+".."+(null===e||void 0===e?void 0:e.slice(-2))},onRock(){this.selectedMove=dt.Rock,this.sendMove()},onPaper(){this.selectedMove=dt.Paper,this.sendMove()},onScissors(){this.selectedMove=dt.Scissors,this.sendMove()},buttonClicked(e){this.sliderIndex=e,this.sliderValueChanged()},sliderValueChanged(){this.selectedBet=this.wagerSteps[this.sliderIndex]},togglePlayWithFriend(){const e=localStorage.getItem("playWithRandom");"true"==e?(ws.log("setting playWithFriend to false"),localStorage.setItem("playWithRandom",!1),this.playWithFriend=!0):(ws.log("setting playWithFriend to true"),localStorage.setItem("playWithRandom",!0),this.playWithFriend=!1)},async getStripeClientSecret(){this.activeAccount&&fetch("/api/stripe_intent",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({address})}).then((e=>e.json())).then((e=>{setClientSecret(e.client_secret)}))},async getAccount(){const e=await this.getWeb3.eth.getAccounts();return ws.log("accounts",e),this.activeAccount=e[0],e[0]},async setContract(){this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks),this.contractReadInstance=new this.getWeb3Read.eth.Contract(Ts,ks),ws.log("contractInstance",this.contractInstance),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async getBlockNumber(){const e=await this.getWeb3.eth.getBlockNumber();return e},async getContract(){return this.contractInstance||await this.setContract(),this.contractInstance},async getReadContract(){return this.contractReadInstance||await this.setContract(),this.contractReadInstance},createGame(e,t=""){this.games[e]={gameId:e,playerA:t.toLowerCase(),playerB:"",states:{[0]:{[t.toLowerCase()]:ct.Initial}},bet:0,moves:{[0]:{[t.toLowerCase()]:dt.None}},outcome:ut.None,points:{[t.toLowerCase()]:0},round:0,leaver:null}},setLastGameId(e){ws.log("setting last game",e),this._lastGameId=parseInt(e)},isNewestGameId(e){return parseInt(e)>=this._lastGameId&&e>=this.currentGameId},getGame(e){return this.games[e]},getGameCurrentRound(e){return this.games[e].length-1},convertTimestampToTime(e){const t=new Date(1e3*e);let n=t.getHours();const a="0"+t.getMinutes(),s=n>=12?"PM":"AM";n%=12,n=n||12;const i=n+":"+a.substr(-2)+" "+s;return i},async emptyBurnerWallet(e=0){const t=3;if(e>=t)ws.log("Max retries reached. Aborting process.");else{ws.log("Initiating process to empty burner wallet.");try{const t=await this.getWeb3.eth.getBalance(this.burnerAddress);ws.log("Current balance",t);const n=await this.getWeb3.eth.getGasPrice(),a=await this.getWeb3.eth.estimateGas({from:this.burnerAddress,to:this.activeAccount,value:t}),s=n*a;if(t<=s)return void ws.log("Insufficient balance to cover gas cost.");const i=t-s,r={from:this.burnerAddress,to:this.activeAccount,value:i,gasPrice:n,gasLimit:a},o=await this.getWeb3.eth.accounts.signTransaction(r,this.burnerPrivateKey);this.getWeb3.eth.sendSignedTransaction(o.rawTransaction).on("transactionHash",(e=>{ws.log("Transaction Hash",e)})).on("receipt",(async e=>{const t=await this.getWeb3.eth.getBalance(this.burnerAddress);t>0&&await this.emptyBurnerWallet()})).on("error",(async t=>{ws.log("An error occurred during transaction",t),ws.log("Retrying..."),await this.emptyBurnerWallet(e+1)}))}catch(n){ws.log("An exception occurred",n),ws.log("Retrying..."),await this.emptyBurnerWallet(e+1)}}},async handleRegisterEvent(e,t){ws.log("PlayerRegistered event:",e.returnValues);const{gameId:n,playerAddress:a}=e.returnValues;this.getGame(n,0)||this.createGame(n,a),this.getGame(n).states[0][a.toLowerCase()]=ct.Waiting;let s=null;while(!s)s=await this.getWeb3Read2.eth.getBlock(e.blockNumber),ws.log("setting time: block",s);const i=s.timestamp;ws.log("setting time:",i),this.getGame(n).time=i},async handleWaitingEvent(e){ws.log("PlayerWaiting event:",e.returnValues);const{gameId:t,bet:n,playerAddress:a,first:s}=e.returnValues;this.getGame(t,0)||this.createGame(t);const i=this.getGame(t).states[0][a.toLowerCase()]==ct.Matched;i||(this.getGame(t).states[0][a.toLowerCase()]=ct.Waiting,s?this.getGame(t).playerA=a.toLowerCase():this.getGame(t).playerB=a.toLowerCase());let r=null;while(!r)r=await this.getWeb3Read2.eth.getBlock(e.blockNumber),ws.log("setting time: block",r);const o=r.timestamp;ws.log("setting time:",o),this.getGame(t).time=o,this.getGame(t).bet=1e-18*n},async handlePlayersMatchedEvent(e){ws.log("PlayersMatched event:",e.returnValues);const{gameId:t,playerA:n,playerB:a}=e.returnValues;this.getGame(t)||this.createGame(t,n),this.getGame(t).playerA=n.toLowerCase(),this.getGame(t).playerB=a.toLowerCase(),this.getGame(t).states[0][n.toLowerCase()]=ct.Matched,this.getGame(t).states[0][a.toLowerCase()]=ct.Matched;let s=null;while(!s)s=await this.getWeb3Read2.eth.getBlock(e.blockNumber);const i=s.timestamp;this.getGame(t).timeOfMatched=i,ws.log("setting time of matched",i),ws.log("setting game to matched")},handleMoveSentEvent(e){ws.log("MoveSent event:",e.returnValues);const{gameId:t,round:n,playerAddress:a}=e.returnValues;this.getGame(t)||this.createGame(t,a),this.getGame(t).moves[n]||(this.getGame(t).moves[n]={}),this.getGame(t).states[n]||(this.getGame(t).states[n]={}),this.getGame(t).states[n][a.toLowerCase()]=ct.Sent},handleRevealedEvent(e){ws.log("MoveRevealed event:",e.returnValues);const{gameId:t,round:n,playerAddress:a,move:s}=e.returnValues;this.getGame(t)||this.createGame(t,a),this.getGame(t).moves[n]||(this.getGame(t).moves[n]={}),this.getGame(t).states[n]||(this.getGame(t).states[n]={}),this.games[t].moves[n][a.toLowerCase()]=s,this.games[t].states[n][a.toLowerCase()]=ct.Revealed},async handleNewRoundEvent(e){ws.log("NewRound event:",e.returnValues);const{gameId:t,round:n,pointsA:a,pointsB:s}=e.returnValues;this.games[t]||this.createGame(t),this.games[t].states[n]||(this.games[t].states[n]={}),this.games[t].moves[n]||(this.games[t].moves[n]={}),this.games[t].round=n,this.games[t].points[this.games[t].playerA.toLowerCase()]=a,this.games[t].points[this.games[t].playerB.toLowerCase()]=s,ws.log("setting new points for gameId",t,a,s);let i=null;while(!i)i=await this.getWeb3Read2.eth.getBlock(e.blockNumber);const r=i.timestamp;this.getGame(t).timeOfMatched=r,ws.log("setting time of matched",r)},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return ws.log("getting player winnings",e,t,s,i,r),i==ut.Cancelled?(ws.log("cancelled"),0):i==ut.PlayerALeft&&r?-a:i==ut.PlayerBLeft&&r?s:i!=ut.PlayerALeft||r?i!=ut.PlayerBLeft||r?i==ut.Draw?0:i==ut.PlayerA&&r?s:i==ut.PlayerB&&r?-a:i!=ut.PlayerA||r?i!=ut.PlayerB||r?i==ut.PlayerATimeout&&r?-a:i==ut.PlayerBTimeout&&r?s:i!=ut.PlayerATimeout||r?i!=ut.PlayerBTimeout||r?i==ut.BothTimeout?0:void 0:-a:s:s:-a:-a:s},wasCancelled(e){const t=e.outcome;return t==ut.Cancelled},isLeaver(e,t){var n;const a=e.outcome;return a===ut.Left&&(null===e||void 0===e||null===(n=e.leaver)||void 0===n?void 0:n.toLowerCase())===t.toLowerCase()},getWinnings(e){return(e-2*e*Tt).toFixed(4)},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return ws.log("getting player winnings",e,t,s,i,r),i==ut.Cancelled?(ws.log("cancelled"),0):i==ut.PlayerALeft&&r?-a:i==ut.PlayerBLeft&&r?s:i!=ut.PlayerALeft||r?i!=ut.PlayerBLeft||r?i==ut.Draw?0:i==ut.PlayerA&&r?s:i==ut.PlayerB&&r?-a:i!=ut.PlayerA||r?i!=ut.PlayerB||r?i==ut.PlayerATimeout&&r?-a:i==ut.PlayerBTimeout&&r?s:i!=ut.PlayerATimeout||r?i!=ut.PlayerBTimeout||r?i==ut.BothTimeout?0:void 0:-a:s:s:-a:-a:s},calcWinnerFromAmount(e,t){const n=this.getPlayerWinnings(e,t);return ws.log("getting winnings for player",n,t),n>0},handleOutcomeEvent(e,t=!1){var n,a,s,i,r;ws.log("GameOutcome event:",e.returnValues);const{gameId:o,outcome:l}=e.returnValues;if(!0===t&&"boolean"===typeof t&&((null===(n=this.games[o])||void 0===n||null===(a=n.playerA)||void 0===a?void 0:a.toLowerCase())==(null===(s=this.activeAccount)||void 0===s?void 0:s.toLowerCase())||(null===(i=this.games[o])||void 0===i||null===(r=i.playerB)||void 0===r?void 0:r.toLowerCase())==this.activeAccount.toLowerCase())){ws.log("setting modal"),this.winnerPoints=this.yourCurrentPoints>this.opponentCurrentPoints?this.yourCurrentPoints:this.opponentCurrentPoints,this.loserPoints=this.yourCurrentPoints<this.opponentCurrentPoints?this.yourCurrentPoints:this.opponentCurrentPoints;const e=this.games[o].playerA.toLowerCase()==this.activeAccount.toLowerCase();this.showModal=!0,this.leaverModal=l==ut.PlayerALeft?this.games[o].playerA:l==ut.PlayerBLeft?this.games[o].playerB:null,this.winModal=e?l==ut.PlayerA:l==ut.PlayerB,this.timeoutModal=l==ut.PlayerATimeout?this.games[o].playerA:l==ut.PlayerBTimeout?this.games[o].playerB:l==ut.BothTimeout?"both":null,ws.log("Modal Stats",this.winnerPoints,this.loserPoints,this.winModal,this.leaverModal),ws.log("Modal Stats, Outcomes.PlayerALeft and Outcomes.PlayerBLeft",ut.PlayerALeft,ut.PlayerBLeft),ws.log("Modal States outcome",l),this.emptyBurnerWallet()}this.games[o]||this.createGame(o),this.games[o].outcome=l,this.games[o].playerA.toLowerCase()!=this.activeAccount.toLowerCase()&&this.games[o].playerB.toLowerCase()!=this.activeAccount.toLowerCase()||this.createGame("0")},handlePlayerCancelledEvent(e,t=!1){ws.log("PlayerCancelled event:",e.returnValues);const{gameId:n,playerAddress:a}=e.returnValues;this.games[n]||this.createGame(n,a),this.games[n].outcome=ut.Cancelled,this.games[n].playerA.toLowerCase()!=this.activeAccount.toLowerCase()&&this.games[n].playerB.toLowerCase()!=this.activeAccount.toLowerCase()||this.createGame("0"),!0===t&&"boolean"===typeof t&&a.toLowerCase()==this.activeAccount.toLowerCase()&&this.emptyBurnerWallet()},handlePlayerLeftEvent(e,t=!1){ws.log("Handling Player Left event:",e.returnValues);const{gameId:n,playerAddress:a}=e.returnValues;this.games[n]||this.createGame(n,a),this.getGame(n).leaver=a.toLowerCase(),!0===t&&"boolean"===typeof t&&a.toLowerCase()==this.activeAccount.toLowerCase()&&this.emptyBurnerWallet()},async subscribeToEvents(){const e=await this.getReadContract(),t=await this.getAccount();ws.log("Subscribing to events..."),ws.log("contract:",e);const n=["PlayerRegistered","PlayerWaiting","PlayersMatched","MoveCommitted","MoveRevealed","NewRound","GameOutcome","PlayerCancelled","PlayerLeft"],a={PlayerRegistered:this.handleRegisterEvent,PlayerWaiting:this.handleWaitingEvent,PlayersMatched:this.handlePlayersMatchedEvent,MoveCommitted:this.handleMoveSentEvent,MoveRevealed:this.handleRevealedEvent,NewRound:this.handleNewRoundEvent,GameOutcome:this.handleOutcomeEvent,PlayerCancelled:this.handlePlayerCancelledEvent,PlayerLeft:this.handlePlayerLeftEvent},s=new Set;for(const i of n)e.events[i]().on("data",(e=>{const n=`${e.transactionHash}-${i}-${e.logIndex}`;s.has(n)||(ws.log(`New ${i} event detected:`,e),"GameOutcome"!=i&&"PlayerCancelled"!=i&&"PlayerLeft"!=i||a[i].call(this,e,!0),"NewRound"===i?setTimeout((()=>{a[i].call(this,e,t)}),1e3):a[i].call(this,e,t),s.add(n),this.$store.dispatch("addEvent",{eventName:i,event:e}))})).on("error",(e=>{ws.error(`Error on event ${i}:`,e)}))},async setPassword(){const e=await Cs(),t="0x"+(0,Qn.sha256)(e);localStorage.setItem("passwordHash",t),localStorage.setItem("password",e)},getPassword(){const e=localStorage.getItem("password");return e},getPasswordHash(){const e=localStorage.getItem("passwordHash");return e},async getActiveGameId(){this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks));try{const e=await this.getWeb3.eth.getAccounts(),t=await this.contractInstance.methods.playerGame(e[0]).call({from:e[0]});return t}catch(e){}},copyAffiliateLink(){const e=new URL(window.location.href);e.searchParams.set("ref",this.getActiveAccount),navigator.clipboard.writeText(e.href),alert("Copied to clipboard!")},copyTextToClipboard(e){var t=document.createElement("textarea");t.style.position="fixed",t.style.top=0,t.style.left=0,t.style.width="2em",t.style.height="2em",t.style.padding=0,t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent",t.value=e,document.body.appendChild(t),t.focus(),t.select();try{var n=document.execCommand("copy"),a=n?"successful":"unsuccessful";ws.log("Copying text command was "+a)}catch(s){ws.log("Oops, unable to copy")}document.body.removeChild(t)},copyPasswordGameLink(){const e=this.getPassword(),t=this.selectedBet,n=window.location.protocol+"//"+window.location.host+window.location.pathname,a="?game="+encodeURIComponent(e)+"&bet="+encodeURIComponent(t),s=n+a;this.copyTextToClipboard(s)},async registerAsConsumer(){if(ws.log("Registering as consumer..."),alert("Registering as consumer..."),this.affiliateContract)try{const e=await this.getWeb3.eth.getAccounts(),t=this.getWeb3.utils.toWei("0.1","gwei"),n=this.getWeb3.estimateGas({from:e[0],to:this.affiliateContract.options.address,data:this.affiliateContract.methods.registerAsConsumer().encodeABI()}),a=localStorage.getItem("affiliateCode");ws.log("affiliateAddress:",a);const s=await this.affiliateContract.methods.registerAsConsumer(a).send({from:this.activeAccount,gasPrice:t,gasLimit:n});ws.log("registerAsConsumer result:",s)}catch(e){ws.error("Error registering as consumer:",e)}},async userMustHave(e,t){ws.log("checking is user has");const n=await this.getWeb3.eth.getBalance(this.activeAccount);return!(parseInt(n)<parseInt(e))||(await this.setDoesNotHaveFunds(e,t),!1)},async setDoesNotHaveFunds(e,t){this.minimumAmount=1e-18*e,this.onAddFunds=(...e)=>{this.showAddFundsModal=!1,t(...e)},this.showAddFundsModal=!0},async registerGame(){if(this.isJoiningPasswordMatch)await this.joinPasswordMatch(this.$store.state.joiningPassword,this.$store.state.joiningBetAmount);else if(this.playWithFriend)await this.createPasswordGame();else{if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks)),!this.selectedBet)return ws.log("Please select a bet amount."),void alert("Please select a bet amount.");this.shouldSetAffiliateCode||ws.log("Not registering as consumer...");try{var e,t,n;ws.log("Registering game...",this.currentGameId),this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"]||this.createGame(null!==(t=this.currentGameId)&&void 0!==t?t:"0"),this.games[null!==(n=this.currentGameId)&&void 0!==n?n:"0"].states[0][this.getActiveAccount]=ct.Registering;const a=await this.getWeb3.eth.getAccounts(),s=this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether");if(!await this.userMustHave(s,(()=>{})))throw new Error("User does not have enough funds");const i=await this.getWeb3.eth.getGasPrice(),r=5*await this.contractInstance.methods.register().estimateGas({from:a[0],to:this.contractInstance.options.address,value:this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether")}),o=i*r,l=this.balance*10**18;if(l<o)return void this.setDoesNotHaveFunds(o,this.registerGame);if(this.isBurner){const e=this.getWeb3.utils.toWei((this.burnerTopUpAmount+parseFloat(this.selectedBet)).toString(),"ether");ws.log("totalValue:",e);await this.burnerContractInstance.methods.registerWithBurner(this.burnerAddress,s).send({from:a[0],value:e,gasPrice:i,gasLimit:r});this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending")}else{await this.contractInstance.methods.register().send({from:a[0],value:s,gasPrice:i,gasLimit:r})}localStorage.setItem("lastBetAmount",this.selectedBet)}catch(r){var a,s,i;this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[0][this.getActiveAccount]=ct.Initial,ws.error("Error registering game:",r)}}},async createPasswordGame(){if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks)),this.selectedBet)try{var e,t,n;ws.log("Creating password game...",this.currentGameId),this.games[null!==(e=this.currentGameId)&&void 0!==e?e:"0"]||this.createGame(null!==(t=this.currentGameId)&&void 0!==t?t:"0"),this.games[null!==(n=this.currentGameId)&&void 0!==n?n:"0"].states[0][this.getActiveAccount]=ct.Registering;const a=this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether");if(!await this.userMustHave(a,(()=>{})))throw new Error("User does not have enough funds");await this.setPassword();const s=this.getPasswordHash(),i=await this.getWeb3.eth.getAccounts(),r=await this.getWeb3.eth.getGasPrice(),o=5*await this.contractInstance.methods.createPasswordMatch(s).estimateGas({from:i[0],to:this.contractInstance.options.address,value:a});ws.log("gasLimit:",o);const l=await this.contractInstance.methods.playerGame(i[0]).call({from:i[0]}),d=r*o,u=this.balance*10**18;if(u<d)return ws.log("is setting does not have funds"),void this.setDoesNotHaveFunds(d,this.createPasswordGame);if(ws.log("gameId:",l),this.isBurner){const e=this.getWeb3.utils.toWei((this.burnerTopUpAmount+parseFloat(this.selectedBet)).toString(),"ether");await this.burnerContractInstance.methods.createPasswordMatchWithBurner(this.burnerAddress,a,s).send({from:i[0],value:e,gasPrice:r,gasLimit:o});this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending")}else{await this.contractInstance.methods.createPasswordMatch(s).send({from:i[0],value:a,gasPrice:r,gasLimit:o})}localStorage.setItem("lastBetAmount",this.selectedBet)}catch(r){var a,s,i;this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[0][this.getActiveAccount]=ct.Initial,ws.error("Error registering game:",r)}else alert("Please select a bet amount.")},async joinPasswordMatch(e,t,n=!1){if(n)return this.$store.dispatch("setIsJoiningPasswordMatch",!1),void this.clearQueryString();if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks)),this.selectedBet=t,!this.selectedBet)return ws.log("Please select a bet amount."),void alert("Please select a bet amount.");this.shouldSetAffiliateCode?await this.registerAsConsumer():ws.log("Not registering as consumer...");try{var a,s,i;ws.log("Joining password match...",this.currentGameId),this.$store.dispatch("setIsJoiningPasswordMatch",!0),this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[0][this.getActiveAccount]=ct.Registering;const t=await this.getWeb3.eth.getAccounts(),n=this.getWeb3.utils.toWei(this.selectedBet.toString(),"ether"),r=this.getWeb3.utils.toWei((this.burnerTopUpAmount+parseFloat(this.selectedBet)).toString(),"ether");if(!await this.userMustHave(r,(()=>{})))return;const o=await this.getWeb3.eth.getGasPrice(),l=this.isBurner?await this.burnerContractInstance.methods.joinPasswordMatchWithBurner(this.burnerAddress,n,e).estimateGas({from:t[0],to:this.contractInstance.options.address,value:r}):await this.contractInstance.methods.joinPasswordMatch(e).estimateGas({from:t[0],to:this.contractInstance.options.address,value:n});this.balance;if(this.isBurner){await this.burnerContractInstance.methods.joinPasswordMatchWithBurner(this.burnerAddress,n,e).send({from:t[0],value:r,gasPrice:o,gasLimit:l});this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending")}else{await this.contractInstance.methods.joinPasswordMatch(e).send({from:t[0],value:n,gasPrice:o,gasLimit:l})}localStorage.setItem("lastBetAmount",this.selectedBet),this.$store.dispatch("setIsJoiningPasswordMatch",!1),this.clearQueryString()}catch(d){var r,o,l;this.games[null!==(r=this.currentGameId)&&void 0!==r?r:"0"]||this.createGame(null!==(o=this.currentGameId)&&void 0!==o?o:"0"),this.games[null!==(l=this.currentGameId)&&void 0!==l?l:"0"].states[0][this.getActiveAccount]=ct.Initial,ws.error("Error registering game:",d),this.$store.dispatch("setIsJoiningPasswordMatch",!1),this.clearQueryString()}},async sendMove(e=0){const t=3;if(e>=t)return void ws.log("Max retries reached. Aborting revealMove.");const n=this.gameState;if(this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks)),this.selectedBet)try{var a,s,i;ws.log("Sending game...",this.currentGameId),this.games[null!==(a=this.currentGameId)&&void 0!==a?a:"0"]||this.createGame(null!==(s=this.currentGameId)&&void 0!==s?s:"0"),this.games[null!==(i=this.currentGameId)&&void 0!==i?i:"0"].states[this.currentRound][this.getActiveAccount]=ct.Sending,this.randomString=Cs();const e="0x"+(0,Qn.sha256)(this.selectedMove+this.randomString);ws.log("clearMove:",this.selectedMove+this.randomString);const t=await this.getWeb3.eth.getAccounts(),n=this.getWeb3.utils.toWei("0.3","gwei"),r=3e6;if(this.isBurner){this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending");await this.burnerContractInstance.methods.commit(parseInt(this.currentGameId),e).send({from:this.burnerAddress,gasPrice:n,gasLimit:r,nonce:this.burnerNonce++})}else{const a=await this.contractInstance.methods.commit(parseInt(this.currentGameId),e).send({from:t[0],gasPrice:n,gasLimit:r});ws.log("Game registered:",a)}localStorage.setItem("lastSentMove",this.selectedMove),localStorage.setItem("lastRandomString",this.randomString)}catch(d){var r,o,l;this.games[null!==(r=this.currentGameId)&&void 0!==r?r:"0"]||this.createGame(null!==(o=this.currentGameId)&&void 0!==o?o:"0"),this.games[null!==(l=this.currentGameId)&&void 0!==l?l:"0"].states[this.getActiveAccount]=n,ws.error("Error sending move:",d),await this.sendMove(e+1),this.selectedMove="",ws.error("Error registering move:",d)}else alert("Please select a bet amount.")},async cancelGame(){this.gameState;this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks));try{ws.log("Cancelling game...",this.currentGameId);const e=await this.getWeb3.eth.getAccounts(),t=await this.getWeb3.eth.getGasPrice(),n=await this.contractInstance.methods.cancel(parseInt(this.currentGameId)).estimateGas({from:e[0],to:this.contractInstance.options.address}),a=t*n,s=this.balance*10**18;if(s<a)return void this.setDoesNotHaveFunds(a,this.cancelGame);const i=await this.contractInstance.methods.cancel(parseInt(this.currentGameId)).send({from:e[0],gasPrice:t,gasLimit:n});ws.log("Game cancelled:",i)}catch(e){ws.error("Error cancelling game:",e)}},async leaveGame(){this.gameState;this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks));try{ws.log("Leaving game...",this.currentGameId);const e=await this.getWeb3.eth.getAccounts(),t=await this.getWeb3.eth.getGasPrice(),n=10*(this.isBurner?await this.burnerContractInstance.methods.leave(parseInt(this.currentGameId)).estimateGas({from:e[0],to:this.contractInstance.options.address}):await this.contractInstance.methods.leave(parseInt(this.currentGameId)).estimateGas({from:e[0],to:this.contractInstance.options.address}));if(this.isBurner){this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending");await this.burnerContractInstance.methods.leave(parseInt(this.currentGameId)).send({from:this.burnerAddress,gasPrice:t,gasLimit:n,nonce:this.burnerNonce++})}else{const a=await this.contractInstance.methods.leave(parseInt(this.currentGameId)).send({from:e[0],gasPrice:t,gasLimit:n});ws.log("Game left:",a)}}catch(e){ws.error("Error cancelling game:",e)}},async revealMove(e=0){const t=3;if(e>=t)return void ws.log("Max retries reached. Aborting revealMove.");this.gameState;this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks));try{this.games[this.currentGameId]||this.createGame(this.currentGameId),this.games[this.currentGameId].states[this.getActiveAccount]=ct.Revealing;const e=await this.getWeb3.eth.getAccounts(),t=`${this.selectedMove}${this.randomString}`,n=this.getWeb3.utils.toWei("0.3","gwei"),a=3e6;if(this.isBurner){this.burnerNonce=await this.getWeb3Read.eth.getTransactionCount(this.burnerAddress,"pending");await this.burnerContractInstance.methods.reveal(parseInt(this.currentGameId),t).send({from:this.burnerAddress,gasPrice:n,gasLimit:a,nonce:this.burnerNonce++})}else{await this.getWeb3Read.eth.getTransactionCount(e[0],"pending"),await this.contractInstance.methods.reveal(parseInt(this.currentGameId),t).send({from:e[0],gasPrice:n,gasLimit:a})}ws.log("Current gameState:",this.games[this.currentGameId].states[this.getActiveAccount])}catch(n){this.games[this.currentGameId]||this.createGame(this.currentGameId),this.games[this.currentGameId].states[this.getActiveAccount]=ct.Sent,ws.error("Error revealing move:",n),ws.log("Retrying revealMove..."),await this.revealMove(e+1)}},async getGameOutcome(){this.contractInstance||(this.contractInstance=new this.getWeb3.eth.Contract(Ts,ks));try{const e=await this.getWeb3.eth.getAccounts(),t=this.getWeb3.utils.toWei("0.1","gwei"),n=3e6,a=await this.contractInstance.methods.getOutcome(this.currentGameId).call({from:e[0],gasPrice:t,gasLimit:n});ws.log("Game outcome:",a)}catch(e){ws.error("Error getting game outcome:",e)}},async sleep(e){return new Promise((t=>setTimeout(t,e)))},async fetchPlayerRegisteredEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayerRegistered",{fromBlock:s,toBlock:i});this.playerRegisteredEvents.push(...e),ws.log("playerRegisteredEvents:",this.playerRegisteredEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayerWaitingEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayerWaiting",{fromBlock:s,toBlock:i});this.playerWaitingEvents.push(...e),ws.log("playerWaitingEvents:",this.playerWaitingEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayersMatchedEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayersMatched",{fromBlock:s,toBlock:i});this.playersMatchedEvents.push(...e),ws.log("playersMatchedEvents:",this.playersMatchedEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayersMoveCommittedEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("MoveCommitted",{fromBlock:s,toBlock:i});this.moveCommittedEvents.push(...e),ws.log("moveCommittedEvents:",this.moveCommittedEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchMoveRevealedEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("MoveRevealed",{fromBlock:s,toBlock:i});this.moveRevealedEvents.push(...e),ws.log("moveRevealedEvents:",this.moveRevealedEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchNewRoundEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("NewRound",{fromBlock:s,toBlock:i});this.newRoundEvents.push(...e),ws.log("newRoundEvents:",this.newRoundEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchGameOutcomeEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("GameOutcome",{fromBlock:s,toBlock:i});this.gameOutcomeEvents.push(...e),ws.log("gameOutcomeEvents:",this.gameOutcomeEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayerCancelledEvents(e,t){const n=1e4,a=await this.getContract();let s=e,i=Math.min(s+n,t);while(s<=t){const e=await a.getPastEvents("PlayerCancelled",{fromBlock:s,toBlock:i});this.playerCancelledEvents.push(...e),ws.log("playerCancelledEvents:",this.playerCancelledEvents.map((e=>e.returnValues))),s=i+1,i=Math.min(s+n,t)}},async fetchPlayerEvents(e,t,n){const a=1e4,s=await this.getContract();let i=e,r=Math.min(i+a,t);while(i<=t){const e=await s.getPastEvents(n,{fromBlock:i,toBlock:r});this.playerCancelledEvents.push(...e),ws.log(n+"events",this.playerCancelledEvents.map((e=>e.returnValues))),i=r+1,r=Math.min(i+a,t)}},addToHandledEvents(e,t){const n=`${e.transactionHash}-${t}-${e.logIndex}`;this.handledEventIds.add(n)},alreadyHandled(e,t){const n=`${e.transactionHash}-${t}-${e.logIndex}`;return this.handledEventIds.has(n)},async processEvents(){const e=await this.getAccount();for(const t of this.playerRegisteredEvents)this.handleRegisterEvent(t,e),this.addToHandledEvents(t,"PlayerRegistered");for(const t of this.playerWaitingEvents)this.handleWaitingEvent(t),this.addToHandledEvents(t,"PlayerWaiting");for(const t of this.playerCancelledEvents)this.handlePlayerCancelledEvent(t),this.addToHandledEvents(t,"PlayerCancelled");for(const t of this.playersMatchedEvents)this.handlePlayersMatchedEvent(t),this.addToHandledEvents(t,"PlayersMatched");for(const t of this.moveCommittedEvents)this.handleMoveSentEvent(t),this.addToHandledEvents(t,"MoveCommitted");for(const t of this.moveRevealedEvents)this.handleRevealedEvent(t),this.addToHandledEvents(t,"MoveRevealed");for(const t of this.newRoundEvents)this.handleNewRoundEvent(t),this.addToHandledEvents(t,"NewRound");for(const t of this.gameOutcomeEvents)this.handleOutcomeEvent(t),this.addToHandledEvents(t,"GameOutcome")},async checkAffililiateCode(){const e=new URLSearchParams(window.location.search),t=e.get("ref");t&&localStorage.setItem("affiliateCode",t),this.affiliateOfUser=await this.affiliateContract.methods.getAffiliateOfConsumer(this.activeAccount).call(),ws.log("affiliate of user",this.affiliateOfUser)},clearQueryString(){var e=new URL(window.location.toString());e.search="",window.history.replaceState({},document.title,e.toString()),this.$store.dispatch("setJoiningPassword",""),this.$store.dispatch("setIsJoiningPasswordMatch",!1)},async checkJoiningPassword(){const e=new URLSearchParams(window.location.search),t=e.get("game"),n=e.get("bet");t&&!this.isInGame&&!this.isJoiningGame&&n&&(this.$store.dispatch("setJoiningPassword",t),this.$store.commit("joiningBetAmount",n),ws.log("joining match with bet amount",n))}}},Es=(0,gn.Z)(Ss,[["render",tt]]),Ms=Es;function Ps(e,t,n,a,r,o){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Uk)(" Staking screen "),(0,s._)("div",null,[(0,s._)("div",null,"Hands token balance : "+(0,i.zw)(r.handsTokenBalance),1),(0,s._)("div",null,"Your staked amount : "+(0,i.zw)(r.handsStakedBalance),1),(0,s._)("div",null,"Share of total hands staked : "+(0,i.zw)(r.handsStakedBalance/r.totalHandsStakedBalance*100)+"%",1),(0,s._)("div",null,"Your claimable ETH for staking : "+(0,i.zw)(r.claimableEthForStaking),1),(0,s._)("div",null,"Protocol fee revenue : "+(0,i.zw)(r.protocolFeeRevenue),1),(0,s._)("div",null,"Protocol affiliate revenue : "+(0,i.zw)(e.protocolAffiliateRevenue),1),(0,s._)("div",null,"Total hands staked balance : "+(0,i.zw)(r.totalHandsStakedBalance),1),(0,s._)("div",null,[(0,s.Uk)("Your onboarded addresses : "),((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(r.onboardedAddresses,(e=>((0,s.wg)(),(0,s.iD)("div",{key:e},(0,i.zw)(e),1)))),128))]),(0,s._)("div",null,"Claimable Affiliate rewards : "+(0,i.zw)(r.claimableEthForAffiliate),1),(0,s._)("div",null,"Your affiliate link : "+(0,i.zw)(r.affiliateLink),1)]),(0,s._)("button",{onClick:t[0]||(t[0]=(...e)=>o.stake&&o.stake(...e))},"Stake 10 HANDS"),(0,s._)("button",{onClick:t[1]||(t[1]=(...e)=>o.unstake&&o.unstake(...e))},"Unstake 10 HANDS"),(0,s._)("button",{onClick:t[2]||(t[2]=(...e)=>o.claim&&o.claim(...e))},"Claim Staking Rewards"),(0,s._)("button",{onClick:t[3]||(t[3]=(...e)=>o.claimAffiliateRewards&&o.claimAffiliateRewards(...e))},"Claim Affiliate Rewards")])}var Is=n(15941);const _s={components:{},props:{provider:{type:String,default:null}},data(){return{stakingContract:null,handsTokenContract:null,affiliateContract:null,activeAccount:null,handsTokenBalance:0,handsStakedBalance:0,totalHandsStakedBalance:0,claimableEthForStaking:0,claimableEthForAffiliate:0,affiliateLink:null,onboardedAddresses:[],protocolFeeRevenue:0,totalStakedPerBlock:null}},computed:{getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new(it())(this.provider)}},mounted(){Is.log("provider",this.provider),Is.log("mainContracts",nt),this.init()},watch:{},methods:{async init(){await this.setAccount(),await this.setContracts(),this.setHandsTokenBalance(),this.setHandsStakedBalance(),this.setTotalHandsStakedAmount(),this.setClaimableEthForStaking(),this.setClaimableEthForAffiliate(),this.setProtocolFeeRevenue()},async setAccount(){const e=await this.getWeb3.eth.getAccounts();Is.log("accounts",e),this.activeAccount=e[0]},async setContracts(){this.stakingContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),this.handsTokenContract=new this.getWeb3.eth.Contract(nt.deployedAbis.HandsToken,nt.deployedContracts.HandsToken),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async setHandsTokenBalance(){if(!this.handsTokenContract)return 0;const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18,setInterval((async()=>{const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18}),5e3)},async setHandsStakedBalance(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18}),5e3)},async setTotalHandsStakedAmount(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18}),5e3)},async setClaimableEthForStaking(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18}),5e3)},async setClaimableEthForAffiliate(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18,setInterval((async()=>{const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18}),5e3)},async setOnboardedAddresses(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e,setInterval((async()=>{const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e}),5e3)},async setProtocolFeeRevenue(){const e=await this.getWeb3.eth.getBalance(nt.deployedContracts.Bank);this.protocolFeeRevenue=e/10**18,setInterval((async()=>{const e=await this.getWeb3.eth.getBalance(nt.deployedContracts.Bank);this.protocolFeeRevenue=e/10**18}),5e3)},async stake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e7,n=(await this.handsTokenContract.methods.approve(nt.deployedContracts.Staking,this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}),await this.stakingContract.methods.stake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}));return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Is.log("Staked",n),n}catch(e){return Is.error("Error staking. Message:",e.message),e.reason&&Is.error("Error reason:",e.reason),Is.error("Error stack trace:",e.stack),e}},async unstake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.unstake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Is.log("Unstaked",n),n}catch(e){return Is.log("Error unstaking",e),e}},async claim(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Is.log("Claimed",n),n}catch(e){return Is.log("Error claiming",e),e}},async claimAffiliateRewards(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Is.log("Claimed",n),n}catch(e){return Is.log("Error claiming",e),e}},async registerAsConsumer(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.registerAsConsumer("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266").send({from:this.activeAccount,gasPrice:e,gasLimit:t});return Is.log("Registered as consumer",n),n}catch(e){throw Is.log("Error registering as a consumer:",e),e}},async getBlockNumber(){return await this.getWeb3.eth.getBlockNumber()}}},Rs=(0,gn.Z)(_s,[["render",Ps]]),Bs=Rs;var Ls=n(23821),Fs=n(31267),xs=n(8945),Ws=n(15941);const Os="0x1",Gs="0x118",Hs="0x10e",Ds="0x7A69",Ns="0x66eed",zs={[Os]:"https://rpc.ankr.com/eth",[Gs]:"https://testnet.era.zksync.dev",[Hs]:"http://localhost:3050/",[Ds]:"http://localhost:8545",[Ns]:"https://goerli-rollup.arbitrum.io/rpc"},Us=Ns,$s={name:"Home",props:{msg:String},components:{Game:Ms,Staking:Bs,ProfileIcon:Pa},computed:(0,ta.rn)(["loggedin","loading","loginButtonStatus","connecting","activeAccount","balance","provider","isInGame","joiningPassword","isJoiningPasswordMatch"]),methods:{async leaveGame(){await sa.state.leaveGame()}},setup(){const e=async()=>{const e=new URLSearchParams(window.location.search),t=e.get("game"),n=e.get("bet");sa.dispatch("setJoiningPassword",""),sa.dispatch("setIsJoiningPasswordMatch",!1),t&&n&&(sa.dispatch("setJoiningPassword",t),sa.commit("setJoiningBetAmount",n),sa.dispatch("setIsJoiningPasswordMatch",!0))},t=(0,lt.iH)(!1),n=((0,lt.iH)(null),"BNXP4nqNQ7AgD-kFeqeLjvBNM9RVVJJmhOgd1DVZw89SY7UzYGh_RwXK-YVIVFn8qFU6BbL3krmslFNJPpu71Bs"),a=new Ls.$L({clientId:n,chainConfig:{chainNamespace:Fs.EN.EIP155,chainId:Us,rpcTarget:zs[Us],displayName:"Arbitrum Testnet",blockExplorer:"https://goerli.arbiscan.io/",ticker:"ETH",tickerName:"ETH"},uiConfig:{defaultLanguage:"en"},web3AuthNetwork:"testnet"});Ws.log("web3auth provider",a.provider);const i=new xs.MetamaskAdapter({clientId:n,sessionTime:3600,web3AuthNetwork:"testnet",chainConfig:{chainNamespace:Fs.EN.EIP155,chainId:Us,rpcTarget:zs[Us],blockExplorer:"https://goerli.arbiscan.io/",displayName:"Arbitrum Testnet",ticker:"ETH",tickerName:"ETH"}});i.setAdapterSettings({sessionTime:86400,chainConfig:{chainNamespace:Fs.EN.EIP155,chainId:Us,rpcTarget:zs[Us],blockExplorer:"https://goerli.arbiscan.io/",displayName:"Arbitrum Testnet",ticker:"ETH",tickerName:"ETH"},web3AuthNetwork:"testnet"}),a.configureAdapter(i),a.initModal(),sa.commit("setWeb3Auth",a),(0,s.bv)((async()=>{try{Ws.log("onMounted"),e(),sa.dispatch("loginWeb3Auth"),Ws.log("provider",sa.state.provider)}catch(t){Ws.log("error",t)}finally{sa.dispatch("setLoading",!1)}}));const r=async()=>{if(!sa.state.provider||!sa.state.activeAccount)return;const e=new ot(sa.state.provider),t=await e.getBalance();Ws.log("balanceEth",t),sa.dispatch("setBalance",t)},o=async()=>{await r(),setTimeout(o,1e3)};(0,s.YP)((()=>sa.state.provider),(async(e,t)=>{e&&(await o(),await h()),null==e&&null!=t&&alert("You have disconnected from your wallet. Please reconnect to continue playing.")}),{immediate:!0});const l=async()=>{if(!a)return void b("web3auth not initialized yet");const e=await a.connect();sa.dispatch("setLoading",!0),sa.dispatch("setProvider",e),a.provider&&(sa.dispatch("setProvider",a.provider),Ws.log("setProvider",a.provider),sa.dispatch("setLoggedIn",!0)),"metamask"===a.connectedAdapterName&&sa.dispatch("setIsMetamask",!0),b("Logged in Successfully!")},d=async()=>{if(!a)return void b("web3auth not initialized yet");const e=await a.authenticateUser();b(e)},u=async()=>{if(!a)return void b("web3auth not initialized yet");const e=await a.getUserInfo();b(e)},c=async()=>{a?(await a.logout(),sa.dispatch("setProvider",null),sa.dispatch("setLoggedIn",!1)):b("web3auth not initialized yet")},p=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e=new ot(sa.state.provider),t=await e.getChainId();b(t)},y=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e={chainId:"0x5",displayName:"Goerli",chainNamespace:Fs.EN.EIP155,tickerName:"Goerli",ticker:"ETH",decimals:18,rpcTarget:"https://rpc.ankr.com/eth_goerli",blockExplorer:"https://goerli.etherscan.io"};await(null===a||void 0===a?void 0:a.addChain(e)),b("New Chain Added")},m=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");Fs.EN.EIP155;await(null===a||void 0===a?void 0:a.switchChain({chainId:"0x5"})),b("Chain Switched")},h=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e=new ot(sa.state.provider),t=await e.getAccounts();sa.dispatch("setActiveAccount",t[0]),b(t)},g=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e=new ot(sa.state.provider),t=await e.getBalance();b(t)},v=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e=new ot(sa.state.provider),t=await e.sendTransaction();b(t)},f=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e=new ot(sa.state.provider),t=await e.signMessage();b(t)},w=async()=>{if(!sa.state.provider)return void b("provider not initialized yet");const e=new ot(sa.state.provider),t=await e.getPrivateKey();b(t)};function b(...e){const t=document.querySelector("#console>p");t&&(t.innerHTML=JSON.stringify(e||{},null,2))}return{staking:t,getWeb3:a,login:l,authenticateUser:d,logout:c,getUserInfo:u,getChainId:p,addChain:y,switchChain:m,getAccounts:h,getBalance:g,sendTransaction:v,signMessage:f,getPrivateKey:w}}},Js=(0,gn.Z)($s,[["render",h]]),js=Js;var qs=n(22483);const Vs=n.p+"img/background.ae916ffd.png",Ys={key:0,class:""},Zs=(0,s._)("h1",{class:"title-header"}," Welcome to Handsy.io ",-1),Ks=(0,s._)("p",{class:"title-paragraph"},[(0,s.Uk)(" Play rock paper scissors with your friends or with random opponents for "),(0,s._)("span",{class:"currency-symbol bolden"},"real money")],-1),Qs={key:1,src:Vs,style:{width:"100%",position:"fixed",bottom:"0",left:"0","z-index":"-1"}},Xs={key:2};function ei(e,t,n,a,r,o){const l=(0,s.up)("Game"),d=(0,s.up)("Staking");return(0,s.wg)(),(0,s.iD)(s.HY,null,[e.loggedin?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("header",Ys,[Zs,Ks,(0,s._)("button",{class:"button-dark",onClick:t[0]||(t[0]=(...e)=>o.login&&o.login(...e)),style:{cursor:"pointer",width:"270px",height:"86px"}},(0,i.zw)(e.loading?"Logging in...":"Sign Up")+" "+(0,i.zw)(e.joiningPassword?"to join match":""),1)])),e.loggedin?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("img",Qs)),e.loggedin?((0,s.wg)(),(0,s.iD)("div",Xs,[e.staking?(0,s.kq)("",!0):((0,s.wg)(),(0,s.j4)(l,{key:0,provider:e.provider,balance:e.balance},null,8,["provider","balance"])),e.staking?((0,s.wg)(),(0,s.j4)(d,{key:1,provider:e.provider},null,8,["provider"])):(0,s.kq)("",!0)])):(0,s.kq)("",!0)],64)}const ti={name:"Home",props:{msg:String},components:{Game:Ms,Staking:Bs},computed:(0,ta.rn)(["loggedin","loading","loginButtonStatus","connecting","activeAccount","balance","provider","isJoiningPasswordMatch","joiningPassword"]),methods:{login(){sa.dispatch("loginWeb3Auth")}}},ni=(0,gn.Z)(ti,[["render",ei]]),ai=ni,si={class:"content profile-view"},ii=(0,s._)("p",null,"Player history",-1),ri={class:"profile-display"},oi={style:{margin:"0","margin-top":"-50px",padding:"0","align-items":"end","margin-bottom":"-20px","font-size":"100px"}},li={class:"decimals"},di=(0,s._)("span",{class:"currency-symbol decimals",style:{margin:"0","margin-left":"10px"}},"ETH",-1),ui={style:{display:"flex",gap:"20px","align-items":"end"}},ci={key:0,class:"earnings green"},pi=(0,s._)("span",{class:"green",style:{"margin-left":"5px"}},"ETH",-1),yi={key:1,class:"earnings red"},mi=(0,s._)("span",{class:"red",style:{"margin-left":"5px"}},"ETH",-1),hi={key:2,class:"green",style:{margin:"0"}},gi={key:3,class:"red",style:{margin:"0"}};function vi(e,t,n,a,r,o){var l,d,u,c,p,y,m,h,g,v,f,w;const b=(0,s.up)("router-link"),k=(0,s.up)("profile-icon"),T=(0,s.up)("profile-item"),C=(0,s.up)("profile-game-list");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",si,[(0,s.Wm)(b,{class:"back",to:"/"}),(0,s.Wm)(k,{class:"profile-big",address:o.address,isLarge:!0},null,8,["address"]),ii,(0,s._)("div",ri,[(0,s._)("h1",oi,[(0,s.Uk)((0,i.zw)(null===(l=this.balance)||void 0===l?void 0:l.toString().split(".")[0])+" ",1),(0,s._)("span",li," ."+(0,i.zw)(null!==(d=null===(u=this.balance)||void 0===u||null===(c=u.toString().split(".")[1])||void 0===c?void 0:c.substring(0,4))&&void 0!==d?d:"00"),1),di]),(0,s._)("div",ui,[this.earnings>0?((0,s.wg)(),(0,s.iD)("div",ci,[(0,s.Uk)(" +"+(0,i.zw)(null===(p=this.earnings)||void 0===p?void 0:p.toString().split(".")[0])+" ",1),(0,s._)("span",null," ."+(0,i.zw)(null!==(y=null===(m=this.earnings)||void 0===m||null===(h=m.toString().split(".")[1])||void 0===h?void 0:h.substring(0,4))&&void 0!==y?y:"00"),1),pi])):this.earnings<=0?((0,s.wg)(),(0,s.iD)("div",yi,[(0,s.Uk)((0,i.zw)(null===(g=this.earnings)||void 0===g?void 0:g.toString().split(".")[0])+" ",1),(0,s._)("span",null," ."+(0,i.zw)(null!==(v=null===(f=this.earnings)||void 0===f||null===(w=f.toString().split(".")[1])||void 0===w?void 0:w.substring(0,4))&&void 0!==v?v:"00"),1),mi])):(0,s.kq)("",!0),this.earnings>0?((0,s.wg)(),(0,s.iD)("p",hi,"earned")):this.earnings<=0?((0,s.wg)(),(0,s.iD)("p",gi,"earned")):(0,s.kq)("",!0)])]),(0,s.Wm)(T,{address:o.address},null,8,["address"])]),(0,s.Wm)(C,{games:o.games,address:o.address},null,8,["games","address"])],64)}const fi=e=>((0,s.dD)("data-v-98a2e76e"),e=e(),(0,s.Cn)(),e),wi={style:{margin:"120px 80px",overflow:"auto"}},bi={style:{}},ki=fi((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"prize-symbol-table"}),(0,s._)("p",null,"Time")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Result")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Score")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Earned")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Rounds")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"rounds-symbol-table"}),(0,s._)("p",null,"Opponent")])])])],-1))),Ti={class:"time"},Ci={class:"result"},Ai={key:0,class:"grey winnings"},Si={key:1,class:"winnings red"},Ei={key:2,class:"winnings green"},Mi={key:3,class:"winnings green"},Pi={key:4,class:"winnings red"},Ii={class:"score"},_i={key:0,class:"winnings green"},Ri={class:"blue"},Bi={key:1,class:"winnings red"},Li={class:"rounds"},Fi={class:"player"};function xi(e,t,n,a,r,o){const l=(0,s.up)("profile-item");return(0,s.wg)(),(0,s.iD)("div",wi,[(0,s._)("table",bi,[ki,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>{var n,a,r;return(0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",Ti,(0,i.zw)(o.timeString(e.time)),1),(0,s._)("td",Ci,[o.wasCancelled(e)?((0,s.wg)(),(0,s.iD)("div",Ai,"Cancelled")):o.isLeaver(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Si,"Left")):o.isOpponentLeaver(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Ei,"Opponent Left")):o.isWinner(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Mi,"Won")):o.isLoser(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Pi,"Lost")):(0,s.kq)("",!0)]),(0,s._)("td",Ii,(0,i.zw)(e.points[e.playerA])+" : "+(0,i.zw)(null!==(n=e.points[e.playerB])&&void 0!==n?n:0),1),(0,s._)("td",{class:(0,i.C_)(["earned",{"earned-positive":o.isWinner(e,this.address),"earned-negative":o.isLoser(e,this.address)}])},[o.isWinner(e,this.address)?((0,s.wg)(),(0,s.iD)("div",_i,[(0,s.Uk)("+"+(0,i.zw)(e.bet)+" ETH ",1),(0,s._)("span",Ri,"(-"+(0,i.zw)(o.getApplicationFee(e))+")",1)])):o.isLoser(e,this.address)?((0,s.wg)(),(0,s.iD)("div",Bi,(0,i.zw)(o.getPlayerWinnings(e,this.address))+" ETH ",1)):(0,s.kq)("",!0)],2),(0,s._)("td",Li,(0,i.zw)(Object.keys(e.moves).length),1),(0,s._)("td",Fi,[(0,s.Wm)(l,{address:(null===(a=this.address)||void 0===a?void 0:a.toLowerCase())==(null===(r=e.playerA)||void 0===r?void 0:r.toLowerCase())?e.playerB:e.playerA},null,8,["address"])])])})),128))])])])}var Wi=n(15941);const Oi={components:{GameMove:Rt,ProfileItem:fn},data(){return{selectedTab:"Completed"}},props:{address:{type:String},games:{type:Array}},computed:{selectedData(){return Wi.log("profile game list",this.games),this.games}},methods:{timeString(e){const t=this.$store.state.currentTime;return bn(e,t)},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))},getWinnings(e){return(e-2*e*Tt).toFixed(4)},getApplicationFee(e){const t=e.bet;return 2*t*Tt},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Wi.log("getting player winnings",e,t,s,i,r),i==ut.Cancelled?(Wi.log("cancelled"),0):i==ut.PlayerALeft&&r?-a:i==ut.PlayerBLeft&&r?s:i!=ut.PlayerALeft||r?i!=ut.PlayerBLeft||r?i==ut.Draw?0:i==ut.PlayerA&&r?s:i==ut.PlayerB&&r?-a:i!=ut.PlayerA||r?i!=ut.PlayerB||r?i==ut.PlayerATimeout&&r?-a:i==ut.PlayerBTimeout&&r?s:i!=ut.PlayerATimeout||r?i!=ut.PlayerBTimeout||r?i==ut.BothTimeout?0:void 0:-a:s:s:-a:-a:s},wasCancelled(e){const t=e.outcome;return t==ut.Cancelled},isLeaver(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return a?e.outcome==ut.PlayerALeft:e.outcome==ut.PlayerBLeft},isOpponentLeaver(e,t){var n;const a=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return a?e.outcome==ut.PlayerBLeft:e.outcome==ut.PlayerALeft},isWinner(e,t){const n=this.getPlayerWinnings(e,t);return Wi.log("getting winnings for player",n,t),n>0},isLoser(e,t){const n=this.getPlayerWinnings(e,t);return n<0}}},Gi=(0,gn.Z)(Oi,[["render",xi],["__scopeId","data-v-98a2e76e"]]),Hi=Gi;var Di=n(15941);const Ni=.05,zi={components:{ProfileItem:fn,ProfileGameList:Hi,ProfileIcon:Pa},data(){return{balance:0}},async mounted(){this.$store.dispatch("setBalanceOf",this.address);const e=new ot(this.$store.state.provider),t=await e.getBalanceOf(this.address);let n={...this.$store.state.balances};n[this.address.toLowerCase()]=t,Di.log("balances",t),Di.log("balances",n),this.$store.commit("setBalances",n),this.balance=t,Di.log("mounted")},methods:{timeString(e){const t=this.$store.state.currentTime;return timeAgo(e,t)},getWinnings(e){return(e-2*e*Ni).toFixed(4)},getApplicationFee(e){const t=e.bet;return 2*t*Ni},getPlayerPoints(e,t){return e.points[t]},getPlayerWinnings(e,t){var n;const a=e.bet,s=this.getWinnings(a),i=e.outcome,r=(null===t||void 0===t?void 0:t.toLowerCase())===(null===(n=e.playerA)||void 0===n?void 0:n.toLowerCase());return Di.log("getting player winnings",e,t,s,i,r),i==ut.Cancelled?(Di.log("cancelled"),0):i==ut.PlayerALeft&&r?-a:i==ut.PlayerBLeft&&r?s:i!=ut.PlayerALeft||r?i!=ut.PlayerBLeft||r?i==ut.Draw?0:i==ut.PlayerA&&r?s:i==ut.PlayerB&&r?-a:i!=ut.PlayerA||r?i!=ut.PlayerB||r?i==ut.PlayerATimeout&&r?-a:i==ut.PlayerBTimeout&&r?s:i!=ut.PlayerATimeout||r?i!=ut.PlayerBTimeout||r?i==ut.BothTimeout?0:void 0:-a:s:s:-a:-a:s}},computed:{provider(){return this.$store.state.provider},address(){return this.$route.params.id},truncatedAddress(){return this.address.substring(0,6)+"..."+this.address.substring(this.address.length-4,this.address.length)},games(){return Object.values(this.$store.state.games).filter((e=>"0"!=e.gameId&&(e.playerA.toLowerCase()==this.address.toLowerCase()||e.playerB.toLowerCase()==this.address.toLowerCase())&&e.outcome!=ut.None&&e.outcome!=ut.Cancelled&&""!=e.playerB&&""!=e.playerA)).sort(((e,t)=>{var n,a;return parseInt(null!==(n=t.time)&&void 0!==n?n:0)-parseInt(null!==(a=e.time)&&void 0!==a?a:0)}))},completedGames(){return Di.log("completed games",this.games.filter((e=>e.outcome!=ut.None))),this.games.filter((e=>e.outcome!=ut.None))},earnings(){let e=0;for(let t of this.games){const n=this.getPlayerWinnings(t,this.address);Di.log("earnings value: for",this.address,n,t.outcome),e+=parseFloat(n)}return Di.log("earnings",e),e}},props:{},watch:{provider:{handler(){this.$store.dispatch("setBalanceOf",this.address)},immediate:!0},address:{async handler(){const e=new ot(this.$store.state.provider),t=await e.getBalanceOf(this.address);let n={...this.$store.state.balances};n[this.address.toLowerCase()]=t,Di.log("balances",t),Di.log("balances",n),this.$store.commit("setBalances",n),this.balance=t,Di.log("mounted")},immediate:!0}}},Ui=(0,gn.Z)(zi,[["render",vi]]),$i=Ui,Ji={style:{gap:"50px"},class:"content staking-view"},ji={style:{"margin-bottom":"56"},class:"profile-big"},qi=(0,s._)("p",null,"Your balance",-1),Vi={style:{display:"flex","justify-content":"center",gap:"40px","align-items":"end"}},Yi={style:{margin:"0","margin-top":"-20px","margin-bottom":"-20px",padding:"0","align-items":"end","font-size":"100px"}},Zi=(0,s._)("span",{style:{"font-size":"50px"},class:"currency-symbol"},"HANDS",-1),Ki=(0,s._)("button",{style:{"margin-top":"60px","margin-bottom":"90px"},class:"button-dark"}," Buy HANDS ",-1),Qi={style:{width:"100%",display:"grid","grid-template-columns":"1fr auto 1fr","margin-bottom":"70px"}},Xi={style:{display:"flex",gap:"20px","align-items":"center","flex-direction":"column"}},er=(0,s._)("p",null,"Total staked",-1),tr={style:{display:"flex",gap:"20px","align-items":"center","flex-direction":"column"}},nr=(0,s._)("p",null,"Protocol Revenue",-1),ar=(0,s._)("span",{class:"currency-symbol"},"ETH",-1),sr={style:{display:"flex",gap:"20px","align-items":"center","flex-direction":"column"}},ir=(0,s._)("p",null,"Stakers",-1),rr={style:{display:"flex","justify-content":"space-between",gap:"40px"}},or={class:"card"},lr=(0,s._)("p",null,"Your stake",-1),dr=(0,s._)("span",{class:"currency-symbol"},"HANDS",-1),ur={style:{display:"flex"}},cr={class:"card"},pr=(0,s._)("p",null,"Your rewards",-1);function yr(e,t,n,a,r,o){var l,d,u,c;const p=(0,s.up)("router-link"),y=(0,s.up)("profile-icon"),m=(0,s.up)("modal-stake"),h=(0,s.Q2)("modal");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",Ji,[(0,s.Wm)(p,{class:"back",to:"/"}),(0,s._)("div",ji,[(0,s.Wm)(y,{address:r.activeAccount,isLarge:!0},null,8,["address"])]),qi,(0,s._)("div",Vi,[(0,s._)("h1",Yi,[(0,s.Uk)((0,i.zw)(null===(l=this.handsTokenBalance)||void 0===l?void 0:l.toString().split(".")[0])+"."+(0,i.zw)(null!==(d=null===(u=this.handsTokenBalance)||void 0===u||null===(c=u.toString().split(".")[1])||void 0===c?void 0:c.substring(0,4))&&void 0!==d?d:"00")+" ",1),Zi])]),Ki,(0,s._)("div",Qi,[(0,s._)("div",Xi,[er,(0,s._)("h2",null,(0,i.zw)(r.totalHandsStakedBalance)+" HANDS",1)]),(0,s._)("div",tr,[nr,(0,s._)("h2",null,[(0,s.Uk)((0,i.zw)(r.protocolFeeRevenue)+" ",1),ar])]),(0,s._)("div",sr,[ir,(0,s._)("h2",null,(0,i.zw)(r.stakerAmount),1)])]),(0,s._)("div",rr,[(0,s._)("div",or,[lr,(0,s._)("h1",null,[(0,s.Uk)((0,i.zw)(r.handsStakedBalance)+" ",1),dr]),(0,s._)("div",ur,[(0,s._)("button",{onClick:t[0]||(t[0]=(...e)=>o.showStakeModal&&o.showStakeModal(...e)),class:"button-dark"}," Stake "),(0,s._)("button",{onClick:t[1]||(t[1]=(...e)=>o.showUnstakeModal&&o.showUnstakeModal(...e)),class:"button-light"}," Unstake ")])]),(0,s._)("div",cr,[pr,(0,s._)("h1",null,(0,i.zw)(r.claimableEthForStaking)+" ETH",1),(0,s._)("button",{onClick:t[2]||(t[2]=(...e)=>o.claim&&o.claim(...e)),class:"button-dark"}," Claim ")])])]),(0,s.wy)(((0,s.wg)(),(0,s.j4)(m,{show:r.showModal,"onUpdate:show":t[3]||(t[3]=e=>r.showModal=e),isStake:r.isStake,"onUpdate:isStake":t[4]||(t[4]=e=>r.isStake=e)},{default:(0,s.w5)((()=>[(0,s.Uk)(" Hello world ")])),_:1},8,["show","isStake"])),[[h,r.stakeFunction,"stakeFunction"]])],64)}n(85827);const mr=e=>((0,s.dD)("data-v-424334e2"),e=e(),(0,s.Cn)(),e),hr={key:0,class:"modal-container"},gr={class:"modal"},vr={key:0,style:{"margin-top":"60px"}},fr=mr((()=>(0,s._)("span",{style:{color:"#E19885","font-weight":"bold"}},"HANDS",-1))),wr={key:1,style:{"margin-top":"60px"}},br=mr((()=>(0,s._)("span",{style:{color:"#E19885","font-weight":"bold"}},"HANDS",-1))),kr={class:"modal-button-holder"};function Tr(e,t,n,i,r,o){return(0,s.wg)(),(0,s.j4)(a.uT,{name:"fade"},{default:(0,s.w5)((()=>[n.show?((0,s.wg)(),(0,s.iD)("div",hr,[(0,s._)("div",gr,[n.isStake?((0,s.wg)(),(0,s.iD)("h4",vr,[(0,s.Uk)("Stake"),fr])):((0,s.wg)(),(0,s.iD)("h4",wr,[(0,s.Uk)("Unstake"),br])),(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[0]||(t[0]=e=>r.amount=e),type:"number",placeholder:"Amount",style:{width:"100%",height:"50px","border-radius":"10px",border:"1px solid #E19885",padding:"10px","font-size":"20px","font-weight":"bold",color:"#E19885","text-align":"center","margin-top":"20px","margin-bottom":"20px"}},null,512),[[a.nr,r.amount]]),(0,s._)("div",kr,[n.isStake?((0,s.wg)(),(0,s.iD)("button",{key:0,class:"button-dark",onClick:t[1]||(t[1]=(...e)=>o.stake&&o.stake(...e))}," Stake ")):((0,s.wg)(),(0,s.iD)("button",{key:1,class:"button-dark",onClick:t[2]||(t[2]=(...e)=>o.unstake&&o.unstake(...e))}," Unstake ")),(0,s._)("button",{class:"button-light",onClick:t[3]||(t[3]=(...e)=>o.toggleShow&&o.toggleShow(...e))}," Close ")])])])):(0,s.kq)("",!0)])),_:1})}var Cr=n(15941);const Ar={data(){return{amount:0}},model:{prop:"show",event:"update:show"},props:{show:{type:Boolean,default:!1},isStake:{type:Boolean,default:!0},stakeFunction:{type:Function,default:()=>{}}},methods:{toggleShow(){this.$emit("update:show",!this.show)},stake(){this.$store.dispatch("stake",this.amount.toString())},unstake(){this.$store.dispatch("unstake",this.amount.toString())}},computed:{isStaking(){return this.$store.state.isStaking},isUnstaking(){return this.$store.state.isUnstaking}},created(){Cr.log(this.move)}},Sr=(0,gn.Z)(Ar,[["render",Tr],["__scopeId","data-v-424334e2"]]),Er=Sr,Mr=e=>((0,s.dD)("data-v-59c5d9b6"),e=e(),(0,s.Cn)(),e),Pr={style:{margin:"0 80px",overflow:"auto",width:"90vw","text-align":"center",display:"flex","align-items":"center"}},Ir={style:{"border-collapse":"collapse","min-width":"90vw"}},_r=Mr((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Date")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"Protocol Revenue")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Your earnings")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Your stake")])])])],-1))),Rr={class:"result"},Br={class:"score"},Lr={class:"earned"},Fr={class:"rounds"};function xr(e,t,n,a,r,o){return(0,s.wg)(),(0,s.iD)("div",Pr,[(0,s._)("table",Ir,[_r,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>((0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",Rr,(0,i.zw)(o.timeString(e.timestamp)),1),(0,s._)("td",Br,(0,i.zw)(e.amount)+" ETH",1),(0,s._)("td",Lr,(0,i.zw)(e.yourStake/e.totalStaked*e.amount)+" ETH",1),(0,s._)("td",Fr,(0,i.zw)(e.yourStake)+" / "+(0,i.zw)(e.totalStaked)+" HANDS",1)])))),128))])])])}var Wr=n(15941);const Or={components:{GameMove:Rt,ProfileItem:fn},data(){return{selectedTab:"Completed"}},props:{events:{type:Array},address:{type:String}},computed:{selectedData(){return Wr.log("profile game list",this.events),this.events}},methods:{timeString(e){const t=this.$store.state.currentTime;return bn(e,t)},truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}}},Gr=(0,gn.Z)(Or,[["render",xr],["__scopeId","data-v-59c5d9b6"]]),Hr=Gr;var Dr=n(15941);const Nr={components:{ModalStake:Er,ListStaking:Hr,ProfileIcon:Pa},data(){return{stakingContract:null,handsTokenContract:null,affiliateContract:null,activeAccount:null,handsTokenBalance:0,handsStakedBalance:0,totalHandsStakedBalance:0,stakerAmount:0,claimableEthForStaking:0,claimableEthForAffiliate:0,affiliateLink:null,onboardedAddresses:[],protocolFeeRevenue:0,totalStakedPerBlock:null,showModal:!1,isStake:!1,stakeFunction:()=>{Dr.log("stakeFunction")},yourStakeAtBlock:{},totalStakeAtBlock:{},recivedFundsList:[],handledEventIds:new Set}},computed:{triggerProcessEvents(){return this.$store.state.triggerProcessEvents},stakeEvents(){return this.$store.state.stakeEvents},unstakeEvents(){return this.$store.state.unstakeEvents},recievedFundsEvents(){return this.$store.state.recievedFundsEvents},processedRecievedFundsEvents(){return this.recivedFundsList.map((e=>{var t;const n=null===(t=Object.keys(this.totalStakeAtBlock))||void 0===t?void 0:t.reduce(((t,n)=>n<=e.blockNumber&&n>t?n:t),0),a=this.getTotalStakeAtBlock(n),s=this.getYourStakeAtBlock(n);return{...e,totalStaked:a,yourStake:s}}))},provider(){return this.$store.state.provider},getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new(it())(this.provider)},getWeb3Read(){return new(it())(new(it().providers.HttpProvider)(bt))}},mounted(){Dr.log("provider",this.provider),Dr.log("mainContracts",nt)},watch:{provider:{handler(e,t){Dr.log("provider changed",e),e&&(Dr.log("provider changed",e),this.init())},immediate:!0},triggerProcessEvents:{handler(){this.processEvents()},immediate:!0},activeAccount:{handler(){this.processEvents()},immediate:!0}},methods:{async init(){await this.setAccount(),await this.setContracts(),this.setHandsTokenBalance(),this.setHandsStakedBalance(),this.setTotalHandsStakedAmount(),this.setClaimableEthForStaking(),this.setClaimableEthForAffiliate(),this.setProtocolFeeRevenue(),this.subscribeToEvents()},async setAccount(){const e=await this.getWeb3.eth.getAccounts();Dr.log("accounts",e),this.activeAccount=e[0]},async setContracts(){this.stakingContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),this.$store.commit("setStakeContract",this.stakingContract),this.handsTokenContract=new this.getWeb3.eth.Contract(nt.deployedAbis.HandsToken,nt.deployedContracts.HandsToken),this.$store.commit("setHandsTokenContract",this.handsTokenContract),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async setHandsTokenBalance(){if(!this.handsTokenContract)return 0;const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18,setInterval((async()=>{const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18}),5e3)},async setHandsStakedBalance(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18}),5e3)},async setTotalHandsStakedAmount(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18}),5e3)},async setClaimableEthForStaking(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18}),5e3)},async setClaimableEthForAffiliate(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18,setInterval((async()=>{const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18}),5e3)},async setOnboardedAddresses(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e,setInterval((async()=>{const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e}),5e3)},async setProtocolFeeRevenue(){const e=await this.stakingContract.methods.getReceivedFundsForStaking().call();this.protocolFeeRevenue=e/10**18,Dr.log("getting recieved funds for staking",this.protocolFeeRevenue),setInterval((async()=>{const e=await this.stakingContract.methods.getReceivedFundsForStaking().call();this.protocolFeeRevenue=e/10**18,Dr.log("getting recieved funds for staking",this.protocolFeeRevenue)}),5e3)},addToHandledEvents(e,t){const n=`${e.transactionHash}-${t}-${e.logIndex}`;this.handledEventIds.add(n)},async stake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e7,n=(await this.handsTokenContract.methods.approve(nt.deployedContracts.Staking,this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}),await this.stakingContract.methods.stake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}));return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Dr.log("Staked",n),n}catch(e){return Dr.error("Error staking. Message:",e.message),e.reason&&Dr.error("Error reason:",e.reason),Dr.error("Error stack trace:",e.stack),e}},async unstake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.unstake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Dr.log("Unstaked",n),n}catch(e){return Dr.log("Error unstaking",e),e}},showStakeModal(){this.showModal=!0,this.isStake=!0,this.stakeFunction=this.stake},showUnstakeModal(){this.showModal=!0,this.isStake=!1,this.stakeFunction=this.unstake},async claim(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Dr.log("Claimed",n),n}catch(e){return Dr.log("Error claiming",e),e}},async claimAffiliateRewards(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),Dr.log("Claimed",n),n}catch(e){return Dr.log("Error claiming",e),e}},async registerAsConsumer(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.registerAsConsumer("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266").send({from:this.activeAccount,gasPrice:e,gasLimit:t});return Dr.log("Registered as consumer",n),n}catch(e){throw Dr.log("Error registering as a consumer:",e),e}},handleStakingEvent(e){Dr.log("recieved Staking event stakerman",e);const{staker:t,amount:n}=e.returnValues,a=e.blockNumber,s=n/10**18;this.yourStakeAtBlock[t.toLowerCase()]?this.yourStakeAtBlock[t.toLowerCase()][a]+=parseInt(s):(this.yourStakeAtBlock[t.toLowerCase()]={},this.yourStakeAtBlock[t.toLowerCase()][a]=parseInt(s)),this.totalStakeAtBlock[a]?this.totalStakeAtBlock[a]+=parseInt(s):this.totalStakeAtBlock[a]=parseInt(s),Dr.log("your stake at block",this.yourStakeAtBlock),Dr.log("total stake at block",this.totalStakeAtBlock)},handleUnstakingEvent(e){Dr.log("Unstaking event",e);const{staker:t,amount:n}=e.returnValues,a=e.blockNumber;this.yourStakeAtBlock[t.toLowerCase()]?this.yourStakeAtBlock[t.toLowerCase()][a]-=parseInt(realAmount):(this.yourStakeAtBlock[t.toLowerCase()]={},this.yourStakeAtBlock[t.toLowerCase()][a]=-parseInt(realAmount)),this.totalStakeAtBlock[a]?this.totalStakeAtBlock[a]-=parseInt(n):this.totalStakeAtBlock[a]=parseInt(n)},async handleRecievedFundsForStaking(e){var t;Dr.log("Recieved funds for staking event",e);const{amount:n}=e.returnValues,a=await this.getWeb3Read.eth.getBlock(e.blockNumber),s=a.timestamp,i=n/10**18,r=null===(t=Object.keys(this.totalStakeAtBlock))||void 0===t?void 0:t.reduce(((t,n)=>n<=e.blockNumber&&n>t?n:t),0);this.recivedFundsList.push({blockNumber:r,timestamp:s,amount:i}),Dr.log("recieved your stake at block",this.yourStakeAtBlock),Dr.log("recieved funds list",this.recivedFundsList)},async subscribeToEvents(){const e=this.stakingContract,t=this.activeAccount;Dr.log("Polling for events..."),Dr.log("contract:",e);const n=["Staked","Unstaked","ReceivedFundsForStaking"],a={Staked:this.handleStakingEvent,Unstaked:this.handleUnstakingEvent,ReceivedFundsForStaking:this.handleRecievedFundsForStaking},s=new Set;for(const i of n)e.events[i]().on("data",(e=>{const n=`${e.transactionHash}-${i}-${e.logIndex}`;s.has(n)||(Dr.log(`New ${i} event detected:`,e),a[i].call(this,e,t),s.add(n),this.$store.dispatch("addEvent",{eventName:i,event:e}))})).on("error",(e=>{Dr.error(`Error on event ${i}:`,e)}))},async fetchStakeEvents(e,t){const n=5e4,a=this.stakingContract;this.stakeEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){Dr.log(`Fetching stake events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("Staked",{fromBlock:s,toBlock:i});this.stakeEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},async fetchUnstakeEvents(e,t){const n=5e4,a=this.stakingContract;this.unstakeEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){Dr.log(`Fetching unstake events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("Unstaked",{fromBlock:s,toBlock:i});this.unstakeEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},async fetchRecievedFundsEvents(e,t){const n=5e4,a=this.stakingContract;this.recievedFundsEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){Dr.log(`Fetching recieved funds events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("ReceivedFundsForStaking",{fromBlock:s,toBlock:i});this.recievedFundsEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},processEvents(){this.yourStakeAtBlock={},this.totalStakeAtBlock={},this.recivedFundsList=[],this.handledEventIds=new Set,this.stakeEvents.forEach((e=>{this.handleStakingEvent(e),this.addToHandledEvents(e,"Staked")})),this.unstakeEvents.forEach((e=>{this.handleUnstakingEvent(e),this.addToHandledEvents(e,"Unstaked")})),this.recievedFundsEvents.forEach((e=>{this.handleRecievedFundsForStaking(e),this.addToHandledEvents(e,"ReceivedFundsForStaking")}))},async fetchPastEvents(){const e=32000576,t=await this.getWeb3.eth.getBlockNumber();await this.fetchStakeEvents(e,t),await this.fetchUnstakeEvents(e,t),await this.fetchRecievedFundsEvents(e,t),this.processEvents()},getYourStakeAtBlock(e){var t;const n=Object.keys(this.yourStakeAtBlock[null===(t=this.activeAccount)||void 0===t?void 0:t.toLowerCase()]||{}),a=n.reduce(((t,n)=>n<=e&&n>t?n:t),0);return this.yourStakeAtBlock[a]},getTotalStakeAtBlock(e){const t=Object.keys(this.totalStakeAtBlock),n=t.reduce(((t,n)=>n<=e&&n>t?n:t),0);return this.totalStakeAtBlock[n]},async getBlockNumber(){return await this.getWeb3.eth.getBlockNumber()}}},zr=(0,gn.Z)(Nr,[["render",yr]]),Ur=zr,$r={style:{gap:"50px"},class:"content staking-view"},Jr=(0,s._)("div",{style:{"margin-bottom":"56"},class:"profile-big"},null,-1),jr=(0,s._)("p",null,"Your Affiliate Rewards",-1),qr={style:{display:"flex","justify-content":"center",gap:"40px","align-items":"end"}},Vr={style:{margin:"0","margin-top":"-20px","margin-bottom":"-20px",padding:"0","align-items":"end","font-size":"100px"}},Yr=(0,s._)("span",{style:{"font-size":"50px"},class:"currency-symbol"},"ETH",-1),Zr={style:{display:"flex","margin-top":"60px","margin-bottom":"90px"}},Kr=(0,s._)("p",null,"Your Onboarded Users",-1);function Qr(e,t,n,a,r,o){var l,d,u,c;const p=(0,s.up)("router-link"),y=(0,s.up)("list-affiliate"),m=(0,s.up)("modal-stake"),h=(0,s.Q2)("modal");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",$r,[(0,s.Wm)(p,{class:"back",to:"/"}),Jr,jr,(0,s._)("div",qr,[(0,s._)("h1",Vr,[(0,s.Uk)((0,i.zw)(null===(l=this.claimableEthForAffiliate)||void 0===l?void 0:l.toString().split(".")[0])+"."+(0,i.zw)(null!==(d=null===(u=this.claimableEthForAffiliate)||void 0===u||null===(c=u.toString().split(".")[1])||void 0===c?void 0:c.substring(0,4))&&void 0!==d?d:"00")+" ",1),Yr])]),(0,s._)("div",Zr,[(0,s._)("button",{onClick:t[0]||(t[0]=(...e)=>o.claimAffiliateRewards&&o.claimAffiliateRewards(...e)),class:"button-dark"}," Claim Rewards "),(0,s._)("button",{onClick:t[1]||(t[1]=(...e)=>o.copyAffiliateLink&&o.copyAffiliateLink(...e)),class:"button-light"}," Copy Link ")]),(0,s._)("div",null,[Kr,(0,s.Wm)(y,{events:o.onboardedConsumerList,address:r.activeAccount},null,8,["events","address"])]),(0,s._)("div",null,[(0,s.Uk)(" Staking screen "),(0,s._)("div",null,[(0,s._)("div",null,"Hands token balance : "+(0,i.zw)(r.handsTokenBalance),1),(0,s._)("div",null,"Your staked amount : "+(0,i.zw)(r.handsStakedBalance),1),(0,s._)("div",null,"Share of total hands staked : "+(0,i.zw)(r.handsStakedBalance/r.totalHandsStakedBalance*100)+"%",1),(0,s._)("div",null,"Your claimable ETH for staking : "+(0,i.zw)(r.claimableEthForStaking),1),(0,s._)("div",null,"Protocol fee revenue : "+(0,i.zw)(r.protocolFeeRevenue),1),(0,s._)("div",null,"Protocol affiliate revenue : "+(0,i.zw)(e.protocolAffiliateRevenue),1),(0,s._)("div",null,"Total hands staked balance : "+(0,i.zw)(r.totalHandsStakedBalance),1),(0,s._)("div",null,[(0,s.Uk)("Your onboarded addresses : "),((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(r.onboardedAddresses,(e=>((0,s.wg)(),(0,s.iD)("div",{key:e},(0,i.zw)(e),1)))),128))]),(0,s._)("div",null,"Claimable Affiliate rewards : "+(0,i.zw)(r.claimableEthForAffiliate),1),(0,s._)("div",null,"Your affiliate link : "+(0,i.zw)(r.affiliateLink),1)]),(0,s._)("button",{onClick:t[2]||(t[2]=(...e)=>o.stake&&o.stake(...e))},"Stake 10 HANDS"),(0,s._)("button",{onClick:t[3]||(t[3]=(...e)=>o.unstake&&o.unstake(...e))},"Unstake 10 HANDS"),(0,s._)("button",{onClick:t[4]||(t[4]=(...e)=>o.claim&&o.claim(...e))},"Claim Staking Rewards"),(0,s._)("button",{onClick:t[5]||(t[5]=(...e)=>o.claimAffiliateRewards&&o.claimAffiliateRewards(...e))},"Claim Affiliate Rewards")])]),(0,s.wy)(((0,s.wg)(),(0,s.j4)(m,{show:r.showModal,"onUpdate:show":t[6]||(t[6]=e=>r.showModal=e),isStake:r.isStake,"onUpdate:isStake":t[7]||(t[7]=e=>r.isStake=e)},{default:(0,s.w5)((()=>[(0,s.Uk)(" Hello world ")])),_:1},8,["show","isStake"])),[[h,r.stakeFunction,"stakeFunction"]])],64)}const Xr=e=>((0,s.dD)("data-v-2845a109"),e=e(),(0,s.Cn)(),e),eo={style:{margin:"0 80px"}},to={style:{"table-layout":"fixed"}},no=Xr((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"star-symbol-table"}),(0,s._)("p",null,"Time Joined")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"clock-symbol-table"}),(0,s._)("p",null,"User")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user1-symbol-table"}),(0,s._)("p",null,"Total Revenue Generated")])]),(0,s._)("th",null,[(0,s._)("div",{class:"table-header-item"},[(0,s._)("div",{class:"user2-symbol-table"}),(0,s._)("p",null,"Revenue Timestamps")])])])],-1))),ao={class:"result"},so={class:"earned"},io={class:"round",colspan:"2"},ro={class:"rounds-container"};function oo(e,t,n,a,r,o){const l=(0,s.up)("profile-item");return(0,s.wg)(),(0,s.iD)("div",eo,[(0,s._)("table",to,[no,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(o.selectedData,((e,t)=>((0,s.wg)(),(0,s.iD)("tr",{key:t},[(0,s._)("td",ao,(0,i.zw)(e.timestamp),1),(0,s.Wm)(l,{address:e.user},null,8,["address"]),(0,s._)("td",so,(0,i.zw)(e.totalRevenue),1),(0,s._)("td",io,[(0,s._)("ul",ro,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(e.revenueTimestamps,((e,t)=>((0,s.wg)(),(0,s.iD)("div",{key:t,class:"rounds-list"},[(0,s._)("p",null,(0,i.zw)(e.amount)+" at "+(0,i.zw)(e.timestamp),1)])))),128))])])])))),128))])])])}var lo=n(15941);const uo={components:{GameMove:Rt,ProfileItem:fn},data(){return{selectedTab:"Completed"}},props:{events:{type:Array},address:{type:String}},computed:{selectedData(){return lo.log("profile game list",this.events),this.events}},methods:{truncateAddress(e){return(null===e||void 0===e?void 0:e.slice(0,6))+"..."+(null===e||void 0===e?void 0:e.slice(-4))}}},co=(0,gn.Z)(uo,[["render",oo],["__scopeId","data-v-2845a109"]]),po=co;var yo=n(15941);const mo={components:{ModalStake:Er,ListAffiliate:po},data(){return{stakingContract:null,handsTokenContract:null,affiliateContract:null,activeAccount:null,handsTokenBalance:0,handsStakedBalance:0,totalHandsStakedBalance:0,stakerAmount:0,claimableEthForStaking:0,claimableEthForAffiliate:0,affiliateLink:null,onboardedAddresses:[],protocolFeeRevenue:0,totalStakedPerBlock:null,showModal:!1,isStake:!1,stakeFunction:()=>{yo.log("stakeFunction")},yourConsumers:[],timeConsumerJoined:{},totalRewardsFromConsumer:{},rewardsArrayFromConsumer:{},recivedFundsList:[],consumerRegisteredEvents:[],rewardRecievedEvents:[],handledEventIds:new Set}},computed:{provider(){return this.$store.state.provider},getActiveAccount(){var e;return null===(e=this.activeAccount)||void 0===e?void 0:e.toLowerCase()},getWeb3(){return new(it())(this.provider)},onboardedConsumerList(){return this.yourConsumers.map((e=>({user:e,totalRevenue:this.totalRewardsFromConsumer[e],revenueTimestamps:this.rewardsArrayFromConsumer[e],timestamp:this.timeConsumerJoined[e]})))}},mounted(){yo.log("provider",this.provider),yo.log("mainContracts",nt)},watch:{provider:{handler(e,t){yo.log("provider changed",e),e&&(yo.log("provider changed",e),this.init())},immediate:!0}},methods:{copyAffiliateLink(){const e=new URL(window.location.href);e.searchParams.set("ref",this.activeAccount),navigator.clipboard.writeText(e.href),alert("Copied to clipboard!")},async init(){await this.setAccount(),await this.setContracts(),this.setHandsTokenBalance(),this.setHandsStakedBalance(),this.setTotalHandsStakedAmount(),this.setClaimableEthForStaking(),this.setClaimableEthForAffiliate(),this.setProtocolFeeRevenue(),this.fetchPastEvents(),this.subscribeToEvents()},async setAccount(){const e=await this.getWeb3.eth.getAccounts();yo.log("accounts",e),this.activeAccount=e[0]},async setContracts(){this.stakingContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Staking,nt.deployedContracts.Staking),this.handsTokenContract=new this.getWeb3.eth.Contract(nt.deployedAbis.HandsToken,nt.deployedContracts.HandsToken),this.affiliateContract=new this.getWeb3.eth.Contract(nt.deployedAbis.Affiliate,nt.deployedContracts.Affiliate)},async setHandsTokenBalance(){if(!this.handsTokenContract)return 0;const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18,setInterval((async()=>{const e=await this.handsTokenContract.methods.balanceOf(this.activeAccount).call();this.handsTokenBalance=e/10**18}),5e3)},async setHandsStakedBalance(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.stakedAmount(this.activeAccount).call();this.handsStakedBalance=e/10**18}),5e3)},async setTotalHandsStakedAmount(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewTotalStaked().call();this.totalHandsStakedBalance=e/10**18}),5e3)},async setClaimableEthForStaking(){if(!this.stakingContract)return 0;const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18,setInterval((async()=>{const e=await this.stakingContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForStaking=e/10**18}),5e3)},async setClaimableEthForAffiliate(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18,setInterval((async()=>{const e=await this.affiliateContract.methods.viewClaimableRewards(this.activeAccount).call();this.claimableEthForAffiliate=e/10**18}),5e3)},async setOnboardedAddresses(){if(!this.affiliateContract)return 0;const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e,setInterval((async()=>{const e=await this.affiliateContract.methods.getConsumersOfAffiliate(this.activeAccount).call();this.onboardedAddresses=e}),5e3)},async setProtocolFeeRevenue(){const e=await this.getWeb3.eth.getBalance(nt.deployedContracts.Bank);this.protocolFeeRevenue=e/10**18,setInterval((async()=>{const e=await this.getWeb3.eth.getBalance(nt.deployedContracts.Bank);this.protocolFeeRevenue=e/10**18}),5e3)},async stake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e7,n=(await this.handsTokenContract.methods.approve(nt.deployedContracts.Staking,this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}),await this.stakingContract.methods.stake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t}));return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),yo.log("Staked",n),n}catch(e){return yo.error("Error staking. Message:",e.message),e.reason&&yo.error("Error reason:",e.reason),yo.error("Error stack trace:",e.stack),e}},async unstake(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.unstake(this.getWeb3.utils.toWei("10","ether")).send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),yo.log("Unstaked",n),n}catch(e){return yo.log("Error unstaking",e),e}},showStakeModal(){this.showModal=!0,this.isStake=!0,this.stakeFunction=this.stake},showUnstakeModal(){this.showModal=!0,this.isStake=!1,this.stakeFunction=this.unstake},async claim(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.stakingContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),yo.log("Claimed",n),n}catch(e){return yo.log("Error claiming",e),e}},async claimAffiliateRewards(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.claimRewards().send({from:this.activeAccount,gasPrice:e,gasLimit:t});return await this.getWeb3.eth.getTransactionReceipt(n.transactionHash),yo.log("Claimed",n),n}catch(e){return yo.log("Error claiming",e),e}},async registerAsConsumer(){try{const e=this.getWeb3.utils.toWei("0.1","gwei"),t=3e6,n=await this.affiliateContract.methods.registerAsConsumer("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266").send({from:this.activeAccount,gasPrice:e,gasLimit:t});return yo.log("Registered as consumer",n),n}catch(e){throw yo.log("Error registering as a consumer:",e),e}},async handleConsumerRegisteredEvent(e){yo.log("Consumer registered event",e);const{consumer:t,affiliate:n}=e.returnValues,a=await this.getWeb3.eth.getBlock(e.blockNumber),s=a.timestamp;n.toLowerCase()===this.activeAccount.toLowerCase()&&(this.yourConsumers.push(t),this.timeConsumerJoined[t]=s)},async handleRewardRecievedEvent(e){yo.log("Reward recieved event",e);const{affiliate:t,consumer:n,amount:a}=e.returnValues,s=await this.getWeb3.eth.getBlock(e.blockNumber),i=s.timestamp;this.totalRewardsFromConsumer[n]?this.totalRewardsFromConsumer[n]+=parseInt(a):this.totalRewardsFromConsumer[n]=parseInt(a),this.rewardsArrayFromConsumer[n]?this.rewardsArrayFromConsumer[n].push({amount:parseFloat(a),timestamp:i}):this.rewardsArrayFromConsumer[n]=[parseInt(a)]},async subscribeToEvents(){const e=this.affiliateContract,t=this.activeAccount;yo.log("Polling for events..."),yo.log("contract:",e);const n=["ConsumerRegistered","RewardRecieved"],a={ConsumerRegistered:this.handleConsumerRegisteredEvent,RewardRecieved:this.handleRewardRecievedEvent},s=new Set;for(const i of n)e.events[i]().on("data",(e=>{const n=`${e.transactionHash}-${i}-${e.logIndex}`;s.has(n)||(yo.log(`New ${i} event detected:`,e),a[i].call(this,e,t),s.add(n))})).on("error",(e=>{yo.error(`Error on event ${i}:`,e)}))},async fetchConsumerRegisteredEvents(e,t){const n=5e4,a=this.affiliateContract;this.consumerRegisteredEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){yo.log(`Fetching ConsumerRegistered events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("ConsumerRegistered",{fromBlock:s,toBlock:i});this.consumerRegisteredEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},async fetchRewardRecievedEvents(e,t){const n=5e4,a=this.affiliateContract;this.rewardRecievedEvents=[];let s=e,i=Math.min(s+n,t);while(s<=t){yo.log(`Fetching RewardRecieved events from blocks ${s} to ${i}...`);const e=await a.getPastEvents("RewardRecieved",{fromBlock:s,toBlock:i});this.rewardRecievedEvents.push(...e),s=i+1,i=Math.min(s+n,t)}},processEvents(){this.consumerRegisteredEvents.forEach((e=>{this.handleConsumerRegisteredEvent(e)})),this.rewardRecievedEvents.forEach((e=>{this.handleRewardRecievedEvent(e)}))},async fetchPastEvents(){const e=32000576,t=await this.getWeb3.eth.getBlockNumber();await this.fetchConsumerRegisteredEvents(e,t),await this.fetchRewardRecievedEvents(e,t),this.processEvents()},async getBlockNumber(){return await this.getWeb3.eth.getBlockNumber()}}},ho=(0,gn.Z)(mo,[["render",Qr]]),go=ho,vo=[{path:"/",name:"home",component:ai},{path:"/profile/:id",name:"profile",component:$i},{path:"/staking",name:"staking",component:Ur},{path:"/affiliate",name:"affiliate",component:go}],fo=(0,qs.p7)({history:(0,qs.PO)("/"),routes:vo}),wo=fo;(0,a.ri)(js).use(sa).use(wo).mount("#app")},47123:()=>{},78446:()=>{},25880:()=>{},36563:()=>{},80950:()=>{},46601:()=>{},89214:()=>{},8623:()=>{},42480:()=>{},7748:()=>{},85568:()=>{},89568:()=>{},40127:()=>{},27790:()=>{},6506:()=>{},56619:()=>{},28325:()=>{},24654:()=>{},77108:()=>{},71156:()=>{},52361:()=>{},94616:()=>{},22644:()=>{},55024:()=>{},33523:()=>{},11734:()=>{},42009:()=>{}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var i=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.m=e,(()=>{n.amdO={}})(),(()=>{var e=[];n.O=(t,a,s,i)=>{if(!a){var r=1/0;for(u=0;u<e.length;u++){for(var[a,s,i]=e[u],o=!0,l=0;l<a.length;l++)(!1&i||r>=i)&&Object.keys(n.O).every((e=>n.O[e](a[l])))?a.splice(l--,1):(o=!1,i<r&&(r=i));if(o){e.splice(u--,1);var d=s();void 0!==d&&(t=d)}}return t}i=i||0;for(var u=e.length;u>0&&e[u-1][2]>i;u--)e[u]=e[u-1];e[u]=[a,s,i]}})(),(()=>{n.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;return n.d(t,{a:t}),t}})(),(()=>{n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}})(),(()=>{n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[]))})(),(()=>{n.u=e=>"js/"+e+"."+{101:"c63f2457",217:"ce5bcc8e",233:"f9e70079",297:"01860e01",314:"399aa542",348:"17e79f12",462:"8693b786",503:"100f4e5b",537:"2d419592",550:"c683c210",737:"a6429ec1",796:"b2ffcfe3",845:"f3a300d8",895:"c3e07fe1",901:"478802ae",951:"5aa61914"}[e]+".js"})(),(()=>{n.miniCssF=e=>{}})(),(()=>{n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{n.hmd=e=>(e=Object.create(e),e.children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e)})(),(()=>{n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{var e={},t="Handsy.io:";n.l=(a,s,i,r)=>{if(e[a])e[a].push(s);else{var o,l;if(void 0!==i)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var c=d[u];if(c.getAttribute("src")==a||c.getAttribute("data-webpack")==t+i){o=c;break}}o||(l=!0,o=document.createElement("script"),o.charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.setAttribute("data-webpack",t+i),o.src=a),e[a]=[s];var p=(t,n)=>{o.onerror=o.onload=null,clearTimeout(y);var s=e[a];if(delete e[a],o.parentNode&&o.parentNode.removeChild(o),s&&s.forEach((e=>e(n))),t)return t(n)},y=setTimeout(p.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=p.bind(null,o.onerror),o.onload=p.bind(null,o.onload),l&&document.head.appendChild(o)}}})(),(()=>{n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}})(),(()=>{n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e)})(),(()=>{n.p="/"})(),(()=>{var e={143:0};n.f.j=(t,a)=>{var s=n.o(e,t)?e[t]:void 0;if(0!==s)if(s)a.push(s[2]);else{var i=new Promise(((n,a)=>s=e[t]=[n,a]));a.push(s[2]=i);var r=n.p+n.u(t),o=new Error,l=a=>{if(n.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var i=a&&("load"===a.type?"missing":a.type),r=a&&a.target&&a.target.src;o.message="Loading chunk "+t+" failed.\n("+i+": "+r+")",o.name="ChunkLoadError",o.type=i,o.request=r,s[1](o)}};n.l(r,l,"chunk-"+t,t)}},n.O.j=t=>0===e[t];var t=(t,a)=>{var s,i,[r,o,l]=a,d=0;if(r.some((t=>0!==e[t]))){for(s in o)n.o(o,s)&&(n.m[s]=o[s]);if(l)var u=l(n)}for(t&&t(a);d<r.length;d++)i=r[d],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(u)},a=self["webpackChunkHandsy_io"]=self["webpackChunkHandsy_io"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})();var a=n.O(void 0,[998],(()=>n(40090)));a=n.O(a)})();
//# sourceMappingURL=app.2828a747.js.map