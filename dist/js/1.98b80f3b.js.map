{"version":3,"file":"js/1.98b80f3b.js","mappings":"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AChC,EAAiBC,SAAU,CAC1B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAMF,CAACD,EAAiBE,MAAO,CACvB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGF,CAACF,EAAiBG,aAAc,CAC9B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGF,CAACH,EAAiBI,SAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAG5F,CAACJ,EAAiBK,UAAW,CAC3B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAOF,CAACL,EAAiBM,SAAU,CAC1B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEF,CAACN,EAAiBO,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO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","sources":["webpack://Handsy.io/../src/baseEvmAdapter.ts","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://Handsy.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://Handsy.io/../src/interfaces.ts","webpack://Handsy.io/../src/supportedCurrencies.ts","webpack://Handsy.io/../src/config.ts","webpack://Handsy.io/../src/embedUtils.ts","webpack://Handsy.io/../src/isStream.ts","webpack://Handsy.io/../src/loglevel.ts","webpack://Handsy.io/../src/messages.ts","webpack://Handsy.io/../src/utils.ts","webpack://Handsy.io/../src/inpage-provider.ts","webpack://Handsy.io/../src/PopupHandler.ts","webpack://Handsy.io/../src/siteMetadata.ts","webpack://Handsy.io/../src/embed.ts","webpack://Handsy.io/../src/torusWalletAdapter.ts","webpack://Handsy.io/./node_modules/fast-deep-equal/index.js"],"sourcesContent":["import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\n\nexport abstract class BaseEvmAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n    const { chainNamespace, chainId } = this.chainConfig;\n    const accounts = await this.provider.request<never, string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n\n      const signedMessage = await this.provider.request<[string, string], string>({\n        method: \"personal_sign\",\n        params: [challenge, accounts[0]],\n      });\n\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        signedMessage as string,\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<never, string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\",\n} as const;\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\",\n} as const;\n\nexport const SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n  ARBITRUM_MAINNET: \"arbitrum_mainnet\",\n  OPTIMISM_MAINNET: \"optimism_mainnet\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\",\n  ALPHA: \"alpha\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = (typeof PAYMENT_PROVIDER)[keyof typeof PAYMENT_PROVIDER];\n\nexport type SUPPORTED_PAYMENT_NETWORK_TYPE = (typeof SUPPORTED_PAYMENT_NETWORK)[keyof typeof SUPPORTED_PAYMENT_NETWORK];\n\nexport type TORUS_BUILD_ENV_TYPE = (typeof TORUS_BUILD_ENV)[keyof typeof TORUS_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrenciesByChain: Partial<Record<string, { value: string; display: string }[]>>;\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\nexport type ETHEREUM_NETWORK_TYPE = \"sepolia\" | \"mainnet\" | \"goerli\" | \"localhost\" | \"matic\" | \"mumbai\" | \"xdai\" | \"bsc_mainnet\" | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\"\n  | \"wechat\"\n  | \"kakao\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Size of the widget button\n   * @defaultValue 56\n   */\n  buttonSize?: number;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface TorusLoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Chain Network to use\n   */\n  chainNetwork?: SUPPORTED_PAYMENT_NETWORK_TYPE;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * Returns if the logged in user is new\n   */\n  isNewUser: boolean;\n\n  /**\n   * login type of the logged in user (google, facebook etc)\n   */\n  typeOfLogin: LOGIN_TYPE;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\n\nexport interface TorusParams {\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * bnb uses https://bnb.tor.us,\n   *\n   * polygon uses https://polygon.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n\n  /**\n   * Setting `useWalletConnect` to true allows to display wallet connect qr scanner from torus-embed.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useWalletConnect?: boolean;\n\n  /**\n   * Setting mfa level to `default` will present mfa screen to user on every third login\n   * Setting mfa level to `optional` will present mfa screen to user on every login but user can skip it\n   * Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login\n   * Setting mfa level to`none` will make the user skip the mfa setup screen\n   *\n   * Defaults to default\n   * @defaultValue default\n   */\n  mfaLevel?: \"none\" | \"default\" | \"optional\" | \"mandatory\";\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n","import { PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE } from \"./interfaces\";\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nexport const CRYPTO_COMPARE_CURRENCIES = [\n  \"ETH\",\n  \"USDT\",\n  \"USDC\",\n  \"TUSD\",\n  \"EOSDT\",\n  \"USD\",\n  \"DAI\",\n  \"GUSD\",\n  \"DKKT\",\n  \"PAX\",\n  \"ILS\",\n  \"RUB\",\n  \"BYN\",\n  \"EUR\",\n  \"GBP\",\n  \"JPY\",\n  \"KRW\",\n  \"PLN\",\n  \"MXN\",\n  \"AUD\",\n  \"BRL\",\n  \"CAD\",\n  \"CHF\",\n  \"KPW\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"XOF\",\n  \"CNHT\",\n  \"DOGE\",\n  \"UAH\",\n  \"TRY\",\n  \"HKD\",\n  \"XJP\",\n  \"SGD\",\n  \"USC\",\n  \"NZD\",\n  \"NGN\",\n  \"RUR\",\n  \"COP\",\n  \"GHS\",\n  \"EGP\",\n  \"IDR\",\n  \"BHD\",\n  \"CRC\",\n  \"PEN\",\n  \"AED\",\n  \"DOP\",\n  \"PKR\",\n  \"HUF\",\n  \"VND\",\n  \"XAR\",\n  \"LTC\",\n  \"RON\",\n  \"OMR\",\n  \"MYR\",\n  \"DKK\",\n  \"UGX\",\n  \"ZMW\",\n  \"SAR\",\n  \"SEK\",\n  \"GEL\",\n  \"RWF\",\n  \"IRR\",\n  \"TZS\",\n  \"CNY\",\n  \"VEF\",\n  \"BDT\",\n  \"HRK\",\n  \"CLP\",\n  \"THB\",\n  \"XAF\",\n  \"ARS\",\n  \"UYU\",\n  \"SZL\",\n  \"KZT\",\n  \"NOK\",\n  \"KES\",\n  \"PAB\",\n  \"INR\",\n  \"CZK\",\n  \"MAD\",\n  \"TWD\",\n  \"PHP\",\n  \"ZAR\",\n  \"BOB\",\n  \"CDF\",\n  \"DASH\",\n  \"VES\",\n  \"ISK\",\n  \"MWK\",\n  \"BAM\",\n  \"TTD\",\n  \"XRP\",\n  \"JOD\",\n  \"RSD\",\n  \"HNL\",\n  \"BGN\",\n  \"GTQ\",\n  \"BWP\",\n  \"XMR\",\n  \"MMK\",\n  \"QAR\",\n  \"AOA\",\n  \"KWD\",\n  \"MUR\",\n  \"WUSD\",\n  \"WEUR\",\n  \"WAVES\",\n  \"WTRY\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"AWG\",\n  \"MDL\",\n  \"BTO\",\n  \"EURS\",\n  \"CHFT\",\n  \"MKD\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MVR\",\n  \"VOLLAR\",\n  \"CKUSD\",\n  \"KHR\",\n  \"VUV\",\n  \"BITCNY\",\n  \"QC\",\n  \"BBD\",\n  \"NAD\",\n  \"NPR\",\n  \"PGK\",\n  \"PYG\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"XLM\",\n  \"BNB\",\n  \"SCR\",\n  \"BAT\",\n  \"CRO\",\n  \"HT\",\n  \"KCS\",\n  \"LEO\",\n  \"LINK\",\n  \"MKR\",\n  \"NPXS\",\n  \"OMG\",\n  \"REP\",\n  \"ZB\",\n  \"ZIL\",\n  \"ZRX\",\n  \"BCH\",\n  \"BZD\",\n  \"CUP\",\n  \"CVE\",\n  \"DJF\",\n  \"DZD\",\n  \"ERN\",\n  \"ETB\",\n  \"FJD\",\n  \"FKP\",\n  \"BUSD\",\n  \"ANCT\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"CNYX\",\n  \"IQD\",\n  \"UZS\",\n  \"TND\",\n  \"GGP\",\n  \"XAU\",\n  \"KGS\",\n  \"GIP\",\n  \"JMD\",\n  \"ZEC\",\n  \"USDP\",\n  \"BSV\",\n  \"EMC2\",\n  \"SNT\",\n  \"GTO\",\n  \"POWR\",\n  \"EUSD\",\n  \"EURT\",\n  \"BCY\",\n  \"BTS\",\n  \"ATM\",\n  \"BLOCKPAY\",\n  \"ARDR\",\n  \"AMP\",\n  \"B2X\",\n  \"BITGOLD\",\n  \"BITEUR\",\n  \"ATB\",\n  \"BITUSD\",\n  \"AGRS\",\n  \"DFXT\",\n  \"HIKEN\",\n  \"BIX\",\n  \"KNC\",\n  \"EOS\",\n  \"COB\",\n  \"COSS\",\n  \"BMH\",\n  \"NANO\",\n  \"BDG\",\n  \"BNT\",\n  \"XVG\",\n  \"LKK1Y\",\n  \"LKK\",\n  \"USDK\",\n  \"EURN\",\n  \"NZDT\",\n  \"JSE\",\n  \"GMD\",\n  \"GNF\",\n  \"GYD\",\n  \"YER\",\n  \"XPF\",\n  \"HTG\",\n  \"SLL\",\n  \"SOS\",\n  \"WST\",\n  \"SVC\",\n  \"SYP\",\n  \"NEO\",\n  \"KMF\",\n  \"JUMP\",\n  \"AYA\",\n  \"BLAST\",\n  \"WGR\",\n  \"BCN\",\n  \"BTG\",\n  \"URALS\",\n  \"INN\",\n  \"USDQ\",\n  \"CNH\",\n  \"HUSD\",\n  \"BKRW\",\n  \"NZDX\",\n  \"EURX\",\n  \"CADX\",\n  \"USDEX\",\n  \"JPYX\",\n  \"AUDX\",\n  \"VNDC\",\n  \"EON\",\n  \"GBPX\",\n  \"CHFX\",\n  \"USDJ\",\n  \"IDRT\",\n  \"USDS\",\n  \"USDN\",\n  \"BIDR\",\n  \"IDK\",\n  \"BSD\",\n  \"BTN\",\n  \"KYD\",\n  \"NIO\",\n  \"SBD\",\n  \"SDG\",\n  \"SHP\",\n  \"TOP\",\n  \"XCD\",\n  \"XCHF\",\n  \"CNYT\",\n  \"GYEN\",\n  \"ZUSD\",\n  \"GOLD\",\n  \"TRX\",\n  \"TRYB\",\n  \"PLATC\",\n  \"STRAX\",\n  \"UST\",\n  \"GLM\",\n  \"VAI\",\n  \"BRZ\",\n  \"DDRST\",\n  \"XAUT\",\n  \"MIM\",\n];\n\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\n    \"AUD\",\n    \"BGN\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CNY\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EGP\",\n    \"EUR\",\n    \"GBP\",\n    \"HKD\",\n    \"HRK\",\n    \"IDR\",\n    \"ILS\",\n    \"JPY\",\n    \"JOD\",\n    \"KES\",\n    \"KRW\",\n    \"KWD\",\n    \"LKR\",\n    \"MAD\",\n    \"MXN\",\n    \"MYR\",\n    \"NGN\",\n    \"NOK\",\n    \"NZD\",\n    \"OMR\",\n    \"PEN\",\n    \"PKR\",\n    \"PLN\",\n    \"RON\",\n    \"RUB\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TWD\",\n    \"USD\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"AUD\",\n    \"CAD\",\n    \"NZD\",\n    \"CNY\",\n    \"ARS\",\n    \"BRL\",\n    \"CHF\",\n    \"CLP\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"HKD\",\n    \"ILS\",\n    \"INR\",\n    \"ISK\",\n    \"JPY\",\n    \"KRW\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"PHP\",\n    \"PLN\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  // https://support.ramp.network/en/articles/471-supported-fiat-currencies\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"BMD\",\n    \"BAM\",\n    \"BWP\",\n    \"BRL\",\n    \"BGN\",\n    \"COP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"GEL\",\n    \"GTQ\",\n    \"HNL\",\n    \"HUF\",\n    \"ISK\",\n    \"INR\",\n    \"ILS\",\n    \"KZT\",\n    \"KES\",\n    \"KWD\",\n    \"LAK\",\n    \"MKD\",\n    \"MYR\",\n    \"MXN\",\n    \"MDL\",\n    \"MZN\",\n    \"NZD\",\n    \"NGN\",\n    \"PYG\",\n    \"PEN\",\n    \"PLN\",\n    \"RON\",\n    \"RSD\",\n    \"SGD\",\n    \"ZAR\",\n    \"LKR\",\n    \"SEK\",\n    \"CHF\",\n    \"TJS\",\n    \"THB\",\n    \"UYU\",\n  ],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://help.mercuryo.io/en/articles/6121246-which-fiat-currencies-are-supported\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\n    \"EUR\",\n    \"USD\",\n    \"GBP\",\n    \"TRY\",\n    \"JPY\",\n    \"BRL\",\n    \"NGN\",\n    \"VND\",\n    \"MXN\",\n    \"KRW\",\n    \"PLN\",\n    \"SEK\",\n    \"CHF\",\n    \"CAD\",\n    \"CZK\",\n    \"DKK\",\n    \"BGN\",\n    \"HKD\",\n    \"AUD\",\n    \"INR\",\n  ],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\n    \"ARS\",\n    \"AUD\",\n    \"BBD\",\n    \"BGN\",\n    \"BMD\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CLP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GIP\",\n    \"HRK\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"ISK\",\n    \"JMD\",\n    \"JPY\",\n    \"KES\",\n    \"KRW\",\n    \"MDL\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"NZD\",\n    \"PEN\",\n    \"PHP\",\n    \"PLN\",\n    \"PYG\",\n    \"RON\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TZS\",\n    \"USD\",\n    \"ZAR\",\n  ],\n  [PAYMENT_PROVIDER.BANXA]: [\"AUD\", \"CAD\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"NOK\", \"NZD\", \"NZD\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"TRY\", \"USD\"],\n};\n\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nexport function supportedFiatCurrencies(provider: PAYMENT_PROVIDER_TYPE) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter((currency) => cryptoCompareCurrenciesSet.has(currency));\n}\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, WALLET_VERIFIERS } from \"./interfaces\";\nimport { supportedFiatCurrencies } from \"./supportedCurrencies\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"aave\", display: \"AAVE\" },\n        { value: \"bat\", display: \"BAT\" },\n        { value: \"dai\", display: \"DAI\" },\n        { value: \"eth\", display: \"ETH\" },\n        { value: \"mkr\", display: \"MKR\" },\n        { value: \"matic\", display: \"MATIC\" },\n        { value: \"usdt\", display: \"USDT\" },\n        { value: \"uni\", display: \"UNI\" },\n        { value: \"usdc\", display: \"USDC\" },\n        { value: \"weth\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"eth_polygon\", display: \"ETH\" },\n        { value: \"matic_polygon\", display: \"MATIC\" },\n        { value: \"usdc_polygon\", display: \"USDC\" },\n        { value: \"usdt_polygon\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"bnb_bsc\", display: \"BNB\" },\n        { value: \"busd_bsc\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"avax_cchain\", display: \"AVAX\" },\n        { value: \"usdc_cchain\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"eth_arbitrum\", display: \"ETH\" },\n        { value: \"usdc_arbitrum\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"eth_optimism\", display: \"ETH\" },\n        { value: \"usdc_optimism\", display: \"USDC\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"WBTC\", display: \"WBTC\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"UNI\", display: \"UNI\" },\n        { value: \"WETH\", display: \"WETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"mUSDC\", display: \"USDC\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"MWETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"AVAXC\", display: \"AVAX\" },\n        { value: \"AVAXCUSDC\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BBUSD\", display: \"BUSD\" },\n      ],\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"MATIC_BAT\", display: \"BAT\" },\n        { value: \"MATIC_DAI\", display: \"DAI\" },\n        { value: \"MATIC_MATIC\", display: \"MATIC\" },\n        { value: \"MATIC_USDC\", display: \"USDC\" },\n        { value: \"MATIC_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"AVAX_AVAX\", display: \"AVAX\" },\n        { value: \"AVAX_USDC\", display: \"USDC\" },\n        { value: \"AVAX_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"ARBITRUM_ETH\", display: \"ETH\" },\n        { value: \"ARBITRUM_USDC.e\t\", display: \"USDC\" },\n        { value: \"ARBITRUM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"OPTIMISM_DAI\", display: \"DAI\" },\n        { value: \"OPTIMISM_OPTIMISM\", display: \"OPTIMISM\" },\n        { value: \"OPTIMISM_USDC\", display: \"USDC\" },\n        { value: \"OPTIMISM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BSC_BNB\", display: \"BNB\" },\n        { value: \"BSC_BUSD\", display: \"BUSD\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"USDC\", display: \"USDC\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"DAI\", display: \"DAI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"1INCH\", display: \"1INCH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"1INCH\", display: \"1INCH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"WETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"ETH\", display: \"ETH\" },\n      ],\n    },\n    includeFees: true,\n    enforceMax: true,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"UNI\", display: \"UNI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n      // [BSC_MAINNET]: [{ value: 'BNB', display: 'BNB' }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  },\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`,\n};\n","import { Stream } from \"pump\";\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function isStream(stream: any) {\n  return stream !== null && typeof stream === \"object\" && typeof stream.pipe === \"function\";\n}\n\nexport function isWritableStream(stream: any) {\n  return isStream(stream) && stream.writable !== false && typeof stream._write === \"function\" && typeof stream._writableState === \"object\";\n}\n\nexport function isReadableStream(stream: any) {\n  return isStream(stream) && stream.readable !== false && typeof stream._read === \"function\" && typeof stream._readableState === \"object\";\n}\n\nexport function isDuplexStream(stream: any) {\n  return isWritableStream(stream) && isReadableStream(stream);\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n  },\n};\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { IntegrityParams, PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE, PaymentParams, TORUS_BUILD_ENV_TYPE } from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider as PAYMENT_PROVIDER_TYPE]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider as PAYMENT_PROVIDER_TYPE];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain)\n      .flat()\n      .map((currency) => currency.value);\n\n    const finalCryptoCurrency =\n      provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency))\n      errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: { ...(req || {}), cause: \"The request 'method' must be a non-empty string.\" },\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (\n  buildEnv: TORUS_BUILD_ENV_TYPE,\n  integrity: IntegrityParams\n): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // Do not change this line\n  const version = process.env.TORUS_EMBED_VERSION;\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response: { data: string };\n      if (!config.prodTorusUrl)\n        response = await get(`${config.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, { useAPIKey: true });\n      else response = { data: config.prodTorusUrl };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      config.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    case \"alpha\":\n      torusUrl = \"https://alpha.tor.us\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { EthereumProviderError, rpcErrors } from \"@metamask/rpc-errors\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport dequal from \"fast-deep-equal\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport { isDuplexStream } from \"./isStream\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve: (value: Partial<unknown> | PromiseLike<Partial<unknown>>) => void, reject: (reason?: unknown) => void, unwrapResult = true) =>\n  (error: Error, response: { result?: unknown; error?: unknown }) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isTorus: true;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...TorusInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback as (...args: unknown[]) => void);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = ((err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        }) as (...args: unknown[]) => void;\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false) as (...args: unknown[]) => void\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInpageProvider;\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { getPopupFeatures } from \"./utils\";\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: URL; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { get, setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport { handleStream, htmlToElement } from \"./embedUtils\";\nimport TorusInpageProvider from \"./inpage-provider\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  LocaleLinks,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getTorusUrl,\n  getUserLanguage,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n  \"wallet_addEthereumChain\",\n  \"wallet_switchEthereumChain\",\n];\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\", { version: \"\" });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  buttonSize: number;\n\n  torusUrl: string;\n\n  torusIframe: HTMLIFrameElement;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusWidgetVisibility: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: TorusInpageProvider;\n\n  provider: TorusInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isLoginCallback: () => void;\n\n  paymentProviders = configuration.paymentProviders;\n\n  private loginHint = \"\";\n\n  private useWalletConnect: boolean;\n\n  private isCustomLogin = false;\n\n  constructor({ buttonPosition = BUTTON_POSITION.BOTTOM_LEFT, buttonSize = 56, modalZIndex = 99999, apiKey = \"torus-default\" }: TorusCtorArgs = {}) {\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network = {\n      host: \"mainnet\",\n      chainId: null,\n      networkName: \"\",\n      blockExplorer: \"\",\n      ticker: \"\",\n      tickerName: \"\",\n    },\n    loginConfig = {},\n    showTorusButton = true,\n    integrity = {\n      version: \"\",\n    },\n    whiteLabel,\n    useWalletConnect = false,\n    mfaLevel = \"default\",\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";\n    else torusIframeUrl.pathname += \"/popup\";\n\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations =\n      mergedTranslations[defaultLanguage as keyof LocaleLinks<unknown>] ||\n      configuration.translations[getUserLanguage() as keyof LocaleLinks<unknown>];\n    this.embedTranslations = languageTranslations.embed;\n\n    return new Promise((resolve, reject) => {\n      this.torusIframe.onload = async () => {\n        // only do this if iframe is not full screen\n        this._setupWeb3();\n        const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n        initStream.on(\"data\", (chunk) => {\n          const { name, data, error } = chunk;\n          if (name === \"init_complete\" && data.success) {\n            // resolve promise\n            this.isInitialized = true;\n            this._displayIframe(this.isIframeFullScreen);\n            resolve(undefined);\n          } else if (error) {\n            reject(new Error(error));\n          }\n        });\n        initStream.write({\n          name: \"init_stream\",\n          data: {\n            loginConfig,\n            whiteLabel: this.whiteLabel,\n            buttonPosition: this.buttonPosition,\n            buttonSize: this.buttonSize,\n            torusWidgetVisibility: this.torusWidgetVisibility,\n            apiKey: this.apiKey,\n            network,\n            mfaLevel,\n          },\n        });\n      };\n      window.document.head.appendChild(this.styleLink);\n      window.document.body.appendChild(this.torusIframe);\n      window.document.body.appendChild(this.torusAlertContainer);\n    });\n  }\n\n  login({ verifier = \"\", login_hint: loginHint = \"\" }: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (arg: unknown) => {\n        const status = arg as { loggedIn: boolean };\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest }: NetworkInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (arg: unknown) => {\n        const chunk = arg as { data: { err: string; success: boolean } };\n        const { err, success } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occurred\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW,\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (arg: unknown) => {\n      const chunk = arg as { name: string; data: { instanceId: string } };\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(\n      url.href,\n      {\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n      },\n      { useAPIKey: true }\n    );\n  }\n\n  getUserInfo(message: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { approved: boolean; payload: UserInfo; rejected: boolean; newRequest: boolean } };\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (arg2: unknown) => {\n                const handlerChunk = arg2 as { name: string; data: { approved: boolean; payload: UserInfo } };\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: Omit<UserInfo, \"isNewUser\"> }): Promise<boolean> {\n    const { privateKey, userInfo } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\") as Substream;\n        const loginHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({ name: \"login_with_private_key_request\", data: { privateKey, userInfo } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner(): Promise<boolean> {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\") as Substream;\n        const walletConnectHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({ name: \"wallet_connect_stream_req\" });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;\n      else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }: { preopenInstanceId: string; close: boolean }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\") as Substream;\n    torusWidgetVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected _setupWeb3(): void {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m: any) => {\n      // @ts-ignore\n      const originalMethod = inpageProvider[m];\n      // @ts-ignore\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void): void {\n    const loginHandler = (arg: unknown) => {\n      const data = arg as { err: Error; selectedAddress: string };\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({ name: \"oauth_modal\", data: { calledFromEmbed } });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: { calledFromEmbed, verifier: this.requestedVerifier, preopenInstanceId, login_hint: this.loginHint },\n      });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    this._setEmbedWhiteLabel(torusAlert);\n\n    this.torusAlertContainer.style.display = \"block\";\n    this.torusAlertContainer.appendChild(torusAlert);\n\n    successAlert.addEventListener(\"click\", () => {\n      this._handleWindow(preopenInstanceId, {\n        url,\n        target: \"_blank\",\n        features: FEATURES_CONFIRM_WINDOW,\n      });\n      torusAlert.remove();\n\n      if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n    });\n  }\n}\n\nexport default Torus;\n","import Torus, { LoginParams, NetworkInterface, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  IProvider,\n  log,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\nexport interface TorusWalletOptions extends BaseAdapterSettings {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: LoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n}\n\nexport class TorusWalletAdapter extends BaseEvmAdapter<never> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_EVM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: LoginParams = {};\n\n  constructor(params: TorusWalletOptions = {}) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n  }\n\n  get provider(): IProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.torusInstance) {\n      return this.torusInstance.provider as unknown as IProvider;\n    }\n    return null;\n  }\n\n  set provider(_: IProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n\n    const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n    const network: NetworkInterface = {\n      chainId: Number.parseInt(chainId, 16),\n      host: rpcTarget,\n      blockExplorer,\n      networkName: displayName,\n      ticker,\n      tickerName,\n      // decimals: decimals || 18,\n    };\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus evm adapter init\");\n    await this.torusInstance.init({\n      showTorusButton: false,\n      ...this.initParams,\n      network,\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_EVM);\n\n    try {\n      log.debug(\"initializing torus evm adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with torus evm provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<IProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_EVM });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      const chainId = await this.torusInstance.provider.request<string>({ method: \"eth_chainId\" });\n      if (chainId && parseInt(chainId) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n        const { chainId: _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n        const network: NetworkInterface = {\n          chainId: Number.parseInt(_chainId, 16),\n          host: rpcTarget,\n          blockExplorer,\n          networkName: displayName,\n          tickerName,\n          ticker,\n        };\n        // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed\n        // chainConfig but will connect to the one that user switched to.\n        // So here trying to switch network to the one that was initially passed in chainConfig.\n        await this.torusInstance.setProvider({\n          ...network,\n        });\n        const updatedChainID = await this.torusInstance.ethereum.request<string>({ method: \"eth_chainId\" });\n        if (updatedChainID && parseInt(updatedChainID) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n          throw WalletInitializationError.fromCode(\n            5000,\n            `Not connected to correct chainId. Expected: ${(this.chainConfig as CustomChainConfig).chainId}, Current: ${updatedChainID}`\n          );\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_EVM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_STATUS.ERRORED, error);\n      throw error instanceof Web3AuthError ? error : WalletLoginError.connectionError(\"Failed to login with torus wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    this.torusInstance.hideTorusButton();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo(\"\");\n    return userInfo;\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    // TODO: add these in torus wallet.\n    // await this.torusInstance?.provider.request({\n    //   method: \"wallet_addEthereumChain\",\n    //   params: [\n    //     {\n    //       chainId: chainConfig.chainId,\n    //       chainName: chainConfig.displayName,\n    //       rpcUrls: [chainConfig.rpcTarget],\n    //       blockExplorerUrls: [chainConfig.blockExplorer],\n    //       nativeCurrency: {\n    //         name: chainConfig.tickerName,\n    //         symbol: chainConfig.ticker,\n    //         decimals: chainConfig.decimals || 18,\n    //       },\n    //     },\n    //   ],\n    // });\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    // TODO: add these in torus wallet.\n    // await this.torusInstance?.provider.request({\n    //   method: \"wallet_switchEthereumChain\",\n    //   params: [{ chainId: params.chainId }],\n    // });\n    const chainConfig = this.getChainConfig(params.chainId) as CustomChainConfig;\n    await this.torusInstance?.setProvider({\n      host: chainConfig.rpcTarget,\n      chainId: parseInt(chainConfig.chainId, 16),\n      networkName: chainConfig.displayName,\n      blockExplorer: chainConfig.blockExplorer,\n      ticker: chainConfig.ticker,\n      tickerName: chainConfig.tickerName,\n    });\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":["BaseEvmAdapter","BaseAdapter","async","_","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","provider","status","ADAPTER_STATUS","WalletLoginError","chainNamespace","chainId","accounts","request","method","length","existingToken","getSavedToken","name","isExpired","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","signChallenge","signedMessage","params","verifySignedChallenge","sessionTime","clientId","web3AuthNetwork","saveToken","super","checkDisconnectionRequirements","clearToken","rehydrated","emit","ADAPTER_EVENTS","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","WALLET_VERIFIERS","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","ARBITRUM_MAINNET","OPTIMISM_MAINNET","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","ALPHA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders$1","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","configuration","supportedVerifierList","values","prodTorusUrl","localStorageKeyPrefix","htmlToElement","html","template","document","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleStream","handle","eventName","handler","handlerWrapper","chunk","removeListener","on","isStream","stream","pipe","isWritableStream","writable","_write","_writableState","isReadableStream","readable","_read","_readableState","isDuplexStream","log","loglevel","messages","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","warnings","enableDeprecation","sendDeprecation","paymentProviders","validatePaymentProvider","isValid","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","rpcErrors","message","data","_objectSpread","cause","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","getPreopenInstanceId","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","versionUsed","response","get","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","hasOwnProperty","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","undefined","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","SafeEventEmitter","getRpcPromiseCallback","resolve","reject","unwrapResult","arguments","Array","isArray","result","TorusInpageProvider","constructor","connectionStream","jsonRpcStreamName","_defineProperty","Error","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_initializeState","send","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","isConnected","jsonRpcConnection","createStreamMiddleware","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcEngine","events","type","args","Promise","callback","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumProviderError","streamName","isEthAccounts","finalAccounts","account","dequal","hasEmittedConnection","PopupHandler","_ref","url","timeout","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","open","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","engine","domainMetadata","originalError","UNSAFE_METHODS","torusIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","Torus","buttonPosition","buttonSize","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","setAPIKey","alertZIndex","isIframeFullScreen","enableLogging","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","hash","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","body","login","verifier","login_hint","loginHint","ethereum","enable","logout","logOutStream","statusStream","statusStreamHandler","arg","loggedIn","clearInit","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","_excluded","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","forEach","x","walletWindow","_ref2","verifierId","isExtended","walletVerifier","openloginVerifier","headers","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","arg2","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","once","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","_this$whiteLabel","logoUrl","_this$whiteLabel2","_this$whiteLabel3","logoLight","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","_len","_key","apply","handleLoginCb","then","_showLoginPopup","catch","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","addEventListener","children","TorusWalletAdapter","WALLET_ADAPTERS","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","torusWalletOptions","adapterSettings","initParams","loginSettings","torusInstance","options","init","checkInitializationRequirements","displayName","rpcTarget","autoConnect","connect","checkConnectionRequirements","WalletInitializationError","adapter","_chainId","updatedChainID","reconnected","Web3AuthError","cleanup","disconnectSession","disconnect","checkAddChainRequirements","addChainConfig","_this$torusInstance","checkSwitchChainRequirements","setAdapterSettings","require","module","exports","equal","a","b","RegExp","flags","valueOf"],"sourceRoot":""}